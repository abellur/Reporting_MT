<job>
  <name>JB_Load_Pre_DIMCLAIMTRANSACTIONEXTENSION</name>
  <description>Prepare the load for DIM_CLAIMTRANSACTIONEXTENSION table.</description>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/public/ETL/Dimensions</directory>
  <created_user>-</created_user>
  <created_date>2017/10/06 11:23:18.994</created_date>
  <modified_user>-</modified_user>
  <modified_date>2017/10/06 13:35:18.416</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>4SBI_Staging</name>
    <server>${G_STAGING_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_STAGING_DB_NAME}</database>
    <port>${G_STAGING_DB_PORT}</port>
    <username>${G_STAGING_DB_USERNAME}</username>
    <password>${G_STAGING_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_STAGING_DB_DATA}</data_tablespace>
    <index_tablespace>${G_STAGING_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_STAGING_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    <slaveserver>
      <name>4Sight BI - PDI Server</name>
      <hostname>10.0.0.21</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Carte 1</name>
      <hostname>localhost</hostname>
      <port>9081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>DI Server</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_DEV</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_SERVER</name>
      <hostname>http://magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_TEST</name>
      <hostname>magspentahotest</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_BTS</name>
      <hostname>129.144.25.104</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_DEV</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Master</name>
      <hostname>localhost</hostname>
      <port>8081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SERVER1</name>
      <hostname>LOCALHOST</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE ONE</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4a418bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE TWO</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave1</name>
      <hostname>localhost</hostname>
      <port>8082</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave2</name>
      <hostname>localhost</hostname>
      <port>8083</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave3</name>
      <hostname>localhost</hostname>
      <port>8084</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>local DIS</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>magspentahodev</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
  </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <checkpoint-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <max_nr_retries/>
    <run_retry_period/>
    <namespace_parameter/>
    <save_parameters>Y</save_parameters>
    <save_result_rows>Y</save_result_rows>
    <save_result_files>Y</save_result_files>
    <field>
      <id>ID_JOB_RUN</id>
      <enabled>Y</enabled>
      <name>ID_JOB_RUN</name>
    </field>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>NAMESPACE</id>
      <enabled>Y</enabled>
      <name>NAMESPACE</name>
    </field>
    <field>
      <id>CHECKPOINT_NAME</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_NAME</name>
    </field>
    <field>
      <id>CHECKPOINT_COPYNR</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_COPYNR</name>
    </field>
    <field>
      <id>ATTEMPT_NR</id>
      <enabled>Y</enabled>
      <name>ATTEMPT_NR</name>
    </field>
    <field>
      <id>JOB_RUN_START_DATE</id>
      <enabled>Y</enabled>
      <name>JOB_RUN_START_DATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>RESULT_XML</id>
      <enabled>Y</enabled>
      <name>RESULT_XML</name>
    </field>
    <field>
      <id>PARAMETER_XML</id>
      <enabled>Y</enabled>
      <name>PARAMETER_XML</name>
    </field>
  </checkpoint-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>Y</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>65</xloc>
      <yloc>219</yloc>
    </entry>
    <entry>
      <name>Table exists tmp_claimtx_01_0</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_claimtx_01_0</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>303</xloc>
      <yloc>88</yloc>
    </entry>
    <entry>
      <name>drop tmp_claimtx_01_0</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_claimtx_01_0 purge;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>387</xloc>
      <yloc>27</yloc>
    </entry>
    <entry>
      <name>Create tmp_claimtx_01_0</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_claimtx_01_0 nologging pctfree 0 AS
WITH m AS 
       (select nvl(max(CLAIMTRANSACTIONEXTENSION_ID),1) max_claimtransactionext_id 
        from   dim_claimtransactionextension),
     s AS 
       (SELECT row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_record_version,
              (select d.record_version 
               from   dim_claimtransactionextension d 
               where  x.claimtransaction_uniqueid = d.claimtransaction_uniqueid 
               and    d.valid_todate = to_date('3000/01/01','yyyy/mm/dd')) scd2_current_record_version,
               row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date desc, x.transactionstatus_id desc) scd2_latest_flg,
              lead(x.mmct_trans_status_date) OVER ( partition by x.claimtransaction_uniqueid 
                                                    order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_valid_todate,
              row_number() over (order by x.claimtransaction_uniqueid,x.mmct_trans_status_date, x.transactionstatus_id) pentaho_order,
              m.max_CLAIMTRANSACTIONEXT_ID,
              x.*
        FROM  STG_CLAIMTRANSACTION x, m
        WHERE x.LOADDATE = ${sql_loadDate}
        AND   substr(claimtransaction_uniqueid,-1,1) in ('0','1') )    
SELECT s.max_CLAIMTRANSACTIONEXT_ID,
       s.SCD2_RECORD_VERSION ,
       s.SCD2_RECORD_VERSION + nvl(s.SCD2_CURRENT_RECORD_VERSION,0) SCD2_RECORD_VERSION_NEW,
       s.SCD2_LATEST_FLG,
       coalesce(s.SCD2_VALID_TODATE, to_date('3000/01/01','yyyy/mm/dd')) SCD2_VALID_TODATE,
       s.PENTAHO_ORDER,
       s.CLAIMTRANSACTION_UNIQUEID,
       s.CLAIM_UNIQUEID,
       s.CT_ACCOUNTINGDATE,
       s.CT_AMOUNT,
       s.CT_CHANGEEFFECTIVEDATE,
       s.CT_SEQUENCE,
       s.CT_SUBTYPECODE,
       s.CT_TRANSACTIONDATE,
       s.CT_TRANSACTIONFLAG,
       s.CT_TRANSACTIONSTATUS,
       s.CT_TYPECODE,
       s.EXTRACT_DATE,
       s.FILE_VERSION,
       s.LOADDATE,
       s.MMCT_BATCH_ACCOUNTING_DATE,
       s.MMCT_BATCH_APPROVAL_DATE,
       s.MMCT_BATCH_APPROVED_BY,
       s.MMCT_BATCH_BRANCH_OFFICE_CODE,
       s.MMCT_BATCH_BRANCH_OFFICE_DESC,
       s.MMCT_BATCH_ENTRY_DATE,
       s.MMCT_BATCH_SOURCE,
       s.MMCT_BATCH_STATUS_CODE,
       s.MMCT_BATCH_STATUS_DESC,
       s.MMCT_BATCH_TOT_AMT,
       s.MMCT_BATCH_TOT_QTY,
       s.MMCT_BATCH_TYPE_CODE,
       s.MMCT_BATCH_TYPE_DESC,
       s.MMCT_CM_BATCH_NO,
       s.MMCT_CM_BATCH_PAYMENT_NO,
       s.MMCT_CM_COST_TYPE_CODE,
       s.MMCT_CM_COST_TYPE_DESC,
       s.MMCT_COMMENTS,
       s.MMCT_CPT_CODE1,
       s.MMCT_CPT_CODE2,
       s.MMCT_CPT_CODE3,
       s.MMCT_CPT_CODE4,
       s.MMCT_INVIOCE_INVOICER_UNIQUEID,
       s.MMCT_INVOICE_ACCOUNTING_DATE,
       s.MMCT_INVOICE_AMT,
       s.MMCT_INVOICE_COST_TYPE_CODE,
       s.MMCT_INVOICE_COST_TYPE_DESC,
       s.MMCT_INVOICE_DATE,
       s.MMCT_INVOICE_DENIED_AMT,
       s.MMCT_INVOICE_DUE_DATE,
       s.MMCT_INVOICE_INVOICER_NAME,
       s.MMCT_INVOICE_INVOICE_DATE,
       s.MMCT_INVOICE_INV_AMT,
       s.MMCT_INVOICE_INV_QTY,
       s.MMCT_INVOICE_NO,
       s.MMCT_INVOICE_RECEIVE_DATE,
       s.MMCT_INVOICE_SEQUENCE_NO,
       s.MMCT_INVOICE_SOURCE,
       s.MMCT_PAYEE_NAME,
       s.MMCT_PAYEE_TAX_ID,
       s.MMCT_PAYEE_TAX_ID_TYPE,
       s.MMCT_PAYEE_UNIQUEID,
       s.MMCT_PMT_ACCPT_DATE,
       s.MMCT_PMT_ADDR1,
       s.MMCT_PMT_ADDR2,
       s.MMCT_PMT_AMOUNT,
       s.MMCT_PMT_BNK_ACCT_NO,
       s.MMCT_PMT_BNK_RTE_NO,
       s.MMCT_PMT_CITY,
       s.MMCT_PMT_COUNTRY,
       s.MMCT_PMT_CUT_DATE,
       s.MMCT_PMT_NAME,
       s.MMCT_PMT_NO,
       s.MMCT_PMT_PAYEE_BNK_ACCT_NO,
       s.MMCT_PMT_PMT_TYPE_CODE,
       s.MMCT_PMT_PMT_TYPE_DESC,
       s.MMCT_PMT_REISSUED,
       s.MMCT_PMT_REQUEST_DATE,
       s.MMCT_PMT_STATE,
       s.MMCT_PMT_STATUS_CODE,
       s.MMCT_PMT_STATUS_DATE,
       s.MMCT_PMT_STATUS_DESC,
       s.MMCT_PMT_STOPVOID_ACTION,
       s.MMCT_PMT_STOPVOID_REASON,
       s.MMCT_PMT_TYPE_CODE,
       s.MMCT_PMT_TYPE_DESC,
       s.MMCT_PMT_ZIP,
       s.MMCT_QUANTITY,
       s.MMCT_RATE,
       s.MMCT_SYS_CREATED_BY,
       s.MMCT_SYS_CREATE_TIME,
       s.MMCT_SYS_UPDATED_BY,
       s.MMCT_SYS_UPDATE_TIME,
       s.MMCT_TRANS_AMT,
       s.MMCT_TRANS_APPROVED_DATE,
       s.MMCT_TRANS_CATEGORY,
       s.MMCT_TRANS_DATE,
       s.MMCT_TRANS_DETAIL_UNIQUEID,
       s.MMCT_TRANS_STATUS_CODE,
       s.MMCT_TRANS_STATUS_DATE,
       s.MMCT_TRANS_STATUS_DESC,
       s.MMCT_TRANS_UNIQUEID,
       s.PAYEE_UNIQUEID,
       s.SOURCE_SYSTEM,
       s.STGCLAIMTRANSACTION_ID,
       s.TRANSACTIONSTATUS_ID
FROM   s;
 </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>493</xloc>
      <yloc>88</yloc>
    </entry>
    <entry>
      <name>Table exists tmp_claimtx_01_1</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_claimtx_01_1</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>303</xloc>
      <yloc>219</yloc>
    </entry>
    <entry>
      <name>drop tmp_claimtx_01_1</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_claimtx_01_1 purge;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>387</xloc>
      <yloc>158</yloc>
    </entry>
    <entry>
      <name>Create tmp_claimtx_01_1</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_claimtx_01_1 nologging pctfree 0 AS
WITH m AS 
       (select nvl(max(CLAIMTRANSACTIONEXTENSION_ID),1) max_claimtransactionext_id 
        from   dim_claimtransactionextension),
     s AS 
       (SELECT row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_record_version,
              (select d.record_version 
               from   dim_claimtransactionextension d 
               where  x.claimtransaction_uniqueid = d.claimtransaction_uniqueid 
               and    d.valid_todate = to_date('3000/01/01','yyyy/mm/dd')) scd2_current_record_version,
               row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date desc, x.transactionstatus_id desc) scd2_latest_flg,
              lead(x.mmct_trans_status_date) OVER ( partition by x.claimtransaction_uniqueid 
                                                    order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_valid_todate,
              row_number() over (order by x.claimtransaction_uniqueid,x.mmct_trans_status_date, x.transactionstatus_id) pentaho_order,
              m.max_CLAIMTRANSACTIONEXT_ID,
              x.*
        FROM  STG_CLAIMTRANSACTION x, m
        WHERE x.LOADDATE = ${sql_loadDate}
        AND   substr(claimtransaction_uniqueid,-1,1) in ('2','3'))    
SELECT s.max_CLAIMTRANSACTIONEXT_ID,
       s.SCD2_RECORD_VERSION ,
       s.SCD2_RECORD_VERSION + nvl(s.SCD2_CURRENT_RECORD_VERSION,0) SCD2_RECORD_VERSION_NEW,
       s.SCD2_LATEST_FLG,
       coalesce(s.SCD2_VALID_TODATE, to_date('3000/01/01','yyyy/mm/dd')) SCD2_VALID_TODATE,
       s.PENTAHO_ORDER,
       s.CLAIMTRANSACTION_UNIQUEID,
       s.CLAIM_UNIQUEID,
       s.CT_ACCOUNTINGDATE,
       s.CT_AMOUNT,
       s.CT_CHANGEEFFECTIVEDATE,
       s.CT_SEQUENCE,
       s.CT_SUBTYPECODE,
       s.CT_TRANSACTIONDATE,
       s.CT_TRANSACTIONFLAG,
       s.CT_TRANSACTIONSTATUS,
       s.CT_TYPECODE,
       s.EXTRACT_DATE,
       s.FILE_VERSION,
       s.LOADDATE,
       s.MMCT_BATCH_ACCOUNTING_DATE,
       s.MMCT_BATCH_APPROVAL_DATE,
       s.MMCT_BATCH_APPROVED_BY,
       s.MMCT_BATCH_BRANCH_OFFICE_CODE,
       s.MMCT_BATCH_BRANCH_OFFICE_DESC,
       s.MMCT_BATCH_ENTRY_DATE,
       s.MMCT_BATCH_SOURCE,
       s.MMCT_BATCH_STATUS_CODE,
       s.MMCT_BATCH_STATUS_DESC,
       s.MMCT_BATCH_TOT_AMT,
       s.MMCT_BATCH_TOT_QTY,
       s.MMCT_BATCH_TYPE_CODE,
       s.MMCT_BATCH_TYPE_DESC,
       s.MMCT_CM_BATCH_NO,
       s.MMCT_CM_BATCH_PAYMENT_NO,
       s.MMCT_CM_COST_TYPE_CODE,
       s.MMCT_CM_COST_TYPE_DESC,
       s.MMCT_COMMENTS,
       s.MMCT_CPT_CODE1,
       s.MMCT_CPT_CODE2,
       s.MMCT_CPT_CODE3,
       s.MMCT_CPT_CODE4,
       s.MMCT_INVIOCE_INVOICER_UNIQUEID,
       s.MMCT_INVOICE_ACCOUNTING_DATE,
       s.MMCT_INVOICE_AMT,
       s.MMCT_INVOICE_COST_TYPE_CODE,
       s.MMCT_INVOICE_COST_TYPE_DESC,
       s.MMCT_INVOICE_DATE,
       s.MMCT_INVOICE_DENIED_AMT,
       s.MMCT_INVOICE_DUE_DATE,
       s.MMCT_INVOICE_INVOICER_NAME,
       s.MMCT_INVOICE_INVOICE_DATE,
       s.MMCT_INVOICE_INV_AMT,
       s.MMCT_INVOICE_INV_QTY,
       s.MMCT_INVOICE_NO,
       s.MMCT_INVOICE_RECEIVE_DATE,
       s.MMCT_INVOICE_SEQUENCE_NO,
       s.MMCT_INVOICE_SOURCE,
       s.MMCT_PAYEE_NAME,
       s.MMCT_PAYEE_TAX_ID,
       s.MMCT_PAYEE_TAX_ID_TYPE,
       s.MMCT_PAYEE_UNIQUEID,
       s.MMCT_PMT_ACCPT_DATE,
       s.MMCT_PMT_ADDR1,
       s.MMCT_PMT_ADDR2,
       s.MMCT_PMT_AMOUNT,
       s.MMCT_PMT_BNK_ACCT_NO,
       s.MMCT_PMT_BNK_RTE_NO,
       s.MMCT_PMT_CITY,
       s.MMCT_PMT_COUNTRY,
       s.MMCT_PMT_CUT_DATE,
       s.MMCT_PMT_NAME,
       s.MMCT_PMT_NO,
       s.MMCT_PMT_PAYEE_BNK_ACCT_NO,
       s.MMCT_PMT_PMT_TYPE_CODE,
       s.MMCT_PMT_PMT_TYPE_DESC,
       s.MMCT_PMT_REISSUED,
       s.MMCT_PMT_REQUEST_DATE,
       s.MMCT_PMT_STATE,
       s.MMCT_PMT_STATUS_CODE,
       s.MMCT_PMT_STATUS_DATE,
       s.MMCT_PMT_STATUS_DESC,
       s.MMCT_PMT_STOPVOID_ACTION,
       s.MMCT_PMT_STOPVOID_REASON,
       s.MMCT_PMT_TYPE_CODE,
       s.MMCT_PMT_TYPE_DESC,
       s.MMCT_PMT_ZIP,
       s.MMCT_QUANTITY,
       s.MMCT_RATE,
       s.MMCT_SYS_CREATED_BY,
       s.MMCT_SYS_CREATE_TIME,
       s.MMCT_SYS_UPDATED_BY,
       s.MMCT_SYS_UPDATE_TIME,
       s.MMCT_TRANS_AMT,
       s.MMCT_TRANS_APPROVED_DATE,
       s.MMCT_TRANS_CATEGORY,
       s.MMCT_TRANS_DATE,
       s.MMCT_TRANS_DETAIL_UNIQUEID,
       s.MMCT_TRANS_STATUS_CODE,
       s.MMCT_TRANS_STATUS_DATE,
       s.MMCT_TRANS_STATUS_DESC,
       s.MMCT_TRANS_UNIQUEID,
       s.PAYEE_UNIQUEID,
       s.SOURCE_SYSTEM,
       s.STGCLAIMTRANSACTION_ID,
       s.TRANSACTIONSTATUS_ID
FROM   s;
 </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>493</xloc>
      <yloc>219</yloc>
    </entry>
    <entry>
      <name>Table exists tmp_claimtx_01_2</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_claimtx_01_2</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>303</xloc>
      <yloc>339</yloc>
    </entry>
    <entry>
      <name>drop tmp_claimtx_01_2</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_claimtx_01_2 purge;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>387</xloc>
      <yloc>289</yloc>
    </entry>
    <entry>
      <name>Create tmp_claimtx_01_2</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_claimtx_01_2 nologging pctfree 0 AS
WITH m AS 
       (select nvl(max(CLAIMTRANSACTIONEXTENSION_ID),1) max_claimtransactionext_id 
        from   dim_claimtransactionextension),
     s AS 
       (SELECT row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_record_version,
              (select d.record_version 
               from   dim_claimtransactionextension d 
               where  x.claimtransaction_uniqueid = d.claimtransaction_uniqueid 
               and    d.valid_todate = to_date('3000/01/01','yyyy/mm/dd')) scd2_current_record_version,
               row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date desc, x.transactionstatus_id desc) scd2_latest_flg,
              lead(x.mmct_trans_status_date) OVER ( partition by x.claimtransaction_uniqueid 
                                                    order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_valid_todate,
              row_number() over (order by x.claimtransaction_uniqueid,x.mmct_trans_status_date, x.transactionstatus_id) pentaho_order,
              m.max_CLAIMTRANSACTIONEXT_ID,
              x.*
        FROM  STG_CLAIMTRANSACTION x, m
        WHERE x.LOADDATE = ${sql_loadDate}
        AND   substr(claimtransaction_uniqueid,-1,1) in ('4','5'))    
SELECT s.max_CLAIMTRANSACTIONEXT_ID,
       s.SCD2_RECORD_VERSION ,
       s.SCD2_RECORD_VERSION + nvl(s.SCD2_CURRENT_RECORD_VERSION,0) SCD2_RECORD_VERSION_NEW,
       s.SCD2_LATEST_FLG,
       coalesce(s.SCD2_VALID_TODATE, to_date('3000/01/01','yyyy/mm/dd')) SCD2_VALID_TODATE,
       s.PENTAHO_ORDER,
       s.CLAIMTRANSACTION_UNIQUEID,
       s.CLAIM_UNIQUEID,
       s.CT_ACCOUNTINGDATE,
       s.CT_AMOUNT,
       s.CT_CHANGEEFFECTIVEDATE,
       s.CT_SEQUENCE,
       s.CT_SUBTYPECODE,
       s.CT_TRANSACTIONDATE,
       s.CT_TRANSACTIONFLAG,
       s.CT_TRANSACTIONSTATUS,
       s.CT_TYPECODE,
       s.EXTRACT_DATE,
       s.FILE_VERSION,
       s.LOADDATE,
       s.MMCT_BATCH_ACCOUNTING_DATE,
       s.MMCT_BATCH_APPROVAL_DATE,
       s.MMCT_BATCH_APPROVED_BY,
       s.MMCT_BATCH_BRANCH_OFFICE_CODE,
       s.MMCT_BATCH_BRANCH_OFFICE_DESC,
       s.MMCT_BATCH_ENTRY_DATE,
       s.MMCT_BATCH_SOURCE,
       s.MMCT_BATCH_STATUS_CODE,
       s.MMCT_BATCH_STATUS_DESC,
       s.MMCT_BATCH_TOT_AMT,
       s.MMCT_BATCH_TOT_QTY,
       s.MMCT_BATCH_TYPE_CODE,
       s.MMCT_BATCH_TYPE_DESC,
       s.MMCT_CM_BATCH_NO,
       s.MMCT_CM_BATCH_PAYMENT_NO,
       s.MMCT_CM_COST_TYPE_CODE,
       s.MMCT_CM_COST_TYPE_DESC,
       s.MMCT_COMMENTS,
       s.MMCT_CPT_CODE1,
       s.MMCT_CPT_CODE2,
       s.MMCT_CPT_CODE3,
       s.MMCT_CPT_CODE4,
       s.MMCT_INVIOCE_INVOICER_UNIQUEID,
       s.MMCT_INVOICE_ACCOUNTING_DATE,
       s.MMCT_INVOICE_AMT,
       s.MMCT_INVOICE_COST_TYPE_CODE,
       s.MMCT_INVOICE_COST_TYPE_DESC,
       s.MMCT_INVOICE_DATE,
       s.MMCT_INVOICE_DENIED_AMT,
       s.MMCT_INVOICE_DUE_DATE,
       s.MMCT_INVOICE_INVOICER_NAME,
       s.MMCT_INVOICE_INVOICE_DATE,
       s.MMCT_INVOICE_INV_AMT,
       s.MMCT_INVOICE_INV_QTY,
       s.MMCT_INVOICE_NO,
       s.MMCT_INVOICE_RECEIVE_DATE,
       s.MMCT_INVOICE_SEQUENCE_NO,
       s.MMCT_INVOICE_SOURCE,
       s.MMCT_PAYEE_NAME,
       s.MMCT_PAYEE_TAX_ID,
       s.MMCT_PAYEE_TAX_ID_TYPE,
       s.MMCT_PAYEE_UNIQUEID,
       s.MMCT_PMT_ACCPT_DATE,
       s.MMCT_PMT_ADDR1,
       s.MMCT_PMT_ADDR2,
       s.MMCT_PMT_AMOUNT,
       s.MMCT_PMT_BNK_ACCT_NO,
       s.MMCT_PMT_BNK_RTE_NO,
       s.MMCT_PMT_CITY,
       s.MMCT_PMT_COUNTRY,
       s.MMCT_PMT_CUT_DATE,
       s.MMCT_PMT_NAME,
       s.MMCT_PMT_NO,
       s.MMCT_PMT_PAYEE_BNK_ACCT_NO,
       s.MMCT_PMT_PMT_TYPE_CODE,
       s.MMCT_PMT_PMT_TYPE_DESC,
       s.MMCT_PMT_REISSUED,
       s.MMCT_PMT_REQUEST_DATE,
       s.MMCT_PMT_STATE,
       s.MMCT_PMT_STATUS_CODE,
       s.MMCT_PMT_STATUS_DATE,
       s.MMCT_PMT_STATUS_DESC,
       s.MMCT_PMT_STOPVOID_ACTION,
       s.MMCT_PMT_STOPVOID_REASON,
       s.MMCT_PMT_TYPE_CODE,
       s.MMCT_PMT_TYPE_DESC,
       s.MMCT_PMT_ZIP,
       s.MMCT_QUANTITY,
       s.MMCT_RATE,
       s.MMCT_SYS_CREATED_BY,
       s.MMCT_SYS_CREATE_TIME,
       s.MMCT_SYS_UPDATED_BY,
       s.MMCT_SYS_UPDATE_TIME,
       s.MMCT_TRANS_AMT,
       s.MMCT_TRANS_APPROVED_DATE,
       s.MMCT_TRANS_CATEGORY,
       s.MMCT_TRANS_DATE,
       s.MMCT_TRANS_DETAIL_UNIQUEID,
       s.MMCT_TRANS_STATUS_CODE,
       s.MMCT_TRANS_STATUS_DATE,
       s.MMCT_TRANS_STATUS_DESC,
       s.MMCT_TRANS_UNIQUEID,
       s.PAYEE_UNIQUEID,
       s.SOURCE_SYSTEM,
       s.STGCLAIMTRANSACTION_ID,
       s.TRANSACTIONSTATUS_ID
FROM   s;
 </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>493</xloc>
      <yloc>339</yloc>
    </entry>
    <entry>
      <name>Table exists tmp_claimtx_01_3</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_claimtx_01_3</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>658</xloc>
      <yloc>88</yloc>
    </entry>
    <entry>
      <name>drop tmp_claimtx_01_3</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_claimtx_01_3 purge;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>742</xloc>
      <yloc>27</yloc>
    </entry>
    <entry>
      <name>Create tmp_claimtx_01_3</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_claimtx_01_3 nologging pctfree 0 AS
WITH m AS 
       (select nvl(max(CLAIMTRANSACTIONEXTENSION_ID),1) max_claimtransactionext_id 
        from   dim_claimtransactionextension),
     s AS 
       (SELECT row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_record_version,
              (select d.record_version 
               from   dim_claimtransactionextension d 
               where  x.claimtransaction_uniqueid = d.claimtransaction_uniqueid 
               and    d.valid_todate = to_date('3000/01/01','yyyy/mm/dd')) scd2_current_record_version,
               row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date desc, x.transactionstatus_id desc) scd2_latest_flg,
              lead(x.mmct_trans_status_date) OVER ( partition by x.claimtransaction_uniqueid 
                                                    order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_valid_todate,
              row_number() over (order by x.claimtransaction_uniqueid,x.mmct_trans_status_date, x.transactionstatus_id) pentaho_order,
              m.max_CLAIMTRANSACTIONEXT_ID,
              x.*
        FROM  STG_CLAIMTRANSACTION x, m
        WHERE x.LOADDATE = ${sql_loadDate}
        AND   substr(claimtransaction_uniqueid,-1,1) in ('6','7'))    
SELECT s.max_CLAIMTRANSACTIONEXT_ID,
       s.SCD2_RECORD_VERSION ,
       s.SCD2_RECORD_VERSION + nvl(s.SCD2_CURRENT_RECORD_VERSION,0) SCD2_RECORD_VERSION_NEW,
       s.SCD2_LATEST_FLG,
       coalesce(s.SCD2_VALID_TODATE, to_date('3000/01/01','yyyy/mm/dd')) SCD2_VALID_TODATE,
       s.PENTAHO_ORDER,
       s.CLAIMTRANSACTION_UNIQUEID,
       s.CLAIM_UNIQUEID,
       s.CT_ACCOUNTINGDATE,
       s.CT_AMOUNT,
       s.CT_CHANGEEFFECTIVEDATE,
       s.CT_SEQUENCE,
       s.CT_SUBTYPECODE,
       s.CT_TRANSACTIONDATE,
       s.CT_TRANSACTIONFLAG,
       s.CT_TRANSACTIONSTATUS,
       s.CT_TYPECODE,
       s.EXTRACT_DATE,
       s.FILE_VERSION,
       s.LOADDATE,
       s.MMCT_BATCH_ACCOUNTING_DATE,
       s.MMCT_BATCH_APPROVAL_DATE,
       s.MMCT_BATCH_APPROVED_BY,
       s.MMCT_BATCH_BRANCH_OFFICE_CODE,
       s.MMCT_BATCH_BRANCH_OFFICE_DESC,
       s.MMCT_BATCH_ENTRY_DATE,
       s.MMCT_BATCH_SOURCE,
       s.MMCT_BATCH_STATUS_CODE,
       s.MMCT_BATCH_STATUS_DESC,
       s.MMCT_BATCH_TOT_AMT,
       s.MMCT_BATCH_TOT_QTY,
       s.MMCT_BATCH_TYPE_CODE,
       s.MMCT_BATCH_TYPE_DESC,
       s.MMCT_CM_BATCH_NO,
       s.MMCT_CM_BATCH_PAYMENT_NO,
       s.MMCT_CM_COST_TYPE_CODE,
       s.MMCT_CM_COST_TYPE_DESC,
       s.MMCT_COMMENTS,
       s.MMCT_CPT_CODE1,
       s.MMCT_CPT_CODE2,
       s.MMCT_CPT_CODE3,
       s.MMCT_CPT_CODE4,
       s.MMCT_INVIOCE_INVOICER_UNIQUEID,
       s.MMCT_INVOICE_ACCOUNTING_DATE,
       s.MMCT_INVOICE_AMT,
       s.MMCT_INVOICE_COST_TYPE_CODE,
       s.MMCT_INVOICE_COST_TYPE_DESC,
       s.MMCT_INVOICE_DATE,
       s.MMCT_INVOICE_DENIED_AMT,
       s.MMCT_INVOICE_DUE_DATE,
       s.MMCT_INVOICE_INVOICER_NAME,
       s.MMCT_INVOICE_INVOICE_DATE,
       s.MMCT_INVOICE_INV_AMT,
       s.MMCT_INVOICE_INV_QTY,
       s.MMCT_INVOICE_NO,
       s.MMCT_INVOICE_RECEIVE_DATE,
       s.MMCT_INVOICE_SEQUENCE_NO,
       s.MMCT_INVOICE_SOURCE,
       s.MMCT_PAYEE_NAME,
       s.MMCT_PAYEE_TAX_ID,
       s.MMCT_PAYEE_TAX_ID_TYPE,
       s.MMCT_PAYEE_UNIQUEID,
       s.MMCT_PMT_ACCPT_DATE,
       s.MMCT_PMT_ADDR1,
       s.MMCT_PMT_ADDR2,
       s.MMCT_PMT_AMOUNT,
       s.MMCT_PMT_BNK_ACCT_NO,
       s.MMCT_PMT_BNK_RTE_NO,
       s.MMCT_PMT_CITY,
       s.MMCT_PMT_COUNTRY,
       s.MMCT_PMT_CUT_DATE,
       s.MMCT_PMT_NAME,
       s.MMCT_PMT_NO,
       s.MMCT_PMT_PAYEE_BNK_ACCT_NO,
       s.MMCT_PMT_PMT_TYPE_CODE,
       s.MMCT_PMT_PMT_TYPE_DESC,
       s.MMCT_PMT_REISSUED,
       s.MMCT_PMT_REQUEST_DATE,
       s.MMCT_PMT_STATE,
       s.MMCT_PMT_STATUS_CODE,
       s.MMCT_PMT_STATUS_DATE,
       s.MMCT_PMT_STATUS_DESC,
       s.MMCT_PMT_STOPVOID_ACTION,
       s.MMCT_PMT_STOPVOID_REASON,
       s.MMCT_PMT_TYPE_CODE,
       s.MMCT_PMT_TYPE_DESC,
       s.MMCT_PMT_ZIP,
       s.MMCT_QUANTITY,
       s.MMCT_RATE,
       s.MMCT_SYS_CREATED_BY,
       s.MMCT_SYS_CREATE_TIME,
       s.MMCT_SYS_UPDATED_BY,
       s.MMCT_SYS_UPDATE_TIME,
       s.MMCT_TRANS_AMT,
       s.MMCT_TRANS_APPROVED_DATE,
       s.MMCT_TRANS_CATEGORY,
       s.MMCT_TRANS_DATE,
       s.MMCT_TRANS_DETAIL_UNIQUEID,
       s.MMCT_TRANS_STATUS_CODE,
       s.MMCT_TRANS_STATUS_DATE,
       s.MMCT_TRANS_STATUS_DESC,
       s.MMCT_TRANS_UNIQUEID,
       s.PAYEE_UNIQUEID,
       s.SOURCE_SYSTEM,
       s.STGCLAIMTRANSACTION_ID,
       s.TRANSACTIONSTATUS_ID
FROM   s;
 </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>848</xloc>
      <yloc>88</yloc>
    </entry>
    <entry>
      <name>Table exists tmp_claimtx_01_4</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_claimtx_01_4</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>666</xloc>
      <yloc>219</yloc>
    </entry>
    <entry>
      <name>drop tmp_claimtx_01_4</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_claimtx_01_4 purge;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>750</xloc>
      <yloc>158</yloc>
    </entry>
    <entry>
      <name>Create tmp_claimtx_01_4</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_claimtx_01_4 nologging pctfree 0 AS
WITH m AS 
       (select nvl(max(CLAIMTRANSACTIONEXTENSION_ID),1) max_claimtransactionext_id 
        from   dim_claimtransactionextension),
     s AS 
       (SELECT row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_record_version,
              (select d.record_version 
               from   dim_claimtransactionextension d 
               where  x.claimtransaction_uniqueid = d.claimtransaction_uniqueid 
               and    d.valid_todate = to_date('3000/01/01','yyyy/mm/dd')) scd2_current_record_version,
               row_number() over ( partition by x.claimtransaction_uniqueid 
                                   order by x.mmct_trans_status_date desc, x.transactionstatus_id desc) scd2_latest_flg,
              lead(x.mmct_trans_status_date) OVER ( partition by x.claimtransaction_uniqueid 
                                                    order by x.mmct_trans_status_date, x.transactionstatus_id) scd2_valid_todate,
              row_number() over (order by x.claimtransaction_uniqueid,x.mmct_trans_status_date, x.transactionstatus_id) pentaho_order,
              m.max_CLAIMTRANSACTIONEXT_ID,
              x.*
        FROM  STG_CLAIMTRANSACTION x, m
        WHERE x.LOADDATE = ${sql_loadDate}
        AND   substr(claimtransaction_uniqueid,-1,1) in ('8','9'))    
SELECT s.max_CLAIMTRANSACTIONEXT_ID,
       s.SCD2_RECORD_VERSION ,
       s.SCD2_RECORD_VERSION + nvl(s.SCD2_CURRENT_RECORD_VERSION,0) SCD2_RECORD_VERSION_NEW,
       s.SCD2_LATEST_FLG,
       coalesce(s.SCD2_VALID_TODATE, to_date('3000/01/01','yyyy/mm/dd')) SCD2_VALID_TODATE,
       s.PENTAHO_ORDER,
       s.CLAIMTRANSACTION_UNIQUEID,
       s.CLAIM_UNIQUEID,
       s.CT_ACCOUNTINGDATE,
       s.CT_AMOUNT,
       s.CT_CHANGEEFFECTIVEDATE,
       s.CT_SEQUENCE,
       s.CT_SUBTYPECODE,
       s.CT_TRANSACTIONDATE,
       s.CT_TRANSACTIONFLAG,
       s.CT_TRANSACTIONSTATUS,
       s.CT_TYPECODE,
       s.EXTRACT_DATE,
       s.FILE_VERSION,
       s.LOADDATE,
       s.MMCT_BATCH_ACCOUNTING_DATE,
       s.MMCT_BATCH_APPROVAL_DATE,
       s.MMCT_BATCH_APPROVED_BY,
       s.MMCT_BATCH_BRANCH_OFFICE_CODE,
       s.MMCT_BATCH_BRANCH_OFFICE_DESC,
       s.MMCT_BATCH_ENTRY_DATE,
       s.MMCT_BATCH_SOURCE,
       s.MMCT_BATCH_STATUS_CODE,
       s.MMCT_BATCH_STATUS_DESC,
       s.MMCT_BATCH_TOT_AMT,
       s.MMCT_BATCH_TOT_QTY,
       s.MMCT_BATCH_TYPE_CODE,
       s.MMCT_BATCH_TYPE_DESC,
       s.MMCT_CM_BATCH_NO,
       s.MMCT_CM_BATCH_PAYMENT_NO,
       s.MMCT_CM_COST_TYPE_CODE,
       s.MMCT_CM_COST_TYPE_DESC,
       s.MMCT_COMMENTS,
       s.MMCT_CPT_CODE1,
       s.MMCT_CPT_CODE2,
       s.MMCT_CPT_CODE3,
       s.MMCT_CPT_CODE4,
       s.MMCT_INVIOCE_INVOICER_UNIQUEID,
       s.MMCT_INVOICE_ACCOUNTING_DATE,
       s.MMCT_INVOICE_AMT,
       s.MMCT_INVOICE_COST_TYPE_CODE,
       s.MMCT_INVOICE_COST_TYPE_DESC,
       s.MMCT_INVOICE_DATE,
       s.MMCT_INVOICE_DENIED_AMT,
       s.MMCT_INVOICE_DUE_DATE,
       s.MMCT_INVOICE_INVOICER_NAME,
       s.MMCT_INVOICE_INVOICE_DATE,
       s.MMCT_INVOICE_INV_AMT,
       s.MMCT_INVOICE_INV_QTY,
       s.MMCT_INVOICE_NO,
       s.MMCT_INVOICE_RECEIVE_DATE,
       s.MMCT_INVOICE_SEQUENCE_NO,
       s.MMCT_INVOICE_SOURCE,
       s.MMCT_PAYEE_NAME,
       s.MMCT_PAYEE_TAX_ID,
       s.MMCT_PAYEE_TAX_ID_TYPE,
       s.MMCT_PAYEE_UNIQUEID,
       s.MMCT_PMT_ACCPT_DATE,
       s.MMCT_PMT_ADDR1,
       s.MMCT_PMT_ADDR2,
       s.MMCT_PMT_AMOUNT,
       s.MMCT_PMT_BNK_ACCT_NO,
       s.MMCT_PMT_BNK_RTE_NO,
       s.MMCT_PMT_CITY,
       s.MMCT_PMT_COUNTRY,
       s.MMCT_PMT_CUT_DATE,
       s.MMCT_PMT_NAME,
       s.MMCT_PMT_NO,
       s.MMCT_PMT_PAYEE_BNK_ACCT_NO,
       s.MMCT_PMT_PMT_TYPE_CODE,
       s.MMCT_PMT_PMT_TYPE_DESC,
       s.MMCT_PMT_REISSUED,
       s.MMCT_PMT_REQUEST_DATE,
       s.MMCT_PMT_STATE,
       s.MMCT_PMT_STATUS_CODE,
       s.MMCT_PMT_STATUS_DATE,
       s.MMCT_PMT_STATUS_DESC,
       s.MMCT_PMT_STOPVOID_ACTION,
       s.MMCT_PMT_STOPVOID_REASON,
       s.MMCT_PMT_TYPE_CODE,
       s.MMCT_PMT_TYPE_DESC,
       s.MMCT_PMT_ZIP,
       s.MMCT_QUANTITY,
       s.MMCT_RATE,
       s.MMCT_SYS_CREATED_BY,
       s.MMCT_SYS_CREATE_TIME,
       s.MMCT_SYS_UPDATED_BY,
       s.MMCT_SYS_UPDATE_TIME,
       s.MMCT_TRANS_AMT,
       s.MMCT_TRANS_APPROVED_DATE,
       s.MMCT_TRANS_CATEGORY,
       s.MMCT_TRANS_DATE,
       s.MMCT_TRANS_DETAIL_UNIQUEID,
       s.MMCT_TRANS_STATUS_CODE,
       s.MMCT_TRANS_STATUS_DATE,
       s.MMCT_TRANS_STATUS_DESC,
       s.MMCT_TRANS_UNIQUEID,
       s.PAYEE_UNIQUEID,
       s.SOURCE_SYSTEM,
       s.STGCLAIMTRANSACTION_ID,
       s.TRANSACTIONSTATUS_ID
FROM   s;
 </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>856</xloc>
      <yloc>219</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>Table exists tmp_claimtx_01_0</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_0</from>
      <to>drop tmp_claimtx_01_0</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>drop tmp_claimtx_01_0</from>
      <to>Create tmp_claimtx_01_0</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_0</from>
      <to>Create tmp_claimtx_01_0</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Table exists tmp_claimtx_01_1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_1</from>
      <to>drop tmp_claimtx_01_1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>drop tmp_claimtx_01_1</from>
      <to>Create tmp_claimtx_01_1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_1</from>
      <to>Create tmp_claimtx_01_1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Table exists tmp_claimtx_01_2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_2</from>
      <to>drop tmp_claimtx_01_2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>drop tmp_claimtx_01_2</from>
      <to>Create tmp_claimtx_01_2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_2</from>
      <to>Create tmp_claimtx_01_2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_3</from>
      <to>drop tmp_claimtx_01_3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>drop tmp_claimtx_01_3</from>
      <to>Create tmp_claimtx_01_3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_3</from>
      <to>Create tmp_claimtx_01_3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_4</from>
      <to>drop tmp_claimtx_01_4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>drop tmp_claimtx_01_4</from>
      <to>Create tmp_claimtx_01_4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Table exists tmp_claimtx_01_4</from>
      <to>Create tmp_claimtx_01_4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create tmp_claimtx_01_1</from>
      <to>Table exists tmp_claimtx_01_4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create tmp_claimtx_01_0</from>
      <to>Table exists tmp_claimtx_01_3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>JobRestart</name>
      <attribute>
        <key>UniqueConnections</key>
        <value>N</value>
      </attribute>
    </group>
  </attributes>
</job>
