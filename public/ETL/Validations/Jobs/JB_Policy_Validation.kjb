<job>
  <name>JB_Policy_Validation</name>
  <description>Policy Validation Job</description>
  <extended_description>Policy Validation Job</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/public/ETL/Validations/Jobs</directory>
  <created_user/>
  <created_date>2014/06/23 13:18:16.029</created_date>
  <modified_user>-</modified_user>
  <modified_date>2015/01/16 12:09:29.972</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>4SBI_DataWarehouse</name>
    <server>${G_DW_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_DW_DB_NAME}</database>
    <port>${G_DW_DB_PORT}</port>
    <username>${G_DW_DB_USERNAME}</username>
    <password>${G_DW_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_DW_DB_DATA}</data_tablespace>
    <index_tablespace>${G_DW_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_DW_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>DW_Log_Link</name>
    <server>${G_LOG_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_LOG_DB_NAME}</database>
    <port>${G_LOG_DB_PORT}</port>
    <username>${G_LOG_DB_USERNAME}</username>
    <password>${G_LOG_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_LOG_DB_DATA}</data_tablespace>
    <index_tablespace>${G_LOG_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_LOG_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    <slaveserver>
      <name>4Sight BI - PDI Server</name>
      <hostname>10.0.0.21</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Carte 1</name>
      <hostname>localhost</hostname>
      <port>9081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>DI Server</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_DEV</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_SERVER</name>
      <hostname>http://magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_TEST</name>
      <hostname>magspentahotest</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_BTS</name>
      <hostname>129.144.25.104</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_DEV</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Master</name>
      <hostname>localhost</hostname>
      <port>8081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SERVER1</name>
      <hostname>LOCALHOST</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE ONE</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4a418bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE TWO</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave1</name>
      <hostname>localhost</hostname>
      <port>8082</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave2</name>
      <hostname>localhost</hostname>
      <port>8083</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave3</name>
      <hostname>localhost</hostname>
      <port>8084</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>local DIS</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>magspentahodev</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
  </slaveservers>
  <job-log-table>
    <connection>DW_Log_Link</connection>
    <schema/>
    <table>${G_DB_JOB_LOG_TABLE}</table>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <checkpoint-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <max_nr_retries/>
    <run_retry_period/>
    <namespace_parameter/>
    <save_parameters/>
    <save_result_rows/>
    <save_result_files/>
    <field>
      <id>ID_JOB_RUN</id>
      <enabled>Y</enabled>
      <name>ID_JOB_RUN</name>
    </field>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>NAMESPACE</id>
      <enabled>Y</enabled>
      <name>NAMESPACE</name>
    </field>
    <field>
      <id>CHECKPOINT_NAME</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_NAME</name>
    </field>
    <field>
      <id>CHECKPOINT_COPYNR</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_COPYNR</name>
    </field>
    <field>
      <id>ATTEMPT_NR</id>
      <enabled>Y</enabled>
      <name>ATTEMPT_NR</name>
    </field>
    <field>
      <id>JOB_RUN_START_DATE</id>
      <enabled>Y</enabled>
      <name>JOB_RUN_START_DATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>RESULT_XML</id>
      <enabled>Y</enabled>
      <name>RESULT_XML</name>
    </field>
    <field>
      <id>PARAMETER_XML</id>
      <enabled>Y</enabled>
      <name>PARAMETER_XML</name>
    </field>
  </checkpoint-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>jobName</variable_name>
          <variable_value>${Internal.Job.Name}</variable_value>
          <variable_type>ROOT_JOB</variable_type>
        </field>
        <field>
          <variable_name>subSystem</variable_name>
          <variable_value>Policy</variable_value>
          <variable_type>ROOT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>261</xloc>
      <yloc>121</yloc>
    </entry>
    <entry>
      <name>Execute Policy No Validation SQL</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT
  INTO dw_etl_audit
WITH max_id AS
     (select nvl(max(dw_etl_audit_pk),0)  max_audit_pk
      from   dw_etl_audit e)
SELECT max_audit_pk + rownum,
       error_msg,
       ${sql_loadDate},
       '${Internal.Job.Name}',
       '${Internal.Transformation.Name}',
       'Policy',
       message_level
FROM max_id,
     (
      WITH o AS (
                  SELECT p.policy_no||'^'||pth.policy_term_history_pk POL_UNIQUEID
                  FROM   Policy@OLTP p,
                         Policy_Term_History@OLTP pth
                  WHERE  p.policy_cycle_code = 'POLICY'
                  AND    pth.policy_fk = p.policy_pk
                  AND    pth.record_mode_code = 'OFFICIAL'
                  AND    pth.base_record_b = 'Y'
                  UNION ALL
                  SELECT cp.policy_no||'^PYN'||to_char(cp.policy_start_date,'YY')
                  FROM   Cm_Policy@OLTP cp), 
           d AS (
                  SELECT DISTINCT P.POL_UNIQUEID POL_UNIQUEID
                  FROM   DIM_POLICY P
                  WHERE  p.pol_policynumber &lt;&gt; 'Unknown')
      SELECT 'Summary: Total Policy terms On Both OLTP and DW = '||to_char(COUNT(*),'99,999,999') error_msg,
             'Information' message_level
      FROM   o, d
      WHERE  o.POL_UNIQUEID = d.POL_UNIQUEID                        
      UNION ALL
      SELECT 'Policy term Found On OLTP but not on DW, Policy No = '||o.POL_UNIQUEID error_msg,
             'Error' message_level
      FROM   o
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   d
              WHERE  d.POL_UNIQUEID = o.POL_UNIQUEID)    
      UNION ALL
      SELECT 'Policy term Found On DW but not on OLTP, Policy No = '||d.POL_UNIQUEID error_msg,
             'Error' message_level
      FROM   d
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   o
              WHERE  d.POL_UNIQUEID = o.POL_UNIQUEID)
     );
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_DataWarehouse</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>362</xloc>
      <yloc>42</yloc>
    </entry>
    <entry>
      <name>Execute Policy Transaction Validation SQL</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT
  INTO dw_etl_audit
WITH max_id AS
     (select nvl(max(dw_etl_audit_pk),0)  max_audit_pk
      from   dw_etl_audit e)
SELECT max_audit_pk + rownum,
       error_msg,
       ${sql_loadDate},
       '${Internal.Job.Name}',
       '${Internal.Transformation.Name}',
       'Policy',
       message_level
FROM max_id, 
     (
      WITH o AS (
                  SELECT DISTINCT p.policy_no, tl.transaction_log_pk
                  FROM   Transaction_Log@OLTP tl, 
                         Policy@OLTP p,
                         Transaction_Applied_Term@OLTP tat,
                         Policy_Term_History@OLTP pth
                  WHERE  1=1
                  AND    p.policy_pk = tl.policy_fk
                  AND    tl.transaction_log_pk = tat.transaction_log_fk
                  AND    tat.term_base_record_fk = pth.policy_term_history_pk
                  AND    pth.record_mode_code NOT IN ('ENDQUOTE','TEMP')
                  AND    p.policy_cycle_code = 'POLICY'
                  AND    tl.transaction_status_code = 'COMPLETE'                  
                  AND    tl.transaction_type_code NOT IN ('APP','QUEST','QUOTE','ENDQUOTE')
                  ), 
           d AS (
                  SELECT DISTINCT dp.pol_policynumber policy_no, fpt.pt_sequence transaction_log_pk
                  FROM stg_policytransaction fpt, stg_policy dp
                  WHERE fpt.policy_uniqueid = dp.policy_uniqueid
                  AND dp.policy_uniqueid NOT LIKE '%^0'
                  AND DP.POLICY_UNIQUEID NOT LIKE '%^PYN%')
      SELECT 'Summary: Total Policy Trans On Both OLTP and DW = '||to_char(COUNT(*),'99,999,999') error_msg,
             'Information' message_level
      FROM   o, d
      WHERE  o.policy_no = d.policy_no
      AND    o.transaction_log_pk = d.transaction_log_pk                    
      UNION ALL
      SELECT 'Policy Trans Found On OLTP but not on DW, Trans Pk = '||o.transaction_log_pk error_msg,
             'Error' message_level
      FROM   o
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   d
              WHERE  d.transaction_log_pk = o.transaction_log_pk)    
      UNION ALL
      SELECT 'Policy Trans Found On DW but not on OLTP, Trans Pk = '||d.transaction_log_pk error_msg,
             'Error' message_level
      FROM   d
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   o
              WHERE  d.transaction_log_pk = o.transaction_log_pk)
     );
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_DataWarehouse</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>464</xloc>
      <yloc>118</yloc>
    </entry>
    <entry>
      <name>Execute Policy Term Premium Validation SQL</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT
  INTO dw_etl_audit
WITH max_id AS
     (select nvl(max(dw_etl_audit_pk),0)  max_audit_pk
      from   dw_etl_audit e)
SELECT max_audit_pk + rownum,
       error_msg,
       ${sql_loadDate},
       '${Internal.Job.Name}',
       '${Internal.Transformation.Name}',
       'Policy',
       message_level
FROM max_id,
     (
      WITH o AS (
                  SELECT p.policy_no || '^' || pfd.policy_term_fk pol_uniqueid,
                         SUM(pfd.delta_amount) written_prem
                    FROM pm_fm_delta@oltp pfd, 
                         transaction_log@oltp tl, 
                         policy@oltp p, 
                         policy_term_history@oltp pth
                   WHERE pfd.transaction_log_fk = tl.transaction_log_pk
                     AND tl.policy_fk = p.policy_pk
                     AND pth.policy_term_history_pk = pfd.policy_term_fk
                     AND GREATEST(pth.accounting_from_date, pth.effective_from_date) &lt;=
                         last_day(sysdate)
                     AND greatest(tl.accounting_date, tl.effective_from_date) &lt;=
                         last_day(sysdate)
                     AND pfd.coverage_component_code = 'NETPREM'
                     AND p.policy_cycle_code = 'POLICY'
                     AND tl.transaction_status_code = 'COMPLETE'
                     AND pth.record_mode_code NOT IN ('ENDQUOTE','TEMP')
                   GROUP BY p.policy_no || '^' || pfd.policy_term_fk), 
           d AS (
                  SELECT dp.pol_uniqueid, SUM(fpt.amount) written_prem
                  FROM   fact_policytransaction fpt, 
                         dim_policy dp
                  WHERE  fpt.policy_id = dp.policy_id
                  AND    dp.pol_uniqueid NOT LIKE '%^0'
                  AND    DP.pol_uniqueid NOT LIKE '%^PYN%'
                  AND    dp.pol_uniqueid &lt;&gt; 'Unknown'
                  AND    fpt.earningstype = 'N'
                  AND    fpt.include_in_summary_b = 'Y'
                  GROUP  BY dp.pol_uniqueid
                  )
      SELECT 'Summary: Total Policy Premium Match Between Both OLTP and DW = '||to_char(COUNT(*),'99,999,999') error_msg,
             'Information' message_level
      FROM   o, d
      WHERE  o.pol_uniqueid = d.pol_uniqueid
      AND    o.written_prem = d.written_prem                    
      UNION ALL
      SELECT 'Policy Premium Found On OLTP but not on DW, Policy Uniqueid = '||o.pol_uniqueid error_msg,
             'Error' message_level
      FROM   o
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   d
              WHERE  d.pol_uniqueid = o.pol_uniqueid)    
      UNION ALL
      SELECT 'Policy Premium Found On DW but not on OLTP, Policy Uniqueid = '||d.pol_uniqueid error_msg,
             'Error' message_level
      FROM   d
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   o
              WHERE  d.pol_uniqueid = o.pol_uniqueid)
      UNION ALL
      SELECT 'Policy Premium does not match between DW and OLTP, Policy Uniqueid = '||d.pol_uniqueid error_msg,
             'Error' message_level
      FROM   d, o
      WHERE  d.pol_uniqueid = o.pol_uniqueid
      AND    d.written_prem &lt;&gt; o.written_prem
     );
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_DataWarehouse</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>602</xloc>
      <yloc>42</yloc>
    </entry>
    <entry>
      <name>Execute Policy ITD Premium Validation SQL</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT
  INTO dw_etl_audit
WITH max_id AS
     (select nvl(max(dw_etl_audit_pk),0)  max_audit_pk
      from   dw_etl_audit e)
SELECT max_audit_pk + rownum,
       error_msg,
       ${sql_loadDate},
       '${Internal.Job.Name}',
       '${Internal.Transformation.Name}',
       'Policy',
       message_level
FROM max_id,
     (
      WITH o AS (
                  SELECT p.policy_no || '^' || pfd.policy_term_fk pol_uniqueid,
                         SUM(pfd.delta_amount) written_prem
                    FROM pm_fm_delta@oltp pfd, 
                         transaction_log@oltp tl, 
                         policy@oltp p, 
                         policy_term_history@oltp pth
                   WHERE pfd.transaction_log_fk = tl.transaction_log_pk
                     AND tl.policy_fk = p.policy_pk
                     AND pth.policy_term_history_pk = pfd.policy_term_fk
                     AND GREATEST(pth.accounting_from_date, pth.effective_from_date) &lt;=
                         last_day(sysdate)
                     AND greatest(tl.accounting_date, tl.effective_from_date) &lt;=
                         last_day(sysdate)
                     AND pfd.coverage_component_code = 'NETPREM'
                     AND p.policy_cycle_code = 'POLICY'
                     AND tl.transaction_status_code = 'COMPLETE'
                     AND pth.record_mode_code NOT IN ('ENDQUOTE','TEMP')
                   GROUP BY p.policy_no || '^' || pfd.policy_term_fk), 
           m AS ( 
                  SELECT dp1.pol_uniqueid,
                         MAX(fp1.month_id) max_month_id
                  FROM   fact_policy fp1, 
                         dim_policy dp1
                  WHERE  fp1.policy_id = dp1.policy_id
                  GROUP  BY dp1.pol_uniqueid),
           d AS (
                  SELECT /*+ use_hash(fpc, dp, m) */
					     dp.pol_uniqueid, SUM(fpc.wrtn_prem_amt_itd) written_prem
                  FROM   Fact_Policycoverage fpc, 
                         Dim_Policy dp,
                         m
                  WHERE  fpc.policy_id = dp.policy_id
                  AND    dp.pol_uniqueid = m.pol_uniqueid
                  AND    fpc.month_id  = m.max_month_id
                  AND    dp.pol_uniqueid NOT LIKE '%^0'
                  AND    dp.pol_uniqueid NOT LIKE '%^PYN%'
                  AND    dp.pol_uniqueid &lt;&gt; 'Unknown'                  
                  GROUP  BY dp.pol_uniqueid
                  )
      SELECT 'Summary: Total Policy Premium Match Between Both OLTP and DW ITD = '||to_char(COUNT(*),'99,999,999') error_msg,
             'Information' message_level
      FROM   o, d
      WHERE  o.pol_uniqueid = d.pol_uniqueid
      AND    o.written_prem = d.written_prem                    
      UNION ALL
      SELECT 'Policy Premium Found On OLTP but not on DW, Policy Uniqueid = '||o.pol_uniqueid error_msg,
             'Error' message_level
      FROM   o
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   d
              WHERE  d.pol_uniqueid = o.pol_uniqueid)    
      UNION ALL
      SELECT 'Policy Premium Found On DW but not on OLTP, Policy Uniqueid = '||d.pol_uniqueid error_msg,
             'Error' message_level
      FROM   d
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   o
              WHERE  d.pol_uniqueid = o.pol_uniqueid)
      UNION ALL
      SELECT 'Policy Premium does not match between DW ITD and OLTP, Policy Uniqueid = '||d.pol_uniqueid error_msg,
             'Error' message_level
      FROM   d, o
      WHERE  d.pol_uniqueid = o.pol_uniqueid
      AND    d.written_prem &lt;&gt; o.written_prem
     );
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_DataWarehouse</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>748</xloc>
      <yloc>118</yloc>
    </entry>
    <entry>
      <name>Execute Policy MTD Premium Validation SQL</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT
  INTO dw_etl_audit
WITH max_id AS
     (select nvl(max(dw_etl_audit_pk),0)  max_audit_pk
      from   dw_etl_audit e)
SELECT max_audit_pk + rownum,
       error_msg,
       ${sql_loadDate},
       '${Internal.Job.Name}',
       '${Internal.Transformation.Name}',
       'Policy',
       message_level
FROM  max_id,
     (
      WITH o AS ( SELECT dp.pol_uniqueid, SUM(fpt.amount) written_prem
                  FROM   Fact_Policytransaction fpt, 
                         Dim_Policy dp
                  WHERE  fpt.policy_id = dp.policy_id
                  AND    fpt.earningstype = 'N'
                  AND    fpt.include_in_summary_b = 'Y'
                  AND    dp.pol_uniqueid NOT LIKE '%^0'
                  AND    dp.pol_uniqueid NOT LIKE '%^PYN%'
                  AND    dp.pol_uniqueid &lt;&gt; 'Unknown'                  
                  GROUP  BY dp.pol_uniqueid
                  ),            
           d AS (
                  SELECT dp.pol_uniqueid, SUM(fpc.wrtn_prem_amt) written_prem
                  FROM   Fact_Policycoverage fpc, 
                         Dim_Policy dp
                  WHERE  fpc.policy_id = dp.policy_id
                  AND    dp.pol_uniqueid NOT LIKE '%^0'
                  AND    dp.pol_uniqueid NOT LIKE '%^PYN%'
                  AND    dp.pol_uniqueid &lt;&gt; 'Unknown'                  
                  GROUP  BY dp.pol_uniqueid
                  )
      SELECT 'Summary: Total Policy Premium Match Between FPT and FPC MTD = '||to_char(COUNT(*),'99,999,999') error_msg,
             'Information' message_level
      FROM   o, d
      WHERE  o.pol_uniqueid = d.pol_uniqueid
      AND    o.written_prem = d.written_prem                    
      UNION ALL
      SELECT 'Policy Premium Found in FPT but not in FPC, Policy Uniqueid = '||o.pol_uniqueid error_msg,
             'Error' message_level
      FROM   o
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   d
              WHERE  d.pol_uniqueid = o.pol_uniqueid)    
      UNION ALL
      SELECT 'Policy Premium Found in FPC but not in FPT, Policy Uniqueid = '||d.pol_uniqueid error_msg,
             'Error' message_level
      FROM   d
      WHERE  NOT EXISTS 
             (SELECT 1
              FROM   o
              WHERE  d.pol_uniqueid = o.pol_uniqueid)
      UNION ALL
      SELECT 'Policy Premium does not match between FPT and FPC MTD, Policy Uniqueid = '||d.pol_uniqueid error_msg,
             'Error' message_level
      FROM   d, o
      WHERE  d.pol_uniqueid = o.pol_uniqueid
      AND    d.written_prem &lt;&gt; o.written_prem
     );
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_DataWarehouse</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>721</xloc>
      <yloc>241</yloc>
    </entry>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>80</xloc>
      <yloc>121</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>Execute Policy No Validation SQL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Execute Policy No Validation SQL</from>
      <to>Execute Policy Transaction Validation SQL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Execute Policy Transaction Validation SQL</from>
      <to>Execute Policy Term Premium Validation SQL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Execute Policy Term Premium Validation SQL</from>
      <to>Execute Policy ITD Premium Validation SQL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Execute Policy ITD Premium Validation SQL</from>
      <to>Execute Policy MTD Premium Validation SQL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
</job>
