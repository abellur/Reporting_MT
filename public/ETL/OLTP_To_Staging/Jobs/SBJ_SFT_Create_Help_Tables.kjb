<job>
  <name>SBJ_SFT_Create_Help_Tables</name>
  <description/>
  <extended_description>Date         By     Description
02/10/2015   Jma    Issue 169274. Add a new path for OASIS version 2016.1 or above when create 
                    table dw_tmp_sft_lkup_basisuniqueid.</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/public/ETL/OLTP_To_Staging/Jobs</directory>
  <created_user>-</created_user>
  <created_date>2014/10/30 11:32:58.197</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/08/09 02:27:21.451</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>4SBI_Staging</name>
    <server>${G_STAGING_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_STAGING_DB_NAME}</database>
    <port>${G_STAGING_DB_PORT}</port>
    <username>${G_STAGING_DB_USERNAME}</username>
    <password>${G_STAGING_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_STAGING_DB_DATA}</data_tablespace>
    <index_tablespace>${G_STAGING_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_STAGING_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>Delphi_OLTP</name>
    <server>${G_OLTP_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_OLTP_DB_NAME}</database>
    <port>${G_OLTP_DB_PORT}</port>
    <username>${G_OLTP_DB_USERNAME}</username>
    <password>${G_OLTP_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_OLTP_DB_DATA}</data_tablespace>
    <index_tablespace>${G_OLTP_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_OLTP_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    <slaveserver>
      <name>4Sight BI - PDI Server</name>
      <hostname>10.0.0.21</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Carte 1</name>
      <hostname>localhost</hostname>
      <port>9081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>DI Server</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_DEV</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_SERVER</name>
      <hostname>http://magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_TEST</name>
      <hostname>magspentahotest</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_BTS</name>
      <hostname>129.144.25.104</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_DEV</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Master</name>
      <hostname>localhost</hostname>
      <port>8081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SERVER1</name>
      <hostname>LOCALHOST</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE ONE</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4a418bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE TWO</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave1</name>
      <hostname>localhost</hostname>
      <port>8082</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave2</name>
      <hostname>localhost</hostname>
      <port>8083</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave3</name>
      <hostname>localhost</hostname>
      <port>8084</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>local DIS</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>magspentahodev</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
  </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <checkpoint-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <max_nr_retries/>
    <run_retry_period/>
    <namespace_parameter/>
    <save_parameters/>
    <save_result_rows/>
    <save_result_files/>
    <field>
      <id>ID_JOB_RUN</id>
      <enabled>Y</enabled>
      <name>ID_JOB_RUN</name>
    </field>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>NAMESPACE</id>
      <enabled>Y</enabled>
      <name>NAMESPACE</name>
    </field>
    <field>
      <id>CHECKPOINT_NAME</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_NAME</name>
    </field>
    <field>
      <id>CHECKPOINT_COPYNR</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_COPYNR</name>
    </field>
    <field>
      <id>ATTEMPT_NR</id>
      <enabled>Y</enabled>
      <name>ATTEMPT_NR</name>
    </field>
    <field>
      <id>JOB_RUN_START_DATE</id>
      <enabled>Y</enabled>
      <name>JOB_RUN_START_DATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>RESULT_XML</id>
      <enabled>Y</enabled>
      <name>RESULT_XML</name>
    </field>
    <field>
      <id>PARAMETER_XML</id>
      <enabled>Y</enabled>
      <name>PARAMETER_XML</name>
    </field>
  </checkpoint-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>Y</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>244</yloc>
    </entry>
    <entry>
      <name>Create dw_tmp_sft_lkup_poltrans_d</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_sft_lkup_poltrans_d nologging PCTFREE 0 
tablespace ${G_STAGING_DB_DATA}
as
SELECT x.sk_recordnum,
       x.original_trans_type_code ptt_typecode,
       x.poltrans_unique_id
  FROM (SELECT t.sk_recordnum,
               t.original_trans_type_code,
               v.policytransaction_uniqueid poltrans_unique_id,
               row_number() over(PARTITION BY t.sk_recordnum ORDER BY v.pt_sequence) pick_1
          FROM stg_policytransaction v, dw_tmp_sft_transdetail@oltp t
         WHERE 1 = 1
           AND t.original_source_record_fk = v.pt_sequence
           AND t.original_source_table_name = 'TRANSACTION_LOG'
           AND t.fm_trans_type_code IN ('AGENTCOMM', 'COMMISSION')
        UNION
        -- VPAS-2004, Add for Velocity policy transaction
        SELECT t.sk_recordnum,
               t.original_trans_type_code,
               t1.transaction_uniqueid,
               row_number() over(PARTITION BY t.sk_recordnum ORDER BY t1.transaction_uniqueid) pick_1
          FROM vl_stg_transaction          t1,
               fm_policy_transaction@oltp  f,
               dw_tmp_sft_transdetail@oltp t
         WHERE t1.transaction_uniqueid = f.transaction_id
           AND f.fm_policy_transaction_pk = t.original_source_record_fk
           AND t.fm_trans_type_code IN ('AGENTCOMM', 'COMMISSION')) x
 WHERE x.pick_1 = 1;
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>90</yloc>
    </entry>
    <entry>
      <name>Insert dw_tmp_sft_lkup_clmtrans1</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT /*+ append */ INTO dw_tmp_sft_lkup_clmtrans1
SELECT td.sk_recordnum,
       'TXN'||cm_transaction_pk       ||
       'CIX'||coverage_insured_xref_fk||
       'CMT'||claimant_fk             ||
       'DET'||cm_transaction_detail_pk claimtrans_unique_id,
       d.cm_transaction_type_code claim_transaction_code
  FROM CM_Transaction        t, 
       CM_Transaction_Detail d,
       dw_tmp_sft_transdetail   td
 WHERE t.cm_transaction_pk = td.original_source_record_fk
   AND 'CM_TRANSACTION'    = td.original_source_table_name
   AND t.cm_transaction_pk = d.cm_transaction_fk
   AND d.cm_transaction_detail_pk = (SELECT MAX(d.cm_transaction_detail_pk)
                                       FROM CM_Transaction_Detail d1
                                      WHERE d1.cm_transaction_fk  = t.cm_transaction_pk)
   AND 'CLAIM' = td.original_transaction_source
   AND 'AGENTCOMM' = td.fm_trans_type_code;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>228</yloc>
    </entry>
    <entry>
      <name>Create tmp_sft_lkup_clmtrans2</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_sft_lkup_clmtrans2 nologging PCTFREE 0 
tablespace ${G_OLTP_DB_DATA}
as
SELECT td.sk_recordnum,
       'TXN'||cm_transaction_pk       ||
       'CIX'||coverage_insured_xref_fk||
       'CMT'||claimant_fk             ||
       'DET'||cm_transaction_detail_pk claimtrans_unique_id,
       d.cm_transaction_type_code claim_transaction_code
  FROM CM_Transaction        t, 
       CM_Transaction_Detail d,
       dw_tmp_sft_transdetail   td
 WHERE d.cm_transaction_detail_pk = td.original_source_record_fk
   AND 'CM_TRANSACTION_DETAIL'    = td.original_source_table_name
   AND t.cm_transaction_pk = d.cm_transaction_fk
   AND 'CLAIM' = td.original_transaction_source
   AND 'AGENTCOMM' = td.fm_trans_type_code;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>286</yloc>
    </entry>
    <entry>
      <name>Create dw_tmp_sft_lkup_basisuniqueid</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_sft_lkup_basisuniqueid nologging PCTFREE 0 
tablespace ${G_OLTP_DB_DATA}
as
SELECT DISTINCT t.sk_recordnum,
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', pac.ere_comm_pay_code, pac.commission_pay_code),'null')||'^'||
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', pac.ere_comm_basis, pac.comm_basis), 'UNK')||'^'||
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y',
                     DECODE(pac.ere_comm_basis, 'PERCENT',to_char(pac.ere_rate), 
                                                'SCHED'  ,to_char(pac.ere_comm_rate_sched_fk),
                                                'FLAT'   ,to_char(pac.ere_flat_amt)),
                     DECODE(pac.comm_basis,     'PERCENT',to_char(pac.rate), 
                                                'SCHED'  ,to_char(pac.comm_rate_sched_fk),
                                                'FLAT'   ,to_char(pac.flat_amt))),                                                                                                
           'UNKNOWN') ||'^'||                                        
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', to_char(pac.ere_comm_limit), to_char(pac.comm_limit)),'null') transactionBasis_uniqueID 
  FROM Pth_Agent_Comm_Rate pac,
       Policy_Term_History h,
       -- #165442
       --Comm_Rate_Sched     s,
       dw_tmp_sft_transdetail t
 WHERE 1 = 1
   AND pac.policy_term_history_fk = t.original_trans_term_fk
   AND pac.policy_term_history_fk = h.policy_term_history_pk
   AND pac.pth_agent_comm_rate_pk = Fmn_Agency.Get_Pth_Agent_Comm_Rate_Pk(
                                                             h.policy_term_history_pk,
                                                             h.effective_from_date,
                                                             h.effective_to_date,
                                                             t.original_transaction_date)
   -- #165442
   /*AND DECODE(t.original_trans_tail_coverage_b, 'Y', DECODE(pac.ere_comm_basis , 'SCHED', pac.ere_comm_rate_sched_fk, -99),
                      DECODE(pac.comm_basis, 'SCHED', pac.comm_rate_sched_fk, -99)) = 
                      DECODE(t.original_trans_tail_coverage_b, 'Y', DECODE(pac.ere_comm_basis , 'SCHED', s.comm_rate_sched_pk, -99),
                      DECODE(pac.comm_basis, 'SCHED', s.comm_rate_sched_pk, -99)) */
   AND 'AGENTCOMM' = t.fm_trans_type_code;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>802</xloc>
      <yloc>347</yloc>
    </entry>
    <entry>
      <name>Create dw_tmp_sft_lkup_claimkey</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_sft_lkup_claimkey nologging PCTFREE 0 
tablespace ${G_OLTP_DB_DATA}
as
SELECT x.sk_recordnum,
       x.claim_key
FROM   (    
        SELECT t.sk_recordnum,
               to_char(k.claim_fk) ||'^'|| k.feature_key AS claim_key,
               row_number() OVER (PARTITION BY t.sk_recordnum, k.claim_fk ORDER BY k.feature_key) pick_1
        FROM   dw_claim_feature_key k,
               dw_tmp_sft_transdetail t,
               coverage_insured_xref cix
        WHERE  k.claim_fk = t.claim_fk
          AND  k.coverage_insured_xref_fk = cix.coverage_insured_xref_pk
          AND  cix.coverage_fk = t.coverage_fk) x
WHERE  pick_1 = 1;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>553</yloc>
    </entry>
    <entry>
      <name>TR_SFT_Create_Dw_Tmp_Sft_Lkup_Poltrans</name>
      <description/>
      <type>TRANS</type>
      <specification_method>rep_name</specification_method>
      <trans_object_id/>
      <filename/>
      <transname>TR_SFT_Create_Dw_Tmp_Sft_Lkup_Poltrans</transname>
      <directory>/public/ETL/OLTP_To_Staging/Transformations</directory>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1006</xloc>
      <yloc>90</yloc>
    </entry>
    <entry>
      <name>Simple evaluation - OASIS Version</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${v_20161_or_later}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>Y</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>329</xloc>
      <yloc>442</yloc>
    </entry>
    <entry>
      <name>Create dw_tmp_sft_lkup_basisuniqueid 2</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_sft_lkup_basisuniqueid nologging PCTFREE 0 
tablespace ${G_OLTP_DB_DATA}
as
SELECT DISTINCT t.sk_recordnum,
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', pac.ere_comm_pay_code, pac.commission_pay_code),'null')||'^'||
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', pac.ere_comm_basis, pac.comm_basis), 'UNK')||'^'||
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y',
                     DECODE(pac.ere_comm_basis, 'PERCENT',to_char(pac.ere_rate), 
                                                'SCHED'  ,to_char(pac.ere_comm_rate_sched_fk),
                                                'FLAT'   ,to_char(pac.ere_flat_amt)),
                     DECODE(pac.comm_basis,     'PERCENT',to_char(pac.rate), 
                                                'SCHED'  ,to_char(pac.comm_rate_sched_fk),
                                                'FLAT'   ,to_char(pac.flat_amt))),                                                                                                
           'UNKNOWN') ||'^'||                                        
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', to_char(pac.ere_comm_limit), to_char(pac.comm_limit)),'null') transactionBasis_uniqueID 
  FROM Pth_Agent_Comm_Rate pac,
       -- Issue #169274, change to use FM_TERM_V view
       -- Policy_Term_History h,
       Fm_Term_V h,
       -- #165442
       --Comm_Rate_Sched     s,
       dw_tmp_sft_transdetail t
 WHERE 1 = 1
   AND pac.policy_term_history_fk = t.original_trans_term_fk
   AND pac.policy_term_history_fk = h.fm_term_pk
   AND pac.pth_agent_comm_rate_pk = Fmn_Agency.Get_Pth_Agent_Comm_Rate_Pk(
                                                             h.fm_term_pk,
                                                             h.effective_from_date,
                                                             h.effective_to_date,
                                                             t.original_transaction_date)
   -- #165442
   /*AND DECODE(t.original_trans_tail_coverage_b, 'Y', DECODE(pac.ere_comm_basis , 'SCHED', pac.ere_comm_rate_sched_fk, -99),
                      DECODE(pac.comm_basis, 'SCHED', pac.comm_rate_sched_fk, -99)) = 
                      DECODE(t.original_trans_tail_coverage_b, 'Y', DECODE(pac.ere_comm_basis , 'SCHED', s.comm_rate_sched_pk, -99),
                      DECODE(pac.comm_basis, 'SCHED', s.comm_rate_sched_pk, -99)) */
   AND 'AGENTCOMM' = t.fm_trans_type_code;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>802</xloc>
      <yloc>475</yloc>
    </entry>
    <entry>
      <name>If exists dw_tmp_sft_lkup_poltrans_d</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_sft_lkup_poltrans_d</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>329</xloc>
      <yloc>90</yloc>
    </entry>
    <entry>
      <name>Drop dw_tmp_sft_lkup_poltrans_d</name>
      <description/>
      <type>SQL</type>
      <sql>drop table dw_tmp_sft_lkup_poltrans_d purge;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>411</xloc>
      <yloc>20</yloc>
    </entry>
    <entry>
      <name>If exists dw_tmp_sft_lkup_poltrans</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_sft_lkup_poltrans</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>747</xloc>
      <yloc>90</yloc>
    </entry>
    <entry>
      <name>Create dw_tmp_sft_lkup_poltrans</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_sft_lkup_poltrans
( sk_recordnum       NUMBER,
  ptt_typecode       VARCHAR2(10),
  poltrans_unique_id VARCHAR2(200))
nologging pctfree 0;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>842</xloc>
      <yloc>20</yloc>
    </entry>
    <entry>
      <name>If exists dw_tmp_sft_lkup_clmtrans1</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_sft_lkup_clmtrans1</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>329</xloc>
      <yloc>173</yloc>
    </entry>
    <entry>
      <name>Create dw_tmp_sft_lkup_clmtrans1 2</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_sft_lkup_clmtrans1 nologging PCTFREE 0 
tablespace ${G_OLTP_DB_DATA}
as
SELECT td.sk_recordnum,
       'TXN'||cm_transaction_pk       ||
       'CIX'||coverage_insured_xref_fk||
       'CMT'||claimant_fk             ||
       'DET'||cm_transaction_detail_pk claimtrans_unique_id,
       d.cm_transaction_type_code claim_transaction_code
  FROM CM_Transaction        t, 
       CM_Transaction_Detail d,
       dw_tmp_sft_transdetail   td
 WHERE t.cm_transaction_pk = td.original_source_record_fk
   AND 'CM_TRANSACTION'    = td.original_source_table_name
   AND t.cm_transaction_pk = d.cm_transaction_fk
   AND d.cm_transaction_detail_pk = (SELECT MAX(d.cm_transaction_detail_pk)
                                       FROM CM_Transaction_Detail d1
                                      WHERE d1.cm_transaction_fk  = t.cm_transaction_pk)
   AND 'CLAIM' = td.original_transaction_source
   AND 'AGENTCOMM' = td.fm_trans_type_code;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>163</yloc>
    </entry>
    <entry>
      <name>If exists dw_tmp_sft_lkup_clmtrans2</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_sft_lkup_clmtrans2</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>329</xloc>
      <yloc>317</yloc>
    </entry>
    <entry>
      <name>Insert tmp_sft_lkup_clmtrans2</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT /*+ append */ INTO  dw_tmp_sft_lkup_clmtrans2
SELECT td.sk_recordnum,
       'TXN'||cm_transaction_pk       ||
       'CIX'||coverage_insured_xref_fk||
       'CMT'||claimant_fk             ||
       'DET'||cm_transaction_detail_pk claimtrans_unique_id,
       d.cm_transaction_type_code claim_transaction_code
  FROM CM_Transaction        t, 
       CM_Transaction_Detail d,
       dw_tmp_sft_transdetail   td
 WHERE d.cm_transaction_detail_pk = td.original_source_record_fk
   AND 'CM_TRANSACTION_DETAIL'    = td.original_source_table_name
   AND t.cm_transaction_pk = d.cm_transaction_fk
   AND 'CLAIM' = td.original_transaction_source
   AND 'AGENTCOMM' = td.fm_trans_type_code;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>348</yloc>
    </entry>
    <entry>
      <name>If exists dw_tmp_sft_lkup_basisuniqueid</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_sft_lkup_basisuniqueid</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>409</yloc>
    </entry>
    <entry>
      <name>If exists dw_tmp_sft_lkup_basisuniqueid 2</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_sft_lkup_basisuniqueid</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>473</yloc>
    </entry>
    <entry>
      <name>Insert dw_tmp_sft_lkup_basisuniqueid 3</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT /*+ append */ INTO dw_tmp_sft_lkup_basisuniqueid
SELECT DISTINCT t.sk_recordnum,
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', pac.ere_comm_pay_code, pac.commission_pay_code),'null')||'^'||
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', pac.ere_comm_basis, pac.comm_basis), 'UNK')||'^'||
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y',
                     DECODE(pac.ere_comm_basis, 'PERCENT',to_char(pac.ere_rate), 
                                                'SCHED'  ,to_char(pac.ere_comm_rate_sched_fk),
                                                'FLAT'   ,to_char(pac.ere_flat_amt)),
                     DECODE(pac.comm_basis,     'PERCENT',to_char(pac.rate), 
                                                'SCHED'  ,to_char(pac.comm_rate_sched_fk),
                                                'FLAT'   ,to_char(pac.flat_amt))),                                                                                                
           'UNKNOWN') ||'^'||                                        
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', to_char(pac.ere_comm_limit), to_char(pac.comm_limit)),'null') transactionBasis_uniqueID 
  FROM Pth_Agent_Comm_Rate pac,
       Policy_Term_History h,
       -- #165442
       --Comm_Rate_Sched     s,
       dw_tmp_sft_transdetail t
 WHERE 1 = 1
   AND pac.policy_term_history_fk = t.original_trans_term_fk
   AND pac.policy_term_history_fk = h.policy_term_history_pk
   AND pac.pth_agent_comm_rate_pk = Fmn_Agency.Get_Pth_Agent_Comm_Rate_Pk(
                                                             h.policy_term_history_pk,
                                                             h.effective_from_date,
                                                             h.effective_to_date,
                                                             t.original_transaction_date)
   -- #165442
   /*AND DECODE(t.original_trans_tail_coverage_b, 'Y', DECODE(pac.ere_comm_basis , 'SCHED', pac.ere_comm_rate_sched_fk, -99),
                      DECODE(pac.comm_basis, 'SCHED', pac.comm_rate_sched_fk, -99)) = 
                      DECODE(t.original_trans_tail_coverage_b, 'Y', DECODE(pac.ere_comm_basis , 'SCHED', s.comm_rate_sched_pk, -99),
                      DECODE(pac.comm_basis, 'SCHED', s.comm_rate_sched_pk, -99)) */
   AND 'AGENTCOMM' = t.fm_trans_type_code;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>802</xloc>
      <yloc>409</yloc>
    </entry>
    <entry>
      <name>Insert dw_tmp_sft_lkup_basisuniqueid 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT /*+ append */ INTO dw_tmp_sft_lkup_basisuniqueid
SELECT DISTINCT t.sk_recordnum,
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', pac.ere_comm_pay_code, pac.commission_pay_code),'null')||'^'||
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', pac.ere_comm_basis, pac.comm_basis), 'UNK')||'^'||
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y',
                     DECODE(pac.ere_comm_basis, 'PERCENT',to_char(pac.ere_rate), 
                                                'SCHED'  ,to_char(pac.ere_comm_rate_sched_fk),
                                                'FLAT'   ,to_char(pac.ere_flat_amt)),
                     DECODE(pac.comm_basis,     'PERCENT',to_char(pac.rate), 
                                                'SCHED'  ,to_char(pac.comm_rate_sched_fk),
                                                'FLAT'   ,to_char(pac.flat_amt))),                                                                                                
           'UNKNOWN') ||'^'||                                        
       NVL(DECODE(t.original_trans_tail_coverage_b, 'Y', to_char(pac.ere_comm_limit), to_char(pac.comm_limit)),'null') transactionBasis_uniqueID 
  FROM Pth_Agent_Comm_Rate pac,
       -- Issue #169274, change to use FM_TERM_V view
       -- Policy_Term_History h,
       Fm_Term_V h,
       -- #165442
       --Comm_Rate_Sched     s,
       dw_tmp_sft_transdetail t
 WHERE 1 = 1
   AND pac.policy_term_history_fk = t.original_trans_term_fk
   AND pac.policy_term_history_fk = h.fm_term_pk
   AND pac.pth_agent_comm_rate_pk = Fmn_Agency.Get_Pth_Agent_Comm_Rate_Pk(
                                                             h.fm_term_pk,
                                                             h.effective_from_date,
                                                             h.effective_to_date,
                                                             t.original_transaction_date)
   -- #165442
   /*AND DECODE(t.original_trans_tail_coverage_b, 'Y', DECODE(pac.ere_comm_basis , 'SCHED', pac.ere_comm_rate_sched_fk, -99),
                      DECODE(pac.comm_basis, 'SCHED', pac.comm_rate_sched_fk, -99)) = 
                      DECODE(t.original_trans_tail_coverage_b, 'Y', DECODE(pac.ere_comm_basis , 'SCHED', s.comm_rate_sched_pk, -99),
                      DECODE(pac.comm_basis, 'SCHED', s.comm_rate_sched_pk, -99)) */
   AND 'AGENTCOMM' = t.fm_trans_type_code;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>802</xloc>
      <yloc>544</yloc>
    </entry>
    <entry>
      <name>If exists dw_tmp_sft_lkup_clmtrans2 2</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_sft_lkup_clmtrans2</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>329</xloc>
      <yloc>553</yloc>
    </entry>
    <entry>
      <name>Insert dw_tmp_sft_lkup_claimkey</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT /*+ append */ INTO dw_tmp_sft_lkup_claimkey
SELECT x.sk_recordnum,
       x.claim_key
FROM   (    
        SELECT t.sk_recordnum,
               to_char(k.claim_fk) ||'^'|| k.feature_key AS claim_key,
               row_number() OVER (PARTITION BY t.sk_recordnum, k.claim_fk ORDER BY k.feature_key) pick_1
        FROM   dw_claim_feature_key k,
               dw_tmp_sft_transdetail t,
               coverage_insured_xref cix
        WHERE  k.claim_fk = t.claim_fk
          AND  k.coverage_insured_xref_fk = cix.coverage_insured_xref_pk
          AND  cix.coverage_fk = t.coverage_fk) x
WHERE  pick_1 = 1;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>552</xloc>
      <yloc>625</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>If exists dw_tmp_sft_lkup_poltrans_d</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>If exists dw_tmp_sft_lkup_clmtrans1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>If exists dw_tmp_sft_lkup_clmtrans2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Simple evaluation - OASIS Version</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>If exists dw_tmp_sft_lkup_clmtrans2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_poltrans_d</from>
      <to>Drop dw_tmp_sft_lkup_poltrans_d</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Drop dw_tmp_sft_lkup_poltrans_d</from>
      <to>Create dw_tmp_sft_lkup_poltrans_d</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create dw_tmp_sft_lkup_poltrans_d</from>
      <to>If exists dw_tmp_sft_lkup_poltrans</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_poltrans</from>
      <to>Create dw_tmp_sft_lkup_poltrans</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create dw_tmp_sft_lkup_poltrans</from>
      <to>TR_SFT_Create_Dw_Tmp_Sft_Lkup_Poltrans</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_poltrans_d</from>
      <to>Create dw_tmp_sft_lkup_poltrans_d</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_poltrans</from>
      <to>TR_SFT_Create_Dw_Tmp_Sft_Lkup_Poltrans</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_clmtrans1</from>
      <to>Insert dw_tmp_sft_lkup_clmtrans1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_clmtrans1</from>
      <to>Create dw_tmp_sft_lkup_clmtrans1 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_clmtrans2</from>
      <to>Insert tmp_sft_lkup_clmtrans2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_clmtrans2</from>
      <to>Create tmp_sft_lkup_clmtrans2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation - OASIS Version</from>
      <to>If exists dw_tmp_sft_lkup_basisuniqueid 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation - OASIS Version</from>
      <to>If exists dw_tmp_sft_lkup_basisuniqueid</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_basisuniqueid</from>
      <to>Insert dw_tmp_sft_lkup_basisuniqueid 3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_basisuniqueid</from>
      <to>Create dw_tmp_sft_lkup_basisuniqueid</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_basisuniqueid 2</from>
      <to>Insert dw_tmp_sft_lkup_basisuniqueid 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_basisuniqueid 2</from>
      <to>Create dw_tmp_sft_lkup_basisuniqueid 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_clmtrans2 2</from>
      <to>Insert dw_tmp_sft_lkup_claimkey</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists dw_tmp_sft_lkup_clmtrans2 2</from>
      <to>Create dw_tmp_sft_lkup_claimkey</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>JobRestart</name>
      <attribute>
        <key>UniqueConnections</key>
        <value>N</value>
      </attribute>
    </group>
  </attributes>
</job>
