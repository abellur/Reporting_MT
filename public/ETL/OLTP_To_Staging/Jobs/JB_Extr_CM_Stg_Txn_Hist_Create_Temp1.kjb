<job>
  <name>JB_Extr_CM_Stg_Txn_Hist_Create_Temp1</name>
  <description/>
  <extended_description>Date       By    Description
07/24/2015 Jma   Updated for issue 164111. Add step to check if CM_TRANS_STATUS_HISTORY table has CM_PAYMENT_FK column,
                 if that column exists, run Create tmp pmt 2 step to get payment data.</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/public/ETL/OLTP_To_Staging/Jobs</directory>
  <created_user>-</created_user>
  <created_date>2014/10/27 12:28:05.764</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/23 14:01:38.469</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>Delphi_OLTP</name>
    <server>${G_OLTP_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_OLTP_DB_NAME}</database>
    <port>${G_OLTP_DB_PORT}</port>
    <username>${G_OLTP_DB_USERNAME}</username>
    <password>${G_OLTP_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_OLTP_DB_DATA}</data_tablespace>
    <index_tablespace>${G_OLTP_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_OLTP_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>DW_Log_Link</name>
    <server>${G_LOG_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_LOG_DB_NAME}</database>
    <port>${G_LOG_DB_PORT}</port>
    <username>${G_LOG_DB_USERNAME}</username>
    <password>${G_LOG_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_LOG_DB_DATA}</data_tablespace>
    <index_tablespace>${G_LOG_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_LOG_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    <slaveserver>
      <name>4Sight BI - PDI Server</name>
      <hostname>10.0.0.21</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Carte 1</name>
      <hostname>localhost</hostname>
      <port>9081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>DI Server</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_DEV</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_SERVER</name>
      <hostname>http://magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_TEST</name>
      <hostname>magspentahotest</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_BTS</name>
      <hostname>129.144.25.104</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_DEV</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Master</name>
      <hostname>localhost</hostname>
      <port>8081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SERVER1</name>
      <hostname>LOCALHOST</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE ONE</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4a418bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE TWO</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave1</name>
      <hostname>localhost</hostname>
      <port>8082</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave2</name>
      <hostname>localhost</hostname>
      <port>8083</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave3</name>
      <hostname>localhost</hostname>
      <port>8084</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>local DIS</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>magspentahodev</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
  </slaveservers>
  <job-log-table>
    <connection>DW_LOG_Link</connection>
    <schema/>
    <table>${G_DB_JOB_LOG_TABLE}</table>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <checkpoint-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <max_nr_retries/>
    <run_retry_period/>
    <namespace_parameter/>
    <save_parameters/>
    <save_result_rows/>
    <save_result_files/>
    <field>
      <id>ID_JOB_RUN</id>
      <enabled>Y</enabled>
      <name>ID_JOB_RUN</name>
    </field>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>NAMESPACE</id>
      <enabled>Y</enabled>
      <name>NAMESPACE</name>
    </field>
    <field>
      <id>CHECKPOINT_NAME</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_NAME</name>
    </field>
    <field>
      <id>CHECKPOINT_COPYNR</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_COPYNR</name>
    </field>
    <field>
      <id>ATTEMPT_NR</id>
      <enabled>Y</enabled>
      <name>ATTEMPT_NR</name>
    </field>
    <field>
      <id>JOB_RUN_START_DATE</id>
      <enabled>Y</enabled>
      <name>JOB_RUN_START_DATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>RESULT_XML</id>
      <enabled>Y</enabled>
      <name>RESULT_XML</name>
    </field>
    <field>
      <id>PARAMETER_XML</id>
      <enabled>Y</enabled>
      <name>PARAMETER_XML</name>
    </field>
  </checkpoint-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>tmp pmt exists?</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_clm_stg_txn_hist_pmt</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>213</xloc>
      <yloc>227</yloc>
    </entry>
    <entry>
      <name>Truncate tmp pmt</name>
      <description/>
      <type>SQL</type>
      <sql>--drop table dw_tmp_clm_stg_txn_hist_pmt;
begin
  ${G_OLTP_DB_OWNER}.DW_Truncate_Table('${G_OLTP_DB_OWNER}','dw_tmp_clm_stg_txn_hist_pmt') ;
end;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>213</xloc>
      <yloc>76</yloc>
    </entry>
    <entry>
      <name>Create tmp pmt</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_clm_stg_txn_hist_pmt 
nologging pctfree 0
tablespace ${G_OLTP_DB_DATA} as
select distinct 
       id,
       s.status_id,
       s.mmct_trans_status_code,
       p.cm_payment_type_code mmct_pmt_pmt_type_code,
       ptyp.long_description mmct_pmt_pmt_type_desc,
       payment_number mmct_pmt_number,
       p.payment_status_code mmct_pmt_pmt_status_code,
       pstat.long_description mmct_pmt_pmt_status_desc,
       trunc(payment_status_date) mmct_pmt_status_date,
       payment_amount mmct_pmt_amount,
       p.payee_name mmct_pmt_payee_name,
       payee_account_no mmct_pmt_payee_bnk_acct_no,
       payee_routing_no mmct_pmt_payee_bnk_rte_no,
       payment_request_date mmct_pmt_request_date,
       trunc(payment_cut_date) mmct_pmt_cut_date,
       trunc(payment_accepted_date) mmct_pmt_accept_date,
       addr1 mmct_pmt_addr1,
       addr2 mmct_pmt_addr2,
       city mmct_pmt_city,
       state mmct_pmt_state,
       replace(rtrim(ltrim(zip)),
               ' ',
               '-') mmct_pmt_zip,
       country mmct_pmt_country,
       bank_account_no mmct_pmt_bnk_acct_no,
       stopvoid_reason mmct_pmt_stopvoid_reason,
       stopvoid_action mmct_pmt_stopvoid_action,
       reissue_b mmct_pmt_reissued
  from cm_payment                     p,
       cm_payment_transaction_xref    x,
       dw_tmp_clm_stg_txn_hist_status s,
       lookup_code                    pstat,
       lookup_code                    ptyp
 where s.cm_transaction_pk           = x.cm_transaction_fk
   and pstat.lookup_type_code(+)     = 'CMPAYMENTSTAT'
   and pstat.code(+)                 = p.payment_status_code
   and ptyp.code(+)                  = p.cm_payment_type_code
   and ptyp.lookup_type_code(+)      = 'CMPAYMENTTYPE'
   and p.cm_payment_pk               = x.cm_payment_fk
   and s.status_start_date          &lt;= s.ct_changeeffectivedate
   and ((p.sys_create_time         >= s.status_start_date
   and p.sys_create_time          &lt; s.status_end_date) or
       p.payment_status_code = s.mmct_trans_status_code);</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>616</xloc>
      <yloc>343</yloc>
    </entry>
    <entry>
      <name>tmp stpmt exist?</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>dw_tmp_clm_stg_txn_hist_stpmt</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>762</xloc>
      <yloc>227</yloc>
    </entry>
    <entry>
      <name>Truncate tmp stpmt</name>
      <description/>
      <type>SQL</type>
      <sql>--drop table dw_tmp_clm_stg_txn_hist_stpmt;
begin
  ${G_OLTP_DB_OWNER}.DW_Truncate_Table('${G_OLTP_DB_OWNER}','dw_tmp_clm_stg_txn_hist_stpmt') ;
end;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>762</xloc>
      <yloc>343</yloc>
    </entry>
    <entry>
      <name>Create tmp stpmt</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_clm_stg_txn_hist_stpmt
nologging pctfree 0
tablespace ${G_OLTP_DB_DATA} as
select s.*,
       mmct_pmt_pmt_type_code,
       mmct_pmt_pmt_type_desc,
       mmct_pmt_number,
       mmct_pmt_pmt_status_code,
       mmct_pmt_pmt_status_desc,
       mmct_pmt_status_date,
       mmct_pmt_amount,
       mmct_pmt_payee_name,
       mmct_pmt_payee_bnk_acct_no,
       mmct_pmt_payee_bnk_rte_no,
       mmct_pmt_request_date,
       mmct_pmt_cut_date,
       mmct_pmt_accept_date,
       mmct_pmt_addr1,
       mmct_pmt_addr2,
       mmct_pmt_city,
       mmct_pmt_state,
       mmct_pmt_zip,
       mmct_pmt_country,
       mmct_pmt_bnk_acct_no,
       mmct_pmt_stopvoid_reason,
       mmct_pmt_stopvoid_action,
       mmct_pmt_reissued
  from dw_tmp_clm_stg_txn_hist_status s,
       dw_tmp_clm_stg_txn_hist_pmt p
 where s.status_id = p.status_id(+)
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>989</xloc>
      <yloc>227</yloc>
    </entry>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>81</xloc>
      <yloc>227</yloc>
    </entry>
    <entry>
      <name>Check CM_PAYMENT_FK column</name>
      <description/>
      <type>COLUMNS_EXIST</type>
      <tablename>CM_TRANS_STATUS_HISTORY</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <fields>
        <field>
          <name>CM_PAYMENT_FK</name>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>372</xloc>
      <yloc>227</yloc>
    </entry>
    <entry>
      <name>Create tmp pmt 2</name>
      <description/>
      <type>SQL</type>
      <sql>create table dw_tmp_clm_stg_txn_hist_pmt 
nologging pctfree 0
tablespace ${G_OLTP_DB_DATA} as
select id,
       s.status_id,
       s.mmct_trans_status_code,
       p.cm_payment_type_code mmct_pmt_pmt_type_code,
       ptyp.long_description mmct_pmt_pmt_type_desc,
       payment_number mmct_pmt_number,
       p.payment_status_code mmct_pmt_pmt_status_code,
       pstat.long_description mmct_pmt_pmt_status_desc,
       trunc(payment_status_date) mmct_pmt_status_date,
       payment_amount mmct_pmt_amount,
       p.payee_name mmct_pmt_payee_name,
       payee_account_no mmct_pmt_payee_bnk_acct_no,
       payee_routing_no mmct_pmt_payee_bnk_rte_no,
       payment_request_date mmct_pmt_request_date,
       trunc(payment_cut_date) mmct_pmt_cut_date,
       trunc(payment_accepted_date) mmct_pmt_accept_date,
       addr1 mmct_pmt_addr1,
       addr2 mmct_pmt_addr2,
       city mmct_pmt_city,
       state mmct_pmt_state,
       replace(rtrim(ltrim(zip)),
               ' ',
               '-') mmct_pmt_zip,
       country mmct_pmt_country,
       bank_account_no mmct_pmt_bnk_acct_no,
       stopvoid_reason mmct_pmt_stopvoid_reason,
       stopvoid_action mmct_pmt_stopvoid_action,
       reissue_b mmct_pmt_reissued
  from cm_payment                     p,
       cm_payment_transaction_xref    x,
       dw_tmp_clm_stg_txn_hist_status s,
       lookup_code                    pstat,
       lookup_code                    ptyp,
       cm_trans_status_history        ctsh
 where s.cm_transaction_pk           = x.cm_transaction_fk
   and pstat.lookup_type_code(+)     = 'CMPAYMENTSTAT'
   and pstat.code(+)                 = p.payment_status_code
   and ptyp.code(+)                  = p.cm_payment_type_code
   and ptyp.lookup_type_code(+)      = 'CMPAYMENTTYPE'
   and p.cm_payment_pk               = x.cm_payment_fk
   AND p.cm_payment_pk               = ctsh.cm_payment_fk
   AND ctsh.cm_trans_status_history_pk = s.txn_status_fk
UNION
select id,
       s.status_id,
       s.mmct_trans_status_code,
       p.cm_payment_type_code mmct_pmt_pmt_type_code,
       ptyp.long_description mmct_pmt_pmt_type_desc,
       payment_number mmct_pmt_number,
       p.payment_status_code mmct_pmt_pmt_status_code,
       pstat.long_description mmct_pmt_pmt_status_desc,
       trunc(payment_status_date) mmct_pmt_status_date,
       payment_amount mmct_pmt_amount,
       p.payee_name mmct_pmt_payee_name,
       payee_account_no mmct_pmt_payee_bnk_acct_no,
       payee_routing_no mmct_pmt_payee_bnk_rte_no,
       payment_request_date mmct_pmt_request_date,
       trunc(payment_cut_date) mmct_pmt_cut_date,
       trunc(payment_accepted_date) mmct_pmt_accept_date,
       addr1 mmct_pmt_addr1,
       addr2 mmct_pmt_addr2,
       city mmct_pmt_city,
       state mmct_pmt_state,
       replace(rtrim(ltrim(zip)),
               ' ',
               '-') mmct_pmt_zip,
       country mmct_pmt_country,
       bank_account_no mmct_pmt_bnk_acct_no,
       stopvoid_reason mmct_pmt_stopvoid_reason,
       stopvoid_action mmct_pmt_stopvoid_action,
       reissue_b mmct_pmt_reissued
  from cm_payment                     p,
       cm_payment_transaction_xref    x,
       dw_tmp_clm_stg_txn_hist_status s,
       lookup_code                    pstat,
       lookup_code                    ptyp,
			 cm_trans_status_history        ctsh
 where s.cm_transaction_pk           = x.cm_transaction_fk
   and pstat.lookup_type_code(+)     = 'CMPAYMENTSTAT'
   and pstat.code(+)                 = p.payment_status_code
   and ptyp.code(+)                  = p.cm_payment_type_code
   and ptyp.lookup_type_code(+)      = 'CMPAYMENTTYPE'
   AND s.txn_status_fk               = ctsh.cm_trans_status_history_pk
   AND ctsh.cm_payment_fk IS NULL
   and p.cm_payment_pk               = x.cm_payment_fk
   and s.status_start_date          &lt;= s.ct_changeeffectivedate
   and ((p.sys_create_time         >= s.status_start_date
   and p.sys_create_time          &lt; s.status_end_date) or
       p.payment_status_code = s.mmct_trans_status_code);</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>616</xloc>
      <yloc>227</yloc>
    </entry>
    <entry>
      <name>Check CM_PAYMENT_FK column 2</name>
      <description/>
      <type>COLUMNS_EXIST</type>
      <tablename>CM_TRANS_STATUS_HISTORY</tablename>
      <schemaname/>
      <connection>Delphi_OLTP</connection>
      <fields>
        <field>
          <name>CM_PAYMENT_FK</name>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>372</xloc>
      <yloc>76</yloc>
    </entry>
    <entry>
      <name>Insert tmp pmt 2</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT /*+ append */ INTO dw_tmp_clm_stg_txn_hist_pmt 
select id,
       s.status_id,
       s.mmct_trans_status_code,
       p.cm_payment_type_code mmct_pmt_pmt_type_code,
       ptyp.long_description mmct_pmt_pmt_type_desc,
       payment_number mmct_pmt_number,
       p.payment_status_code mmct_pmt_pmt_status_code,
       pstat.long_description mmct_pmt_pmt_status_desc,
       trunc(payment_status_date) mmct_pmt_status_date,
       payment_amount mmct_pmt_amount,
       p.payee_name mmct_pmt_payee_name,
       payee_account_no mmct_pmt_payee_bnk_acct_no,
       payee_routing_no mmct_pmt_payee_bnk_rte_no,
       payment_request_date mmct_pmt_request_date,
       trunc(payment_cut_date) mmct_pmt_cut_date,
       trunc(payment_accepted_date) mmct_pmt_accept_date,
       addr1 mmct_pmt_addr1,
       addr2 mmct_pmt_addr2,
       city mmct_pmt_city,
       state mmct_pmt_state,
       replace(rtrim(ltrim(zip)),
               ' ',
               '-') mmct_pmt_zip,
       country mmct_pmt_country,
       bank_account_no mmct_pmt_bnk_acct_no,
       stopvoid_reason mmct_pmt_stopvoid_reason,
       stopvoid_action mmct_pmt_stopvoid_action,
       reissue_b mmct_pmt_reissued
  from cm_payment                     p,
       cm_payment_transaction_xref    x,
       dw_tmp_clm_stg_txn_hist_status s,
       lookup_code                    pstat,
       lookup_code                    ptyp,
       cm_trans_status_history        ctsh
 where s.cm_transaction_pk           = x.cm_transaction_fk
   and pstat.lookup_type_code(+)     = 'CMPAYMENTSTAT'
   and pstat.code(+)                 = p.payment_status_code
   and ptyp.code(+)                  = p.cm_payment_type_code
   and ptyp.lookup_type_code(+)      = 'CMPAYMENTTYPE'
   and p.cm_payment_pk               = x.cm_payment_fk
   AND p.cm_payment_pk               = ctsh.cm_payment_fk
   AND ctsh.cm_trans_status_history_pk = s.txn_status_fk
UNION
select id,
       s.status_id,
       s.mmct_trans_status_code,
       p.cm_payment_type_code mmct_pmt_pmt_type_code,
       ptyp.long_description mmct_pmt_pmt_type_desc,
       payment_number mmct_pmt_number,
       p.payment_status_code mmct_pmt_pmt_status_code,
       pstat.long_description mmct_pmt_pmt_status_desc,
       trunc(payment_status_date) mmct_pmt_status_date,
       payment_amount mmct_pmt_amount,
       p.payee_name mmct_pmt_payee_name,
       payee_account_no mmct_pmt_payee_bnk_acct_no,
       payee_routing_no mmct_pmt_payee_bnk_rte_no,
       payment_request_date mmct_pmt_request_date,
       trunc(payment_cut_date) mmct_pmt_cut_date,
       trunc(payment_accepted_date) mmct_pmt_accept_date,
       addr1 mmct_pmt_addr1,
       addr2 mmct_pmt_addr2,
       city mmct_pmt_city,
       state mmct_pmt_state,
       replace(rtrim(ltrim(zip)),
               ' ',
               '-') mmct_pmt_zip,
       country mmct_pmt_country,
       bank_account_no mmct_pmt_bnk_acct_no,
       stopvoid_reason mmct_pmt_stopvoid_reason,
       stopvoid_action mmct_pmt_stopvoid_action,
       reissue_b mmct_pmt_reissued
  from cm_payment                     p,
       cm_payment_transaction_xref    x,
       dw_tmp_clm_stg_txn_hist_status s,
       lookup_code                    pstat,
       lookup_code                    ptyp,
			 cm_trans_status_history        ctsh
 where s.cm_transaction_pk           = x.cm_transaction_fk
   and pstat.lookup_type_code(+)     = 'CMPAYMENTSTAT'
   and pstat.code(+)                 = p.payment_status_code
   and ptyp.code(+)                  = p.cm_payment_type_code
   and ptyp.lookup_type_code(+)      = 'CMPAYMENTTYPE'
   AND s.txn_status_fk               = ctsh.cm_trans_status_history_pk
   AND ctsh.cm_payment_fk IS NULL
   and p.cm_payment_pk               = x.cm_payment_fk
   and s.status_start_date          &lt;= s.ct_changeeffectivedate
   and ((p.sys_create_time         >= s.status_start_date
   and p.sys_create_time          &lt; s.status_end_date) or
       p.payment_status_code = s.mmct_trans_status_code);</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>616</xloc>
      <yloc>25</yloc>
    </entry>
    <entry>
      <name>Insert tmp pmt </name>
      <description/>
      <type>SQL</type>
      <sql>INSERT /*+ append */ INTO dw_tmp_clm_stg_txn_hist_pmt 
select distinct 
       id,
       s.status_id,
       s.mmct_trans_status_code,
       p.cm_payment_type_code mmct_pmt_pmt_type_code,
       ptyp.long_description mmct_pmt_pmt_type_desc,
       payment_number mmct_pmt_number,
       p.payment_status_code mmct_pmt_pmt_status_code,
       pstat.long_description mmct_pmt_pmt_status_desc,
       trunc(payment_status_date) mmct_pmt_status_date,
       payment_amount mmct_pmt_amount,
       p.payee_name mmct_pmt_payee_name,
       payee_account_no mmct_pmt_payee_bnk_acct_no,
       payee_routing_no mmct_pmt_payee_bnk_rte_no,
       payment_request_date mmct_pmt_request_date,
       trunc(payment_cut_date) mmct_pmt_cut_date,
       trunc(payment_accepted_date) mmct_pmt_accept_date,
       addr1 mmct_pmt_addr1,
       addr2 mmct_pmt_addr2,
       city mmct_pmt_city,
       state mmct_pmt_state,
       replace(rtrim(ltrim(zip)),
               ' ',
               '-') mmct_pmt_zip,
       country mmct_pmt_country,
       bank_account_no mmct_pmt_bnk_acct_no,
       stopvoid_reason mmct_pmt_stopvoid_reason,
       stopvoid_action mmct_pmt_stopvoid_action,
       reissue_b mmct_pmt_reissued
  from cm_payment                     p,
       cm_payment_transaction_xref    x,
       dw_tmp_clm_stg_txn_hist_status s,
       lookup_code                    pstat,
       lookup_code                    ptyp
 where s.cm_transaction_pk           = x.cm_transaction_fk
   and pstat.lookup_type_code(+)     = 'CMPAYMENTSTAT'
   and pstat.code(+)                 = p.payment_status_code
   and ptyp.code(+)                  = p.cm_payment_type_code
   and ptyp.lookup_type_code(+)      = 'CMPAYMENTTYPE'
   and p.cm_payment_pk               = x.cm_payment_fk
   and s.status_start_date          &lt;= s.ct_changeeffectivedate
   and ((p.sys_create_time         >= s.status_start_date
   and p.sys_create_time          &lt; s.status_end_date) or
       p.payment_status_code = s.mmct_trans_status_code);</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>616</xloc>
      <yloc>126</yloc>
    </entry>
    <entry>
      <name>Insert tmp stpmt</name>
      <description/>
      <type>SQL</type>
      <sql>INSERT /*+ append */ INTO dw_tmp_clm_stg_txn_hist_stpmt
select s.*,
       mmct_pmt_pmt_type_code,
       mmct_pmt_pmt_type_desc,
       mmct_pmt_number,
       mmct_pmt_pmt_status_code,
       mmct_pmt_pmt_status_desc,
       mmct_pmt_status_date,
       mmct_pmt_amount,
       mmct_pmt_payee_name,
       mmct_pmt_payee_bnk_acct_no,
       mmct_pmt_payee_bnk_rte_no,
       mmct_pmt_request_date,
       mmct_pmt_cut_date,
       mmct_pmt_accept_date,
       mmct_pmt_addr1,
       mmct_pmt_addr2,
       mmct_pmt_city,
       mmct_pmt_state,
       mmct_pmt_zip,
       mmct_pmt_country,
       mmct_pmt_bnk_acct_no,
       mmct_pmt_stopvoid_reason,
       mmct_pmt_stopvoid_action,
       mmct_pmt_reissued
  from dw_tmp_clm_stg_txn_hist_status s,
       dw_tmp_clm_stg_txn_hist_pmt p
 where s.status_id = p.status_id(+)
;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Delphi_OLTP</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>989</xloc>
      <yloc>343</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>tmp pmt exists?</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>tmp pmt exists?</from>
      <to>Truncate tmp pmt</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Truncate tmp pmt</from>
      <to>Check CM_PAYMENT_FK column 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>tmp pmt exists?</from>
      <to>Check CM_PAYMENT_FK column</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check CM_PAYMENT_FK column 2</from>
      <to>Insert tmp pmt 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Insert tmp pmt 2</from>
      <to>tmp stpmt exist?</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>tmp stpmt exist?</from>
      <to>Truncate tmp stpmt</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Truncate tmp stpmt</from>
      <to>Insert tmp stpmt</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>tmp stpmt exist?</from>
      <to>Create tmp stpmt</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check CM_PAYMENT_FK column 2</from>
      <to>Insert tmp pmt </to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Insert tmp pmt </from>
      <to>tmp stpmt exist?</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check CM_PAYMENT_FK column</from>
      <to>Create tmp pmt 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create tmp pmt 2</from>
      <to>tmp stpmt exist?</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check CM_PAYMENT_FK column</from>
      <to>Create tmp pmt</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create tmp pmt</from>
      <to>tmp stpmt exist?</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>JobRestart</name>
      <attribute>
        <key>UniqueConnections</key>
        <value>N</value>
      </attribute>
    </group>
  </attributes>
</job>
