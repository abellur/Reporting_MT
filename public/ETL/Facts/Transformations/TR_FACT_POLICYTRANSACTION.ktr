<transformation>
  <info>
    <name>TR_FACT_POLICYTRANSACTION</name>
    <description>Loads the policy transaction fact table</description>
    <extended_description>Date       By    Description
12/19/2012 Jma   Update DB Lookup (Stg risk location) step to compare risk transaction effective date 
                 with transaction effective date; compare Stg_Risk.Pt_Sequence with current transaction pk.
                 Order the record by risk transaction effective date and Pt_Sequence descend
01/10/2013 Jma   Add steps to prevent getting 0 Policy ID and Policy Ext ID
04/05/2013 Jma   Change the output step for FIRSTOTHERINTEREST_ID and SECONDOTHERINTEREST_ID. These two columns
	         were named as FIRSTOTHERINTEREST_UNIQUEID and SECONDOTHERINTEREST_UNIQUEID.
08/20/2015 Jma   #165147. Updated the position of Database lookup (vdim_company) and Database lookup (vdim_producer)
                 step. Updated the Database lookup (vdim_producer) step to use DIM_LEGALENTITY table 
                 to get data instead of VDIM_PRODUCER. 
01/27/2016 Jma   #165323. Updated DB lkup (stg_coverage - no dates) step to compare STG_COVERAGE dates with policy
                 original expiration date. Added DB lkup (stg_coverage - no dates) 3 step to get data from STG_COVERAGE
                 if prior lookup failed.
02/17/2016 Jma   #169527. Updated Get Stg_Risk Location step to exclude Prior Carrier records.
                 Updated the Get CoveredRisk Extension ID step to exclude Prior Carrier records.
05/02/2016 Jma   #176469. Updated the Database lookup (vdim_producer) step to use VDIM_PRODUCER to get producer_id.
06/09/2016 Jma   #177357. Added steps to determine if the transformation need to load mini policy data.
08/19/2016 Wfred #178080. Updated transformation to improve load performance.</extended_description>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/public/ETL/Facts/Transformations</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection>DW_Log_Link</connection>
        <schema/>
        <table>${G_DB_TR_LOG_TABLE}</table>
        <size_limit_lines/>
        <interval/>
        <timeout_days>${G_DB_LOG_TIMEOUT_DAY}</timeout_days>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
      <slaveserver>
        <name>4Sight BI - PDI Server</name>
        <hostname>10.0.0.21</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>joe</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>Carte 1</name>
        <hostname>localhost</hostname>
        <port>9081</port>
        <webAppName/>
        <username>cluster</username>
        <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>DI Server</name>
        <hostname>localhost</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>joe</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>MM_ETL_DEV</name>
        <hostname>magspentaho</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>shota</username>
        <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>MM_ETL_SERVER</name>
        <hostname>http://magspentaho</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>shota</username>
        <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>MM_ETL_TEST</name>
        <hostname>magspentahotest</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>admin</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>MM_PENTAHO</name>
        <hostname>magspentaho</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>admin</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>MM_PENTAHO_BTS</name>
        <hostname>129.144.25.104</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>admin</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>MM_PENTAHO_DEV</name>
        <hostname>magspentahodev</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>admin</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>Master</name>
        <hostname>localhost</hostname>
        <port>8081</port>
        <webAppName/>
        <username>cluster</username>
        <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>SERVER1</name>
        <hostname>LOCALHOST</hostname>
        <port>3306</port>
        <webAppName/>
        <username>root</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>SLAVE ONE</name>
        <hostname>192.168.2.101</hostname>
        <port>3306</port>
        <webAppName/>
        <username>root</username>
        <password>Encrypted 2be98afc86aa7f2e4a418bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>SLAVE TWO</name>
        <hostname>192.168.2.101</hostname>
        <port>3306</port>
        <webAppName/>
        <username>root</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>Slave1</name>
        <hostname>localhost</hostname>
        <port>8082</port>
        <webAppName/>
        <username>cluster</username>
        <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>Slave2</name>
        <hostname>localhost</hostname>
        <port>8083</port>
        <webAppName/>
        <username>cluster</username>
        <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>Slave3</name>
        <hostname>localhost</hostname>
        <port>8084</port>
        <webAppName/>
        <username>cluster</username>
        <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>local DIS</name>
        <hostname>localhost</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>admin</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>N</master>
        <sslMode>N</sslMode>
      </slaveserver>
      <slaveserver>
        <name>magspentahodev</name>
        <hostname>magspentahodev</hostname>
        <port>9080</port>
        <webAppName>pentaho-di</webAppName>
        <username>admin</username>
        <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
        <proxy_hostname/>
        <proxy_port/>
        <non_proxy_hosts/>
        <master>Y</master>
        <sslMode>N</sslMode>
      </slaveserver>
    </slaveservers>
    <clusterschemas>
      <clusterschema>
        <name>4sbi_admin</name>
        <base_port>40000</base_port>
        <sockets_buffer_size>2000</sockets_buffer_size>
        <sockets_flush_interval>5000</sockets_flush_interval>
        <sockets_compressed>Y</sockets_compressed>
        <dynamic>N</dynamic>
        <slaveservers>
        </slaveservers>
      </clusterschema>
      <clusterschema>
        <name>ClusterSchema</name>
        <base_port>40000</base_port>
        <sockets_buffer_size>2000</sockets_buffer_size>
        <sockets_flush_interval>5000</sockets_flush_interval>
        <sockets_compressed>Y</sockets_compressed>
        <dynamic>N</dynamic>
        <slaveservers>
          <name>Slave3</name>
          <name>Slave2</name>
          <name>Slave1</name>
          <name>Master</name>
        </slaveservers>
      </clusterschema>
      <clusterschema>
        <name>cluster A</name>
        <base_port>40000</base_port>
        <sockets_buffer_size>2000</sockets_buffer_size>
        <sockets_flush_interval>5000</sockets_flush_interval>
        <sockets_compressed>Y</sockets_compressed>
        <dynamic>N</dynamic>
        <slaveservers>
          <name>Carte 1</name>
          <name>local DIS</name>
        </slaveservers>
      </clusterschema>
    </clusterschemas>
    <created_user>albersj</created_user>
    <created_date>2011/05/27 14:25:03.000</created_date>
    <modified_user>joe</modified_user>
    <modified_date>2018/09/07 15:07:08.241</modified_date>
    <key_for_session_key/>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>4SBI_DataWarehouse</name>
    <server>${G_DW_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_DW_DB_NAME}</database>
    <port>${G_DW_DB_PORT}</port>
    <username>${G_DW_DB_USERNAME}</username>
    <password>${G_DW_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_DW_DB_DATA}</data_tablespace>
    <index_tablespace>${G_DW_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_DW_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>4SBI_Staging</name>
    <server>${G_STAGING_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_STAGING_DB_NAME}</database>
    <port>${G_STAGING_DB_PORT}</port>
    <username>${G_STAGING_DB_USERNAME}</username>
    <password>${G_STAGING_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_STAGING_DB_DATA}</data_tablespace>
    <index_tablespace>${G_STAGING_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_STAGING_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>DW_Log_Link</name>
    <server>${G_LOG_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_LOG_DB_NAME}</database>
    <port>${G_LOG_DB_PORT}</port>
    <username>${G_LOG_DB_USERNAME}</username>
    <password>${G_LOG_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_LOG_DB_DATA}</data_tablespace>
    <index_tablespace>${G_LOG_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_LOG_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>Add constants</from>
      <to>Dynamic SQL row</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Add sequence: POLICYTRANSACTION_ID</from>
      <to>Table output (fact_policytransaction)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB Lookup (vdim_earningsFromDate)</from>
      <to>DIM_COMPONENT</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB Lookup (vdim_earningsToDate)</from>
      <to>Database lookup (vdim_producer)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lkup (stg_coverage - no dates)</from>
      <to>JS 1</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lkup (stg_coverage - no dates) 3</from>
      <to>JS 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (dim_classification)</from>
      <to>Switch / Case 3</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (dim_coverage)</from>
      <to>DB lookup (dim_state)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (dim_deductible)</from>
      <to>DB lookup (dim_classification)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (dim_geography) Risk</from>
      <to>Database lookup (dim_territory)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (dim_limit)</from>
      <to>DB lookup (dim_deductible)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (dim_lob)</from>
      <to>DB lookup (vdim_secondinsured)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (dim_policytransaction)</from>
      <to>Database lookup (vdim_company)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (dim_state)</from>
      <to>Derive Date Fields</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (vdim_firstOtherInterest)</from>
      <to>DB lookup (vdim_secondOtherInterest)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (vdim_secondOtherInterest)</from>
      <to>Database join Get Accounting Date ID</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (vdim_secondinsured)</from>
      <to>Switch / Case 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DB lookup (vdim_thirdInsured)</from>
      <to>DB lookup (vdim_firstOtherInterest)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DIM_COMPONENT</from>
      <to>Get Other Adjustment ID</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database join Get Accounting Date ID</from>
      <to>Database lookup (vdim_effectiveDate - transaction)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database join Get Product_ID</from>
      <to>Get Variables: loadDate</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database lookup (dim_territory)</from>
      <to>If field value is null</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database lookup (vdim_company)</from>
      <to>Database join Get Product_ID</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database lookup (vdim_effectiveDate - transaction)</from>
      <to>Database lookup (vdim_underwriter)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database lookup (vdim_producer)</from>
      <to>DB Lookup (vdim_earningsFromDate)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database lookup (vdim_underwriter)</from>
      <to>DB lookup (dim_limit)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database lookup Get Policy ID (Dim_Policy) 2</from>
      <to>JS</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Default Nulls</from>
      <to>Add sequence: POLICYTRANSACTION_ID</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Default Unknowns</from>
      <to>Default Nulls</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Default Unknowns for id</from>
      <to>Default Nulls 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Dummy</from>
      <to>DB lookup (dim_geography) Risk</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Dummy (do nothing) 2</from>
      <to>Switch / Case 2 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Dummy (do nothing) 3</from>
      <to>DB lookup (dim_policytransaction)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Dynamic SQL row</from>
      <to>Remove Dummy Field</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Coverage Extension ID 2</from>
      <to>JS 3</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Other Adjustment ID</from>
      <to>Mapping (Custom ETL)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Policy Ext ID 2</from>
      <to>JS 4</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Variables</from>
      <to>SQL</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Variables: loadDate</from>
      <to>Lookup (new / renew)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>If field value is null</from>
      <to>DB lookup (dim_coverage)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>JS</from>
      <to>Remove Policy ID</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>JS 1</from>
      <to>Remove Coverage</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>JS 2</from>
      <to>Remove Coverage 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>JS 3</from>
      <to>Select values</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>JS 4</from>
      <to>Remove Policy Ext ID</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Lookup (new / renew)</from>
      <to>Value Mapper (new/renew)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Mapping (Custom ETL)</from>
      <to>Select values 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Remove Coverage</from>
      <to>Switch / Case 3 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Remove Coverage 2</from>
      <to>Dummy</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Remove Dummy Field</from>
      <to>Default Unknowns for id</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Remove Policy Ext ID</from>
      <to>Dummy (do nothing) 3</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Remove Policy ID</from>
      <to>DB lookup (vdim_thirdInsured)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>SQL</from>
      <to>Add constants</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Select values</from>
      <to>Dummy (do nothing) 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case</from>
      <to>DB lkup (stg_coverage - no dates)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case</from>
      <to>Switch / Case 3 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case 2</from>
      <to>DB lookup (vdim_thirdInsured)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case 2</from>
      <to>Database lookup Get Policy ID (Dim_Policy) 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case 2 2</from>
      <to>Dummy (do nothing) 3</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case 2 2</from>
      <to>Get Policy Ext ID 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case 3</from>
      <to>Dummy (do nothing) 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case 3</from>
      <to>Get Coverage Extension ID 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case 3 2</from>
      <to>DB lkup (stg_coverage - no dates) 3</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / Case 3 2</from>
      <to>Dummy</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Table input (new or renewal)</from>
      <to>Lookup (new / renew)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Value Mapper (new/renew)</from>
      <to>DB Lookup (vdim_earningsToDate)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Select values 2</from>
      <to>Default Unknowns</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Derive Date Fields</from>
      <to>DB lookup (dim_lob)</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Default Nulls 2</from>
      <to>Switch / Case</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Add constants</name>
    <type>Constant</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>policy_transcategory</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>policy</nullif>
        <length>0</length>
        <precision>0</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>expirationDate_id</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>19000101</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>SOI_UNIQUEID</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <length>0</length>
        <precision>0</precision>
        <set_empty_string>Y</set_empty_string>
      </field>
      <field>
        <name>FOI_UNIQUEID</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <length>0</length>
        <precision>0</precision>
        <set_empty_string>Y</set_empty_string>
      </field>
      <field>
        <name>UDF_PREFIX</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>USD%</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>ANNUALIZED_PREM_AMT</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COV_ABR_AMT</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>SOURCE_SYSTEM</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>OASIS</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>OFFERINGCOMPANY_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICYUNIT_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICYVERSION_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>AGENT_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>LOCATION_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>CLASSIFICATIONEXTENSION_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICYEXTENSIONWC_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVERAGEEXTENSIONWC_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>LOB_CODE</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>MPL</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>VL_WRITTEN_PREM</name>
        <type>Number</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>BUILDING_ID</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>0</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>304</xloc>
      <yloc>18</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Add sequence: POLICYTRANSACTION_ID</name>
    <type>Sequence</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <valuename>POLICYTRANSACTION_ID</valuename>
    <use_database>N</use_database>
    <connection/>
    <schema/>
    <seqname>SEQ_</seqname>
    <use_counter>Y</use_counter>
    <counter_name/>
    <start_at>${MAX_POLICYTRANSACTION_ID}</start_at>
    <increment_by>1</increment_by>
    <max_value>999999999</max_value>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>561</xloc>
      <yloc>889</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB Lookup (vdim_earningsFromDate)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_EARNINGSFROMDATE</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>PT_EARNFROMDATE</name>
        <field>ERNFRM_DATE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>EARNFROMDATE_ID</name>
        <rename>EARNFROMDATE_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>371</xloc>
      <yloc>801</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB Lookup (vdim_earningsToDate)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>vdim_earningsTodate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>PT_EARNTODATE</name>
        <field>ERNTO_DATE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>EARNTODATE_ID</name>
        <rename>EARNTODATE_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>754</xloc>
      <yloc>801</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lkup (stg_coverage - no dates)</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_Staging</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>100</cache_size>
    <lookup>
      <schema/>
      <table>STG_COVERAGE_WORK</table>
      <orderby>COV_EFFECTIVEDATE DESC, PT_SEQUENCE DESC,stgcoverage_id     DESC</orderby>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>COVERAGE_UNIQUEID</name>
        <field>COVERAGE_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>PT_SEQUENCE</name>
        <field>PT_SEQUENCE</field>
        <condition>&lt;=</condition>
        <name2/>
      </key>
      <key>
        <name>ORIGINAL_POL_EXP_DATE</name>
        <field>COV_EFFECTIVEDATE</field>
        <condition>&lt;=</condition>
        <name2/>
      </key>
      <value>
        <name>COV_EFFECTIVEDATE</name>
        <rename>COV_EFFECTIVEDATE2</rename>
        <default/>
        <type>Date</type>
      </value>
      <value>
        <name>COV_EXPIRATIONDATE</name>
        <rename>COV_EXPIRATIONDATE2</rename>
        <default/>
        <type>Date</type>
      </value>
      <value>
        <name>COV_TYPE</name>
        <rename>COV_TYPE_2</rename>
        <default>-1</default>
        <type>String</type>
      </value>
      <value>
        <name>COV_LIMIT1</name>
        <rename>COV_LIMIT12</rename>
        <default/>
        <type>Number</type>
      </value>
      <value>
        <name>COV_LIMIT1TYPE</name>
        <rename>COV_LIMIT1TYPE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_LIMIT2</name>
        <rename>COV_LIMIT22</rename>
        <default/>
        <type>Number</type>
      </value>
      <value>
        <name>COV_LIMIT2TYPE</name>
        <rename>COV_LIMIT2TYPE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_DEDUCTIBLE1</name>
        <rename>COV_DEDUCTIBLE12</rename>
        <default/>
        <type>Number</type>
      </value>
      <value>
        <name>COV_DEDUCTIBLE1TYPE</name>
        <rename>COV_DEDUCTIBLE1TYPE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_CODE</name>
        <rename>COV_CODE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_NAME</name>
        <rename>COV_NAME2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_SUBCODE</name>
        <rename>COV_SUBCODE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_SUBCODENAME</name>
        <rename>COV_SUBCODENAME2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_CLASSCODENAME</name>
        <rename>COV_CLASSCODENAME2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_CLASSCODE</name>
        <rename>COV_CLASSCODE2</rename>
        <default/>
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>897</xloc>
      <yloc>168</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lkup (stg_coverage - no dates) 3</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_Staging</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>100</cache_size>
    <lookup>
      <schema/>
      <table>STG_COVERAGE_WORK</table>
      <orderby>COV_EFFECTIVEDATE DESC, PT_SEQUENCE DESC,stgcoverage_id     DESC</orderby>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>COVERAGE_UNIQUEID</name>
        <field>COVERAGE_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>PT_SEQUENCE</name>
        <field>PT_SEQUENCE</field>
        <condition>&lt;=</condition>
        <name2/>
      </key>
      <value>
        <name>COV_EFFECTIVEDATE</name>
        <rename>COV_EFFECTIVEDATE2</rename>
        <default/>
        <type>Date</type>
      </value>
      <value>
        <name>COV_EXPIRATIONDATE</name>
        <rename>COV_EXPIRATIONDATE2</rename>
        <default/>
        <type>Date</type>
      </value>
      <value>
        <name>COV_TYPE</name>
        <rename>COV_TYPE_2</rename>
        <default>-1</default>
        <type>String</type>
      </value>
      <value>
        <name>COV_LIMIT1</name>
        <rename>COV_LIMIT12</rename>
        <default/>
        <type>Number</type>
      </value>
      <value>
        <name>COV_LIMIT1TYPE</name>
        <rename>COV_LIMIT1TYPE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_LIMIT2</name>
        <rename>COV_LIMIT22</rename>
        <default/>
        <type>Number</type>
      </value>
      <value>
        <name>COV_LIMIT2TYPE</name>
        <rename>COV_LIMIT2TYPE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_DEDUCTIBLE1</name>
        <rename>COV_DEDUCTIBLE12</rename>
        <default/>
        <type>Number</type>
      </value>
      <value>
        <name>COV_DEDUCTIBLE1TYPE</name>
        <rename>COV_DEDUCTIBLE1TYPE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_CODE</name>
        <rename>COV_CODE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_NAME</name>
        <rename>COV_NAME2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_SUBCODE</name>
        <rename>COV_SUBCODE2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_SUBCODENAME</name>
        <rename>COV_SUBCODENAME2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_CLASSCODENAME</name>
        <rename>COV_CLASSCODENAME2</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>COV_CLASSCODE</name>
        <rename>COV_CLASSCODE2</rename>
        <default/>
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>121</xloc>
      <yloc>78</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (dim_classification)</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>DIM_CLASSIFICATION</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>COV_CLASSCODE</name>
        <field>CLASS_CODE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_CLASSCODENAME</name>
        <field>CLASS_CODENAME</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>CLASSIFICATION_ID</name>
        <rename>CLASS_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>897</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (dim_coverage)</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>DIM_COVERAGE</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>COV_TYPE</name>
        <field>COV_TYPE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_CODE</name>
        <field>COV_CODE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_NAME</name>
        <field>COV_NAME</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_SUBCODE</name>
        <field>COV_SUBCODE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_SUBCODENAME</name>
        <field>COV_SUBCODENAME</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>COVERAGE_ID</name>
        <rename>COVERAGE_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>897</xloc>
      <yloc>255</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (dim_deductible)</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>DIM_DEDUCTIBLE</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>COV_DEDUCTIBLE1</name>
        <field>COV_DEDUCTIBLE1</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_DEDUCTIBLE1TYPE</name>
        <field>COV_DEDUCTIBLE1TYPE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>DEDUCTIBLE_ID</name>
        <rename>DEDUCTIBLE_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1081</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (dim_geography) Risk</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>DIM_GEOGRAPHY</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>RSK_CITY</name>
        <field>GEO_CITY</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>RSK_STATE</name>
        <field>GEO_STATE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>RSK_COUNTY</name>
        <field>GEO_STATE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>RSK_POSTALCODE</name>
        <field>GEO_POSTALCODE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>RSK_COUNTRY</name>
        <field>GEO_COUNTRY</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>GEOGRAPHY_ID</name>
        <rename>COVEREDRISKLOCATION_ID</rename>
        <default>0</default>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>310</xloc>
      <yloc>255</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (dim_limit)</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>DIM_LIMIT</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>COV_LIMIT1</name>
        <field>COV_LIMIT1</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_LIMIT1TYPE</name>
        <field>COV_LIMIT1TYPE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_LIMIT2</name>
        <field>COV_LIMIT2</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>COV_LIMIT2TYPE</name>
        <field>COV_LIMIT2TYPE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>LIMIT_ID</name>
        <rename>LIMIT_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1081</xloc>
      <yloc>473</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (dim_lob)</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>200</cache_size>
    <lookup>
      <schema/>
      <table>DIM_LOB</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>LOB_CODE</name>
        <field>LOB_CODE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>LOB_ID</name>
        <rename>LOB_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>897</xloc>
      <yloc>399</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (dim_policytransaction)</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>DIM_POLICYTRANSACTIONEXTENSION</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>POLICYTRANSACTION_UNIQUEID</name>
        <field>POLICYTRANSACTION_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>POLICYTRANSACTIONEXTENSION_ID</name>
        <rename>POLICYTRANSACTIONEXTENSION_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>371</xloc>
      <yloc>715</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (dim_state)</name>
    <type>DBLookup</type>
    <description>Lookup the coverage effective date and the coverage expiration date
from stg_productCoverage where the coverage transaction effective
date is less than or equal to the transaction effective date - ordered by
coverage transaction effective date (taking the max)</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>200</cache_size>
    <lookup>
      <schema/>
      <table>DIM_STATE</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>pol_masterstate</name>
        <field>STATE_CODE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>STATE_ID</name>
        <rename>STATE_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1081</xloc>
      <yloc>255</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (vdim_firstOtherInterest)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_FIRSTOTHERINTEREST</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>FOI_UNIQUEID</name>
        <field>FOI_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>FIRSTOTHERINTEREST_ID</name>
        <rename>FIRSTOTHERINTEREST_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>127</xloc>
      <yloc>399</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (vdim_secondOtherInterest)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_SECONDOTHERINTEREST</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>SOI_UNIQUEID</name>
        <field>SOI_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>SECONDOTHERINTEREST_ID</name>
        <rename>SECONDOTHERINTEREST_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>127</xloc>
      <yloc>473</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (vdim_secondinsured)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_SECONDINSURED</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>SECONDINSURED_UNIQUEID</name>
        <field>SINSD_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>SECONDINSURED_ID</name>
        <rename>SECONDINSURED_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>725</xloc>
      <yloc>399</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB lookup (vdim_thirdInsured)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_THIRDINSURED</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>THIRDINSURED_UNIQUEID</name>
        <field>TINSD_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>THIRDINSURED_ID</name>
        <rename>THIRDINSURED_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>310</xloc>
      <yloc>399</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DIM_COMPONENT</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <rowlimit>0</rowlimit>
    <sql>SELECT max(dc.component_id) as COMPONENT_ID
FROM   Dim_component dc
WHERE  dc.component_uniqueid = ?   
AND    trunc(dc.valid_fromdate) &lt;= trunc(?)
AND    trunc(dc.valid_todate) >= trunc(?)
</sql>
    <outer_join>Y</outer_join>
    <replace_vars>Y</replace_vars>
    <parameter>
      <field>
        <name>COMPONENT_UNIQUEID</name>
        <type>String</type>
      </field>
      <field>
        <name>PT_ACCOUNTINGDATE</name>
        <type>Date</type>
      </field>
      <field>
        <name>PT_ACCOUNTINGDATE</name>
        <type>Date</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>801</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database join Get Accounting Date ID</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <rowlimit>0</rowlimit>
    <sql>SELECT ACCOUNTINGDATE_ID
  FROM VDIM_ACCOUNTINGDATE
 WHERE ACCT_DATE = trunc(?)</sql>
    <outer_join>N</outer_join>
    <replace_vars>N</replace_vars>
    <parameter>
      <field>
        <name>PT_ACCOUNTINGDATE</name>
        <type>Date</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>371</xloc>
      <yloc>473</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database join Get Product_ID</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <rowlimit>0</rowlimit>
    <sql>SELECT dpr.product_id
FROM   dim_policyextension dpe, 
       dim_product dpr
WHERE  dpr.product_uniqueid = NVL(dpe.mmpol_policy_type_code,'UNK')
AND    dpe.policyextension_id = ?</sql>
    <outer_join>Y</outer_join>
    <replace_vars>N</replace_vars>
    <parameter>
      <field>
        <name>POLICYEXTENSION_ID</name>
        <type>Number</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>653</xloc>
      <yloc>651</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup (dim_territory)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>DIM_TERRITORY</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>RSK_TERRITORYCODE</name>
        <field>TERR_CODE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>RSK_TERRITORYNAME</name>
        <field>TERR_NAME</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>TERRITORY_ID</name>
        <rename>TERRITORY_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>559</xloc>
      <yloc>255</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup (vdim_company)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_COMPANY</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>COMPANY_UNIQUEID</name>
        <field>COMP_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>COMPANY_ID</name>
        <rename>COMPANY_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>561</xloc>
      <yloc>715</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup (vdim_effectiveDate - transaction)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_EFFECTIVEDATE</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>PT_EFFECTIVEDATE</name>
        <field>EFF_DATE</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>EFFECTIVEDATE_ID</name>
        <rename>EFFECTIVEDATE_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>635</xloc>
      <yloc>472</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup (vdim_producer)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_PRODUCER</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>PRODUCER_UNIQUEID</name>
        <field>PRDR_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>PRODUCER_ID</name>
        <rename>PRODUCER_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>561</xloc>
      <yloc>801</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup (vdim_underwriter)</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>VDIM_UNDERWRITER</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>UNDERWRITER_UNIQUEID</name>
        <field>UW_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>UNDERWRITER_ID</name>
        <rename>UNDERWRITER_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>897</xloc>
      <yloc>473</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup Get Policy ID (Dim_Policy) 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>Dim_Policy</table>
      <orderby>POLICY_ID desc</orderby>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>POLICY_UNIQUEID</name>
        <field>POL_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>PT_ACCOUNTINGDATE</name>
        <field>VALID_TODATE</field>
        <condition>&gt;</condition>
        <name2/>
      </key>
      <value>
        <name>POLICY_ID</name>
        <rename>POLICY_ID2</rename>
        <default/>
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>559</xloc>
      <yloc>324</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Default Nulls</name>
    <type>IfNull</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <replaceAllByValue/>
    <replaceAllMask/>
    <selectFields>N</selectFields>
    <selectValuesType>Y</selectValuesType>
    <setEmptyStringAll>N</setEmptyStringAll>
    <valuetypes>
      <valuetype>
        <name>Number</name>
        <value>${G_DEFAULT_NUMBER}</value>
        <mask/>
        <set_type_empty_string>N</set_type_empty_string>
      </valuetype>
      <valuetype>
        <name>String</name>
        <value>${G_DEFAULT_TEXT}</value>
        <mask/>
        <set_type_empty_string>N</set_type_empty_string>
      </valuetype>
      <valuetype>
        <name>Date</name>
        <value>${G_DEFAULT_DATE}</value>
        <mask>mm/dd/yyyy</mask>
        <set_type_empty_string>N</set_type_empty_string>
      </valuetype>
      <valuetype>
        <name>Integer</name>
        <value>${G_DEFAULT_NUMBER}</value>
        <mask/>
        <set_type_empty_string>N</set_type_empty_string>
      </valuetype>
    </valuetypes>
    <fields>
      </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>371</xloc>
      <yloc>889</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Default Nulls 2</name>
    <type>IfNull</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <replaceAllByValue>${G_DEFAULT_TEXT}</replaceAllByValue>
    <replaceAllMask/>
    <selectFields>N</selectFields>
    <selectValuesType>Y</selectValuesType>
    <setEmptyStringAll>N</setEmptyStringAll>
    <valuetypes>
      <valuetype>
        <name>Number</name>
        <value>${G_DEFAULT_NUMBER}</value>
        <mask/>
        <set_type_empty_string>N</set_type_empty_string>
      </valuetype>
      <valuetype>
        <name>String</name>
        <value>${G_DEFAULT_TEXT}</value>
        <mask/>
        <set_type_empty_string>N</set_type_empty_string>
      </valuetype>
      <valuetype>
        <name>Date</name>
        <value>${G_DEFAULT_DATE}</value>
        <mask>mm/dd/yyyy</mask>
        <set_type_empty_string>N</set_type_empty_string>
      </valuetype>
      <valuetype>
        <name>Integer</name>
        <value>${G_DEFAULT_NUMBER}</value>
        <mask/>
        <set_type_empty_string>N</set_type_empty_string>
      </valuetype>
    </valuetypes>
    <fields>
      </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>897</xloc>
      <yloc>18</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Default Unknowns</name>
    <type>IfNull</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <replaceAllByValue/>
    <replaceAllMask/>
    <selectFields>Y</selectFields>
    <selectValuesType>N</selectValuesType>
    <setEmptyStringAll>N</setEmptyStringAll>
    <valuetypes>
      </valuetypes>
    <fields>
      <field>
        <name>COMPANY_ID</name>
        <value>${UNK_COMPANY_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>PRODUCER_ID</name>
        <value>${UNK_PRODUCER_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>FIRSTINSURED_ID</name>
        <value>${UNK_INSURED_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>TRANSACTIONTYPE_ID_NEW</name>
        <value>${UNK_POLICYTRANSACTIONTYPE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVEREDRISK_ID</name>
        <value>${UNK_COVEREDRISK_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVEREDRISKLOCATION_ID</name>
        <value>${UNK_COVEREDRISKLOCATION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>TERRITORY_ID</name>
        <value>${UNK_TERRITORY_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICYEFFECTIVEDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICYEXPIRATIONDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVERAGEEFFECTIVEDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVERAGEEXPIRATIONDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>TRANSACTIONDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>PRODUCT_ID</name>
        <value>${UNK_PRODUCT_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVERAGE_ID</name>
        <value>${UNK_COVERAGE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICY_ID</name>
        <value>${UNK_POLICY_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>ACCOUNTINGDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>EFFECTIVEDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>PT_AMOUNT</name>
        <value>${G_DEFAULT_NUMBER}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>PT_SEQUENCE</name>
        <value>${G_DEFAULT_NUMBER}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>EXPIRATIONDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>PRODUCER_ID</name>
        <value>${UNK_PRODUCER_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>UNDERWRITER_ID</name>
        <value>${UNK_UNDERWRITER_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>SECONDINSURED_ID</name>
        <value>${UNK_INSURED_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>THIRDINSURED_ID</name>
        <value>${UNK_INSURED_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>FIRSTOTHERINTEREST_ID</name>
        <value>${UNK_OTHERINTEREST_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>SECONDOTHERINTEREST_ID</name>
        <value>${UNK_OTHERINTEREST_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>LIMIT_ID</name>
        <value>${UNK_LIMIT_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>DEDUCTIBLE_ID</name>
        <value>${UNK_DEDUCTIBLE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>CLASS_ID</name>
        <value>${UNK_CLASSIFICATION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVERAGEEXTENSION_ID</name>
        <value>${UNK_COVERAGEEXTENSION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICYEXTENSION_ID</name>
        <value>${UNK_POLICYEXTENSION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVEREDRISKEXTENSION_ID</name>
        <value>${UNK_COVEREDRISKEXTENSION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICYTRANSACTIONEXTENSION_ID</name>
        <value>${UNK_POLICYTRANSACTIONEXTENSION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>EARNFROMDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>EARNTODATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COMPONENT_ID</name>
        <value>${UNK_COMPONENT_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>OTHERADJUSTMENT_ID</name>
        <value>${UNK_OTHERADJUSTMENT_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>FINANCIALACCOUNTINGDATE_ID</name>
        <value>${UNK_DATE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>255</xloc>
      <yloc>889</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Default Unknowns for id</name>
    <type>IfNull</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <replaceAllByValue/>
    <replaceAllMask/>
    <selectFields>Y</selectFields>
    <selectValuesType>N</selectValuesType>
    <setEmptyStringAll>N</setEmptyStringAll>
    <valuetypes>
      </valuetypes>
    <fields>
      <field>
        <name>FIRSTINSURED_ID</name>
        <value>${UNK_INSURED_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>TRANSACTIONTYPE_ID_NEW</name>
        <value>${UNK_POLICYTRANSACTIONTYPE_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVEREDRISK_ID</name>
        <value>${UNK_COVEREDRISK_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICY_ID</name>
        <value>${UNK_POLICY_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>PT_AMOUNT</name>
        <value>${G_DEFAULT_NUMBER}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>PT_SEQUENCE</name>
        <value>${G_DEFAULT_NUMBER}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVERAGEEXTENSION_ID</name>
        <value>${UNK_COVERAGEEXTENSION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POLICYEXTENSION_ID</name>
        <value>${UNK_POLICYEXTENSION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COVEREDRISKEXTENSION_ID</name>
        <value>${UNK_COVEREDRISKEXTENSION_ID}</value>
        <mask/>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>751</xloc>
      <yloc>18</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Derive Date Fields</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

var POLICYEFFECTIVEDATE_ID;
var POLICYEXPIRATIONDATE_ID;
var COVERAGEEFFECTIVEDATE_ID;
var COVERAGEEXPIRATIONDATE_ID;
var COMPONENTEFFECTIVEDATE_ID;
var COMPONENTEXPIRATIONDATE_ID;
var OTHERADJEFFECTIVEDATE_ID;
var OTHERADJEXPIRATIONDATE_ID;
var TRANSACTIONDATE_ID;
var FINANCIALACCOUNTINGDATE_ID;

POLICYEFFECTIVEDATE_ID = str2num(date2str(POL_EFFECTIVEDATE,"yyyyMMdd"));

POLICYEXPIRATIONDATE_ID = str2num(date2str(POL_EXPIRATIONDATE,"yyyyMMdd"));

COVERAGEEFFECTIVEDATE_ID = str2num(date2str(COV_EFFECTIVEDATE,"yyyyMMdd"));

COVERAGEEXPIRATIONDATE_ID = str2num(date2str(COV_EXPIRATIONDATE,"yyyyMMdd"));

COMPONENTEFFECTIVEDATE_ID = str2num(date2str(COM_EFFECTIVEDATE,"yyyyMMdd"));

COMPONENTEXPIRATIONDATE_ID = str2num(date2str(COM_EXPIRATIONDATE,"yyyyMMdd"));

OTHERADJEFFECTIVEDATE_ID = str2num(date2str(OTHRADJUSTMENT_EFFECTIVEDATE,"yyyyMMdd"));

OTHERADJEXPIRATIONDATE_ID = str2num(date2str(OTHRADJUSTMENT_EXPIRATIONDATE,"yyyyMMdd"));

TRANSACTIONDATE_ID = str2num(date2str(PT_TRANSACTIONDATE,"yyyyMMdd"));

FINANCIALACCOUNTINGDATE_ID = str2num(date2str(FINANCIALACCOUNTING_DATE,"yyyyMMdd"));</jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>-1</jsScript_type>
        <jsScript_name>date2str_Sample</jsScript_name>
        <jsScript_script>// Converts the given Date to a string Value.
//
// Usage:
// date2str(var);
// 1: Date - The Variable with the Date to convert.
// This call uses your localized format.
//
// date2str(var, var);
// 1: Date - The Variable with the Date to convert.
// 2: String - The Format:
//        yy / yyyy - 06 / 2006
//        MM / MMM / MMMMM - 11 / Nov / November
//        d / dd  - 1 / 01
//        E / EEEE - Tue / Tuesday
//        hh / HH - 11 / 23
//        m / mm - 5 / 05
//        s / ss - 8 / 08
//
// date2str(var, var, var);
// 1: Date - The Variable with the Date to convert.
// 2: String - The Format:
// 3: String - The Locale Parameter
//    A valid ISO Language Code. (DE = German, EN = English, FR = France, ...)
//
// date2str(var, var, var, var);
// 1: Date - The Variable with the Date to convert.
// 2: String - The Format:
// 3: String - The Locale Parameter
//    A valid ISO Language Code. (DE = German, EN = English, FR = France, ...)
// 4: String - The Timezone Parameter.
//    A valid timezone: EST, GMT, ... (if invalid GMT will be selected as default)
// 
// 2006-11-15
//
var dValue = new Date();
Alert(date2str(dValue));
Alert(date2str(dValue,"dd.MM.yyyy"));
Alert(date2str(dValue,"dd.MM.yyyy HH:mm:ss"));
Alert(date2str(dValue,"E.MMM.yyyy","DE"));
Alert(date2str(dValue,"dd.MM.yyyy HH:mm:ss","EN"));
Alert(date2str(dValue,"dd.MM.yyyy HH:mm:ss","EN", "EST"));
     </jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>POLICYEXPIRATIONDATE_ID</name>
        <rename>POLICYEXPIRATIONDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>POLICYEFFECTIVEDATE_ID</name>
        <rename>POLICYEFFECTIVEDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>COVERAGEEFFECTIVEDATE_ID</name>
        <rename>COVERAGEEFFECTIVEDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>COVERAGEEXPIRATIONDATE_ID</name>
        <rename>COVERAGEEXPIRATIONDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>COMPONENTEFFECTIVEDATE_ID</name>
        <rename>COMPONENTEFFECTIVEDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>COMPONENTEXPIRATIONDATE_ID</name>
        <rename>COMPONENTEXPIRATIONDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>OTHERADJEFFECTIVEDATE_ID</name>
        <rename>OTHERADJEFFECTIVEDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>OTHERADJEXPIRATIONDATE_ID</name>
        <rename>OTHERADJEXPIRATIONDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>TRANSACTIONDATE_ID</name>
        <rename>TRANSACTIONDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>FINANCIALACCOUNTINGDATE_ID</name>
        <rename>FINANCIALACCOUNTINGDATE_ID</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1081</xloc>
      <yloc>399</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Dummy</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>121</xloc>
      <yloc>255</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Dummy (do nothing) 2</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>371</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Dummy (do nothing) 3</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>715</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Dynamic SQL row</name>
    <type>DynamicSQLRow</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_Staging</connection>
    <rowlimit>0</rowlimit>
    <sql>WITH x AS
 (SELECT spt.policy_uniqueid,
         spt.policytransaction_uniqueid,
         spt.primaryrisk_uniqueid,
         spt.coverage_uniqueid,
         spt.component_uniqueid,
         spt.otheradjustment_uniqueid,
         spt.pt_transactiondate,
         spt.pt_sequence,
         spt.pt_accountingdate,
         spt.pt_effectivedate,
         -- Issue 187138, add report accounting date
         greatest(spt.PT_EFFECTIVEDATE,spt.PT_ACCOUNTINGDATE) as FINANCIALACCOUNTING_DATE,  
         spt.pt_typecode,
         spt.pt_typesubcode,
         spt.pt_amount,
         spt.pt_commissionamount,
         spt.pt_earningstype,
         spt.pt_earnfromdate,
         spt.pt_earntodate,
         spt.include_in_summary_b,
         nvl(spt.system_generated_b, 'N') AS system_generated_b,
         spt.prem_type,
         spt.stgpolicytransaction_id AS id
    FROM stg_policytransaction spt
   WHERE 1 = 1 
     AND instr(spt.policy_uniqueid, '^PYN') = 0
     AND rownum = 1
     ),
y AS
 (SELECT *
    FROM (SELECT x.id AS id1,
                 sp.product_uniqueid,
                 sp.company_uniqueid,
                 sp.producer_uniqueid,
                 sp.underwriter_uniqueid,
                 sp.pol_policynumberprefix,
                 sp.pol_policynumber,
                 sp.pol_policynumbersuffix,
                 sp.pol_effectivedate,
                 sp.pol_expirationdate,
                 sp.pol_asl,
                 sp.pol_masterstate,
                 sp.pol_conversionindicatorcode,
                 sp.firstinsured_uniqueid,
                 sp.secondinsured_uniqueid,
                 sp.thirdinsured_uniqueid,
                 row_number() over(PARTITION BY x.id ORDER BY sp.pol_transactionaccountingdate DESC, sp.pt_sequence DESC, sp.pol_changeeffectivedate DESC, sp.stgpolicy_id DESC) AS line1
            FROM stg_policy sp, x
           WHERE sp.policy_uniqueid = x.policy_uniqueid
             AND sp.pt_sequence &lt;= x.pt_sequence)
   WHERE line1 = 1)
SELECT x.*,
       y.*,
       z2.*,
       z3.*,
       z4.*,
       decode(z4.id4, NULL, '-1', z4.cov_type2) AS cov_type,
       z5.*,
       z6.coveredrisk_id,
       z7.*,
       z8.*,
       z9.*,
       decode(z10.id10, NULL, -1, z10.policy_id) AS policy_id,
       nvl(z11.coverageextension_id, -1) AS coverageextension_id,
       decode(z12.id12, NULL, -1, z12.policyextension_id) AS policyextension_id,
       z13.coveredriskextension_id
  FROM x
  LEFT JOIN y
    ON x.id = y.id1
  LEFT JOIN (SELECT *
               FROM (SELECT x.id AS id2,
                            row_number() over(PARTITION BY x.id ORDER BY dl.record_version DESC) AS line2,
                            legalentity_id,
                            legalentity_id2,
                            dl.record_version,
                            decode(nvl(dl.legalentity_id, -1),
                                   -1,
                                   dl2.legalentity_id2,
                                   dl.legalentity_id) AS firstinsured_id
                       FROM x
                       LEFT JOIN y
                         ON x.id = y.id1
                       LEFT JOIN dim_legalentity dl
                         ON dl.lenty_uniqueid = y.firstinsured_uniqueid
                        AND dl.valid_fromdate &lt;= x.pt_accountingdate
                        AND dl.lenty_type = 'POLHOLDER'
                       LEFT JOIN (SELECT *
                                   FROM (SELECT dl2.legalentity_id AS legalentity_id2,
                                                dl2.lenty_uniqueid AS lenty_uniqueid2,
                                                row_number() over(PARTITION BY dl2.lenty_uniqueid ORDER BY dl2.valid_fromdate DESC) AS line2_1
                                           FROM dim_legalentity dl2
                                          WHERE dl2.lenty_type = 'POLHOLDER')
                                  WHERE line2_1 = 1) dl2 /*vdim_firstinsured no dates*/
                         ON y.firstinsured_uniqueid = dl2.lenty_uniqueid2)
              WHERE line2 = 1) z2
    ON x.id = z2.id2 /*DB lookup (vdim_firstinsured)*/
  LEFT JOIN (SELECT x.id AS id3,
                    MAX(sp.pol_expirationdate) AS original_pol_exp_date
               FROM stg_policy sp, x
              WHERE sp.policy_uniqueid = x.policy_uniqueid
                AND sp.pt_sequence &lt;= x.pt_sequence
              GROUP BY x.id) z3
    ON x.id = z3.id3 /*Get Org Pol Exp Date*/
  LEFT JOIN (SELECT *
               FROM (SELECT x.id AS id4,
                            scw.cov_effectivedate,
                            scw.cov_expirationdate,
                            scw.cov_type AS cov_type2,
                            scw.cov_limit1,
                            scw.cov_limit1type,
                            scw.cov_limit2,
                            scw.cov_limit2type,
                            scw.cov_deductible1,
                            scw.cov_deductible1type,
                            scw.cov_code,
                            scw.cov_name,
                            scw.cov_subcode,
                            scw.cov_subcodename,
                            scw.cov_classcodename,
                            scw.cov_classcode,
                            row_number() over(PARTITION BY x.id ORDER BY scw.cov_effectivedate DESC, scw.pt_sequence DESC) AS line4
                       FROM x, stg_coverage_work scw /* DB lkup (stg_coverage)*/
                      WHERE x.system_generated_b = 'Y'
                        AND scw.coverage_uniqueid = x.coverage_uniqueid
                        AND scw.pt_sequence &lt;= x.pt_sequence /* and scw.COV_EFFECTIVEDATE&lt;=x.PT_EFFECTIVEDATE   */
                     )
              WHERE line4 = 1
             UNION
             SELECT *
               FROM (SELECT x.id AS id4,
                            scw.cov_effectivedate,
                            scw.cov_expirationdate,
                            scw.cov_type AS cov_type2,
                            scw.cov_limit1,
                            scw.cov_limit1type,
                            scw.cov_limit2,
                            scw.cov_limit2type,
                            scw.cov_deductible1,
                            scw.cov_deductible1type,
                            scw.cov_code,
                            scw.cov_name,
                            scw.cov_subcode,
                            scw.cov_subcodename,
                            scw.cov_classcodename,
                            scw.cov_classcode,
                            row_number() over(PARTITION BY x.id ORDER BY scw.cov_effectivedate DESC, scw.cov_expirationdate DESC, scw.pt_sequence DESC) AS line5
                       FROM x, stg_coverage_work scw /* DB lkup (stg_coverage)*/
                      WHERE x.system_generated_b != 'Y'
                        AND scw.coverage_uniqueid = x.coverage_uniqueid
                        AND scw.pt_sequence &lt;= x.pt_sequence
                        AND scw.cov_effectivedate &lt;= x.pt_effectivedate)
              WHERE line5 = 1) z4
    ON x.id = z4.id4
  LEFT JOIN (SELECT z51.id51 AS id5,
                    nvl(z52.transactiontype_id, z51.transactiontype_id_usd) AS transactiontype_id_new,
                    z52.transactiontype_id,
                    z51.transactiontype_id_usd
               FROM (SELECT z5.transactiontype_id AS transactiontype_id_usd,
                            x.id                  AS id51
                       FROM x
                       LEFT JOIN dim_transactiontype z5
                         ON substr(z5.trans_code, 0, 3) = 'USD'
                        AND z5.trans_subcode = x.pt_typesubcode
                        AND z5.trans_category = 'policy') z51 /*Database lookup (vdim_transactiontype) User Define Trans*/
               LEFT JOIN (SELECT z5.transactiontype_id AS transactiontype_id,
                                x.id                  AS id52
                           FROM x
                           LEFT JOIN dim_transactiontype z5
                             ON z5.trans_code = x.pt_typecode
                            AND z5.trans_subcode = x.pt_typesubcode
                            AND z5.trans_category = 'policy') z52 /* Database lookup (vdim_transactiontype)*/
                 ON z51.id51 = z52.id52) z5
    ON x.id = z5.id5
  LEFT JOIN (SELECT MAX(coveredrisk_id) AS coveredrisk_id, cvrsk_uniqueid
               FROM dim_coveredrisk_work
              GROUP BY cvrsk_uniqueid) z6
    ON z6.cvrsk_uniqueid = x.primaryrisk_uniqueid /*DB lookup (dim_coveredRisk)*/
  LEFT JOIN (SELECT *
               FROM (SELECT x.primaryrisk_uniqueid AS primaryrisk_uniqueid7,
                            sr.rsk_territorycode,
                            sr.rsk_territoryname,
                            sr.rsk_address1,
                            sr.rsk_address2,
                            sr.rsk_address3,
                            sr.rsk_county,
                            sr.rsk_city,
                            sr.rsk_state,
                            sr.rsk_postalcode,
                            sr.rsk_country,
                            row_number() over(PARTITION BY x.id, sr.risk_uniqueid ORDER BY sr.rsk_effective_from_date DESC, sr.rsk_effective_to_date DESC, sr.pt_sequence DESC) line7,
                            x.id AS id7
                       FROM x
                       LEFT JOIN stg_risk sr
                         ON sr.risk_uniqueid = x.primaryrisk_uniqueid
                        AND sr.rsk_transactioneffectivedate &lt;=
                            x.pt_effectivedate
                        AND sr.pt_sequence &lt;= x.pt_sequence /* Exclude Prior Acts*/
                        AND nvl(sr.mmrsk_exposure_basis_code, 'x') &lt;&gt;
                            'PRIOR_CARR') s
              WHERE s.line7 = 1) z7
    ON z7.id7 = x.id /* on  x.PRIMARYRISK_UNIQUEID=z7.PRIMARYRISK_UNIQUEID7   and x.PRIMARYRISK_UNIQUEID!='0'*/ /*Get Stg_Risk Location*/
  LEFT JOIN (SELECT com_effectivedate, com_expirationdate, id8
               FROM (SELECT /*+ INDEX(INC_STG_COMP_COMB) */
                      sc.com_effectivedate,
                      sc.com_expirationdate,
                      row_number() over(PARTITION BY x.id, x.component_uniqueid ORDER BY stgcomponent_id DESC) line8,
                      x.id AS id8
                       FROM x, stg_component sc
                      WHERE sc.component_uniqueid = x.component_uniqueid
                        AND sc.pt_sequence &lt;= x.pt_sequence)
              WHERE line8 = 1) z8
    ON x.id = z8.id8
  LEFT JOIN (SELECT othradjustment_effectivedate,
                    othradjustment_expirationdate,
                    id9
               FROM (SELECT /*+ INDEX(in_stg_othradj_uniqueid ) */
                      othradjustment_effectivedate,
                      othradjustment_expirationdate,
                      row_number() over(PARTITION BY x.id, x.otheradjustment_uniqueid ORDER BY soa.stgotheradjustment_id DESC) line9,
                      x.otheradjustment_uniqueid,
                      soa.pt_sequence,
                      x.id AS id9
                       FROM x, stg_other_adjustment soa
                      WHERE soa.otheradjustment_uniqueid =
                            x.otheradjustment_uniqueid
                        AND soa.pt_sequence &lt;= x.pt_sequence)
              WHERE line9 = 1) z9
    ON z9.id9 = x.id /*   on z9.OTHERADJUSTMENT_UNIQUEID9=x.OTHERADJUSTMENT_UNIQUEID     and z9.PT_SEQUENCE9 &lt;= x.PT_SEQUENCE*/ /* Get STG_OTHERADJUSTMENT */
  LEFT JOIN (SELECT policy_id, id10
               FROM (SELECT x.id AS id10,
                            dp.policy_id,
                            row_number() over(PARTITION BY x.id ORDER BY dp.policy_id DESC) AS line10
                       FROM x, dim_policy@dw_dra dp
                      WHERE dp.pol_uniqueid = x.policy_uniqueid
                        AND dp.valid_fromdate &lt;= x.pt_accountingdate
                        AND dp.valid_todate > x.pt_accountingdate)
              WHERE line10 = 1) z10
    ON z10.id10 = x.id /*Database lookup Get Policy ID (Dim_Policy)*/
  LEFT JOIN (SELECT x.id AS id11,
                    MAX(dce.coverageextension_id) coverageextension_id
               FROM x, dim_coverageextension@dw_dra dce
              WHERE dce.cov_uniqueid = x.coverage_uniqueid
                AND trunc(dce.valid_fromdate) &lt;= trunc(x.pt_accountingdate)
                AND trunc(dce.valid_todate) >= trunc(x.pt_accountingdate)
                AND ((nvl(dce.cov_effective_from_date,
                          to_date('1/1/1900', 'mm/dd/yyyy')) &lt;=
                    x.pt_effectivedate AND
                    nvl(dce.cov_effective_to_date,
                          to_date('1/1/3000', 'mm/dd/yyyy')) >=
                    x.pt_effectivedate) /*Tail coverage*/
                    OR (dce.mmcov_coverage_segment_code = 'TAIL' AND
                    dce.pt_sequence &lt;= x.pt_sequence AND
                    nvl(dce.cov_effective_to_date,
                             to_date('1/1/3000', 'mm/dd/yyyy')) >=
                    x.pt_effectivedate) OR /*Component or coverage expired/cancelled before this transaction effective date*/
                    (nvl(dce.cov_effective_from_date,
                          to_date('1/1/1900', 'mm/dd/yyyy')) &lt;=
                    x.pt_effectivedate AND
                    dce.pt_sequence &lt;= x.pt_sequence) OR /* Component or coverage that created before current transaction key, but effective after current                                                     transaction effective from date.*/
                    (dce.pt_sequence &lt;= x.pt_sequence AND
                    nvl(dce.cov_effective_from_date,
                          to_date('1/1/1900', 'mm/dd/yyyy')) >=
                    x.pt_effectivedate))
              GROUP BY x.id) z11
    ON z11.id11 = x.id /*Get Coverage Extension ID*/
  LEFT JOIN (SELECT *
               FROM (SELECT x.id AS id12,
                            row_number() over(PARTITION BY x.id ORDER BY dpx.record_version DESC) AS line12,
                            dpx.policyextension_id
                       FROM x, dim_policyextension@dw_dra dpx
                      WHERE dpx.policy_uniqueid = x.policy_uniqueid
                        AND dpx.valid_fromdate &lt;= x.pt_accountingdate
                        AND dpx.valid_todate > x.pt_accountingdate)
              WHERE line12 = 1) z12
    ON z12.id12 = x.id /*Get Policy Ext ID*/
  LEFT JOIN (SELECT *
               FROM (SELECT x.id AS id13,
                            MAX(dcre.coveredriskextension_id) coveredriskextension_id
                       FROM x, dim_coveredriskextension@dw_dra dcre
                      WHERE dcre.cvrsk_uniqueid = x.primaryrisk_uniqueid
                        AND dcre.valid_fromdate &lt;= x.pt_accountingdate
                        AND dcre.valid_todate >= x.pt_accountingdate
                        AND nvl(dcre.mmrsk_exposure_basis_code, 'x') &lt;&gt;
                            'PRIOR_CARR'
                        AND ((nvl(dcre.rsk_effective_from_date,
                                  to_date('1/1/1900', 'mm/dd/yyyy')) &lt;=
                            x.pt_effectivedate AND
                            nvl(dcre.rsk_effective_to_date,
                                  to_date('1/1/3000', 'mm/dd/yyyy')) >=
                            x.pt_effectivedate) OR
                            (dcre.mmrsk_current_status = 'CANCEL' AND
                            nvl(dcre.rsk_effective_from_date,
                                  to_date('1/1/1900', 'mm/dd/yyyy')) &lt;=
                            x.pt_effectivedate AND
                            nvl(dcre.rsk_effective_to_date,
                                  to_date('1/1/3000', 'mm/dd/yyyy')) >=
                            x.pt_effectivedate) OR /* Risk that created before current transaction key, no matter the risk effective from                                                                date is greater or less than the transaction effective date, we need to find the risk                                                                 ID as long as the risk is included in policy_premium table for current transaction.*/
                            (dcre.pt_sequence &lt;= x.pt_sequence))
                      GROUP BY x.id)) z13
    ON z13.id13 = x.id /*Get CoveredRisk Extension ID*/
</sql>
    <outer_join>N</outer_join>
    <replace_vars>Y</replace_vars>
    <sql_fieldname>sql</sql_fieldname>
    <query_only_on_change>N</query_only_on_change>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>403</xloc>
      <yloc>18</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get Coverage Extension ID 2</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <rowlimit>0</rowlimit>
    <sql>SELECT max(dce.coverageextension_id) coverageextension_id2
FROM   dim_coverageextension dce
WHERE  dce.cov_uniqueid = ?   

</sql>
    <outer_join>Y</outer_join>
    <replace_vars>N</replace_vars>
    <parameter>
      <field>
        <name>COVERAGE_UNIQUEID</name>
        <type>String</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>567</xloc>
      <yloc>534</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get Other Adjustment ID</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <rowlimit>0</rowlimit>
    <sql>SELECT max(dc.otheradjustment_id) as OTHERADJUSTMENT_ID
FROM   Dim_other_adjustment dc
WHERE  dc.otheradjustment_uniqueid = ?   
AND    trunc(dc.valid_fromdate) &lt;= trunc(?)
AND    trunc(dc.valid_todate) >= trunc(?)</sql>
    <outer_join>Y</outer_join>
    <replace_vars>Y</replace_vars>
    <parameter>
      <field>
        <name>OTHERADJUSTMENT_UNIQUEID</name>
        <type>String</type>
      </field>
      <field>
        <name>PT_ACCOUNTINGDATE</name>
        <type>Date</type>
      </field>
      <field>
        <name>PT_ACCOUNTINGDATE</name>
        <type>Date</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>73</xloc>
      <yloc>801</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get Policy Ext ID 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>1000</cache_size>
    <lookup>
      <schema/>
      <table>Dim_Policyextension</table>
      <orderby>record_version desc</orderby>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>POLICY_UNIQUEID</name>
        <field>POLICY_UNIQUEID</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>PT_ACCOUNTINGDATE</name>
        <field>VALID_TODATE</field>
        <condition>&gt;</condition>
        <name2/>
      </key>
      <value>
        <name>POLICYEXTENSION_ID</name>
        <rename>POLICYEXTENSION_ID2</rename>
        <default/>
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>73</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get Variables</name>
    <type>GetVariable</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>load_mini_pol</name>
        <variable>${G_LOAD_MINI_POL_TO_FACTS}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>both</trim_type>
      </field>
      <field>
        <name>sql_loadDate2</name>
        <variable>${sql_loadDate}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>122</xloc>
      <yloc>18</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get Variables: loadDate</name>
    <type>GetVariable</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>loadDate</name>
        <variable>${loadDate}</variable>
        <type>Date</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>refresh_id</name>
        <variable>${v_refresh_id}</variable>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>754</xloc>
      <yloc>715</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>If field value is null</name>
    <type>IfNull</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <replaceAllByValue/>
    <replaceAllMask/>
    <selectFields>Y</selectFields>
    <selectValuesType>N</selectValuesType>
    <setEmptyStringAll>N</setEmptyStringAll>
    <valuetypes>
      </valuetypes>
    <fields>
      <field>
        <name>COV_EFFECTIVEDATE</name>
        <value>1900-01-01 00:00:00.000</value>
        <mask>yyyy-MM-dd HH:mm:ss.SSS</mask>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COV_EXPIRATIONDATE</name>
        <value>1900-01-01 00:00:00.000</value>
        <mask>yyyy-MM-dd HH:mm:ss.SSS</mask>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>pol_effectiveDate</name>
        <value>1900-01-01 00:00:00.000</value>
        <mask>yyyy-MM-dd HH:mm:ss.SSS</mask>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>POL_EXPIRATIONDATE</name>
        <value>1900-01-01 00:00:00.000</value>
        <mask>yyyy-MM-dd HH:mm:ss.SSS</mask>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>OTHRADJUSTMENT_EFFECTIVEDATE</name>
        <value>1900-01-01 00:00:00.000</value>
        <mask>yyyy-MM-dd HH:mm:ss.SSS</mask>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>OTHRADJUSTMENT_EXPIRATIONDATE</name>
        <value>1900-01-01 00:00:00.000</value>
        <mask>yyyy-MM-dd HH:mm:ss.SSS</mask>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COM_EFFECTIVEDATE</name>
        <value>1900-01-01 00:00:00.000</value>
        <mask>yyyy-MM-dd HH:mm:ss.SSS</mask>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>COM_EXPIRATIONDATE</name>
        <value>1900-01-01 00:00:00.000</value>
        <mask>yyyy-MM-dd HH:mm:ss.SSS</mask>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>725</xloc>
      <yloc>255</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JS</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

if(POLICY_ID2 != null)
{var POLICY_ID=POLICY_ID2;}
else
{var POLICY_ID= null;};</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>POLICY_ID</name>
        <rename>POLICY_ID</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>414</xloc>
      <yloc>324</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JS 1</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here
//1
if(COV_EFFECTIVEDATE2 != null)
{var COV_EFFECTIVEDATE=COV_EFFECTIVEDATE2;}
else
{var COV_EFFECTIVEDATE= null;};
//2
if(COV_EXPIRATIONDATE2 != null)
{var COV_EXPIRATIONDATE=COV_EXPIRATIONDATE2;}
else
{var COV_EXPIRATIONDATE= null;};
//3
if(COV_TYPE_2 != null)
{var COV_TYPE=COV_TYPE_2;}
else
{var COV_TYPE= null;};
//4
if(COV_LIMIT12 != null)
{var COV_LIMIT1=COV_LIMIT12;}
else
{var COV_LIMIT1= null;};
//5
if(COV_LIMIT1TYPE2 != null)
{var COV_LIMIT1TYPE=COV_LIMIT1TYPE2;}
else
{var COV_LIMIT1TYPE= null;};
//6
if(COV_LIMIT22 != null)
{var COV_LIMIT2=COV_LIMIT22;}
else
{var COV_LIMIT2= null;};
//7
if(COV_LIMIT2TYPE2 != null)
{var COV_LIMIT2TYPE=COV_LIMIT2TYPE2;}
else
{var COV_LIMIT2TYPE= null;};
//8
if(COV_DEDUCTIBLE12 != null)
{var COV_DEDUCTIBLE1=COV_DEDUCTIBLE12;}
else
{var COV_DEDUCTIBLE1= null;};
//9
if(COV_DEDUCTIBLE1TYPE2 != null)
{var COV_DEDUCTIBLE1TYPE=COV_DEDUCTIBLE1TYPE2;}
else
{var COV_DEDUCTIBLE1TYPE= null;};
//10
if(COV_CODE2 != null)
{var COV_CODE=COV_CODE2;}
else
{var COV_CODE= null;};
//11
if(COV_NAME2 != null)
{var COV_NAME=COV_NAME2;}
else
{var COV_NAME= null;};
//12
if(COV_SUBCODE2 != null)
{var COV_SUBCODE=COV_SUBCODE2;}
else
{var COV_SUBCODE= null;};
//13
if(COV_SUBCODENAME2 != null)
{var COV_SUBCODENAME=COV_SUBCODENAME2;}
else
{var COV_SUBCODENAME= null;};
//14
if(COV_CLASSCODENAME2 != null)
{var COV_CLASSCODENAME=COV_CLASSCODENAME2;}
else
{var COV_CLASSCODENAME= null;};
//15
if(COV_CLASSCODE2 != null)
{var COV_CLASSCODE=COV_CLASSCODE2;}
else
{var COV_CLASSCODE= null;};
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>COV_EFFECTIVEDATE</name>
        <rename>COV_EFFECTIVEDATE</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_EXPIRATIONDATE</name>
        <rename>COV_EXPIRATIONDATE</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_TYPE</name>
        <rename>COV_TYPE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_LIMIT1</name>
        <rename>COV_LIMIT1</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_LIMIT1TYPE</name>
        <rename>COV_LIMIT1TYPE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_LIMIT2</name>
        <rename>COV_LIMIT2</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_LIMIT2TYPE</name>
        <rename>COV_LIMIT2TYPE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_DEDUCTIBLE1</name>
        <rename>COV_DEDUCTIBLE1</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_DEDUCTIBLE1TYPE</name>
        <rename>COV_DEDUCTIBLE1TYPE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_CODE</name>
        <rename>COV_CODE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_NAME</name>
        <rename>COV_NAME</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_SUBCODE</name>
        <rename>COV_SUBCODE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_SUBCODENAME</name>
        <rename>COV_SUBCODENAME</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_CLASSCODENAME</name>
        <rename>COV_CLASSCODENAME</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_CLASSCODE</name>
        <rename>COV_CLASSCODE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>823</xloc>
      <yloc>126</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JS 2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here
//1
if(COV_EFFECTIVEDATE2 != null)
{var COV_EFFECTIVEDATE=COV_EFFECTIVEDATE2;}
else
{var COV_EFFECTIVEDATE= null;};
//2
if(COV_EXPIRATIONDATE2 != null)
{var COV_EXPIRATIONDATE=COV_EXPIRATIONDATE2;}
else
{var COV_EXPIRATIONDATE= null;};
//3
if(COV_TYPE_2 != null)
{var COV_TYPE=COV_TYPE_2;}
else
{var COV_TYPE= null;};
//4
if(COV_LIMIT12 != null)
{var COV_LIMIT1=COV_LIMIT12;}
else
{var COV_LIMIT1= null;};
//5
if(COV_LIMIT1TYPE2 != null)
{var COV_LIMIT1TYPE=COV_LIMIT1TYPE2;}
else
{var COV_LIMIT1TYPE= null;};
//6
if(COV_LIMIT22 != null)
{var COV_LIMIT2=COV_LIMIT22;}
else
{var COV_LIMIT2= null;};
//7
if(COV_LIMIT2TYPE2 != null)
{var COV_LIMIT2TYPE=COV_LIMIT2TYPE2;}
else
{var COV_LIMIT2TYPE= null;};
//8
if(COV_DEDUCTIBLE12 != null)
{var COV_DEDUCTIBLE1=COV_DEDUCTIBLE12;}
else
{var COV_DEDUCTIBLE1= null;};
//9
if(COV_DEDUCTIBLE1TYPE2 != null)
{var COV_DEDUCTIBLE1TYPE=COV_DEDUCTIBLE1TYPE2;}
else
{var COV_DEDUCTIBLE1TYPE= null;};
//10
if(COV_CODE2 != null)
{var COV_CODE=COV_CODE2;}
else
{var COV_CODE= null;};
//11
if(COV_NAME2 != null)
{var COV_NAME=COV_NAME2;}
else
{var COV_NAME= null;};
//12
if(COV_SUBCODE2 != null)
{var COV_SUBCODE=COV_SUBCODE2;}
else
{var COV_SUBCODE= null;};
//13
if(COV_SUBCODENAME2 != null)
{var COV_SUBCODENAME=COV_SUBCODENAME2;}
else
{var COV_SUBCODENAME= null;};
//14
if(COV_CLASSCODENAME2 != null)
{var COV_CLASSCODENAME=COV_CLASSCODENAME2;}
else
{var COV_CLASSCODENAME= null;};
//15
if(COV_CLASSCODE2 != null)
{var COV_CLASSCODE=COV_CLASSCODE2;}
else
{var COV_CLASSCODE= null;};
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>COV_EFFECTIVEDATE</name>
        <rename>COV_EFFECTIVEDATE</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_EXPIRATIONDATE</name>
        <rename>COV_EXPIRATIONDATE</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_TYPE</name>
        <rename>COV_TYPE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_LIMIT1</name>
        <rename>COV_LIMIT1</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_LIMIT1TYPE</name>
        <rename>COV_LIMIT1TYPE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_LIMIT2</name>
        <rename>COV_LIMIT2</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_LIMIT2TYPE</name>
        <rename>COV_LIMIT2TYPE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_DEDUCTIBLE1</name>
        <rename>COV_DEDUCTIBLE1</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_DEDUCTIBLE1TYPE</name>
        <rename>COV_DEDUCTIBLE1TYPE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_CODE</name>
        <rename>COV_CODE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_NAME</name>
        <rename>COV_NAME</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_SUBCODE</name>
        <rename>COV_SUBCODE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_SUBCODENAME</name>
        <rename>COV_SUBCODENAME</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_CLASSCODENAME</name>
        <rename>COV_CLASSCODENAME</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>COV_CLASSCODE</name>
        <rename>COV_CLASSCODE</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>304</xloc>
      <yloc>126</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JS 3</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

if(COVERAGEEXTENSION_ID2 != null)
{var coverageextension_id=COVERAGEEXTENSION_ID2;}
else
{var coverageextension_id= null;};</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>coverageextension_id</name>
        <rename>coverageextension_id</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>474</xloc>
      <yloc>534</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JS 4</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

if(POLICYEXTENSION_ID2 != null)
{var POLICYEXTENSION_ID=POLICYEXTENSION_ID2;}
else
{var POLICYEXTENSION_ID= null;};</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>POLICYEXTENSION_ID</name>
        <rename>POLICYEXTENSION_ID</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>115</xloc>
      <yloc>663</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Lookup (new / renew)</name>
    <type>StreamLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <from>Table input (new or renewal)</from>
    <input_sorted>N</input_sorted>
    <preserve_memory>N</preserve_memory>
    <sorted_list>Y</sorted_list>
    <integer_pair>N</integer_pair>
    <lookup>
      <key>
        <name>POLICY_UNIQUEID</name>
        <field>POLICY_UNIQUEID</field>
      </key>
      <value>
        <name>PT_TYPECODE</name>
        <rename>NEWRENEW_TRANSCODE</rename>
        <default>NB</default>
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>948</xloc>
      <yloc>715</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Mapping (Custom ETL)</name>
    <type>Mapping</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <specification_method>rep_name</specification_method>
    <trans_object_id/>
    <trans_name>STR_FACT_POLICYTRANSACTION</trans_name>
    <filename/>
    <directory_path>/public/ETL/Custom</directory_path>
    <mappings>
      <input>
        <mapping>
          <input_step/>
          <output_step/>
          <main_path>Y</main_path>
          <rename_on_output>Y</rename_on_output>
          <description/>
        </mapping>
      </input>
      <output>
        <mapping>
          <input_step/>
          <output_step/>
          <main_path>Y</main_path>
          <rename_on_output>N</rename_on_output>
          <description/>
        </mapping>
      </output>
      <parameters>
        <inherit_all_vars>Y</inherit_all_vars>
      </parameters>
    </mappings>
    <allow_multiple_input>N</allow_multiple_input>
    <allow_multiple_output>N</allow_multiple_output>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>74</xloc>
      <yloc>889</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Remove Coverage</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <remove>
        <name>COV_EFFECTIVEDATE2</name>
      </remove>
      <remove>
        <name>COV_EXPIRATIONDATE2</name>
      </remove>
      <remove>
        <name>COV_TYPE_2</name>
      </remove>
      <remove>
        <name>COV_LIMIT12</name>
      </remove>
      <remove>
        <name>COV_LIMIT1TYPE2</name>
      </remove>
      <remove>
        <name>COV_LIMIT22</name>
      </remove>
      <remove>
        <name>COV_LIMIT2TYPE2</name>
      </remove>
      <remove>
        <name>COV_DEDUCTIBLE12</name>
      </remove>
      <remove>
        <name>COV_DEDUCTIBLE1TYPE2</name>
      </remove>
      <remove>
        <name>COV_CODE2</name>
      </remove>
      <remove>
        <name>COV_NAME2</name>
      </remove>
      <remove>
        <name>COV_SUBCODE2</name>
      </remove>
      <remove>
        <name>COV_SUBCODENAME2</name>
      </remove>
      <remove>
        <name>COV_CLASSCODENAME2</name>
      </remove>
      <remove>
        <name>COV_CLASSCODE2</name>
      </remove>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>751</xloc>
      <yloc>168</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Remove Coverage 2</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <remove>
        <name>COV_EFFECTIVEDATE2</name>
      </remove>
      <remove>
        <name>COV_EXPIRATIONDATE2</name>
      </remove>
      <remove>
        <name>COV_TYPE_2</name>
      </remove>
      <remove>
        <name>COV_LIMIT12</name>
      </remove>
      <remove>
        <name>COV_LIMIT1TYPE2</name>
      </remove>
      <remove>
        <name>COV_LIMIT22</name>
      </remove>
      <remove>
        <name>COV_LIMIT2TYPE2</name>
      </remove>
      <remove>
        <name>COV_DEDUCTIBLE12</name>
      </remove>
      <remove>
        <name>COV_DEDUCTIBLE1TYPE2</name>
      </remove>
      <remove>
        <name>COV_CODE2</name>
      </remove>
      <remove>
        <name>COV_NAME2</name>
      </remove>
      <remove>
        <name>COV_SUBCODE2</name>
      </remove>
      <remove>
        <name>COV_SUBCODENAME2</name>
      </remove>
      <remove>
        <name>COV_CLASSCODENAME2</name>
      </remove>
      <remove>
        <name>COV_CLASSCODE2</name>
      </remove>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>121</xloc>
      <yloc>168</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Remove Dummy Field</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <remove>
        <name>load_mini_pol</name>
      </remove>
      <remove>
        <name>sql</name>
      </remove>
      <remove>
        <name>sql_loadDate2</name>
      </remove>
      <meta>
        <name>LINE1</name>
        <rename>LINE1</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>LINE2</name>
        <rename>LINE2</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>LINE4</name>
        <rename>LINE4</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>FIRSTINSURED_ID</name>
        <rename>FIRSTINSURED_ID</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>TRANSACTIONTYPE_ID_NEW</name>
        <rename>TRANSACTIONTYPE_ID_NEW</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>COVEREDRISK_ID</name>
        <rename>COVEREDRISK_ID</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>LINE7</name>
        <rename>LINE7</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>POLICY_ID</name>
        <rename>POLICY_ID</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>COVERAGEEXTENSION_ID</name>
        <rename>COVERAGEEXTENSION_ID</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>POLICYEXTENSION_ID</name>
        <rename>POLICYEXTENSION_ID</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>COVEREDRISKEXTENSION_ID</name>
        <rename>COVEREDRISKEXTENSION_ID</rename>
        <type>Number</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>575</xloc>
      <yloc>18</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Remove Policy Ext ID</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <remove>
        <name>POLICYEXTENSION_ID2</name>
      </remove>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>73</xloc>
      <yloc>715</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Remove Policy ID</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <remove>
        <name>POLICY_ID2</name>
      </remove>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>310</xloc>
      <yloc>324</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SQL</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
var	sql="";
sql=sql+"                                                                                                                                            ";
sql=sql+"with x as (                                                                                                                                 ";
sql=sql+"        SELECT spt.POLICY_UNIQUEID,                                                                                                         ";
sql=sql+"               spt.POLICYTRANSACTION_UNIQUEID,                                                                                              ";
sql=sql+"               spt.PRIMARYRISK_UNIQUEID,                                                                                                    ";
sql=sql+"               spt.COVERAGE_UNIQUEID,                                                                                                       ";
sql=sql+"               spt.COMPONENT_UNIQUEID,                                                                                                      ";
sql=sql+"               spt.OTHERADJUSTMENT_UNIQUEID,                                                                                                ";
sql=sql+"               spt.PT_TRANSACTIONDATE,                                                                                                      ";
sql=sql+"               spt.PT_SEQUENCE,                                                                                                             ";
sql=sql+"               spt.PT_ACCOUNTINGDATE,                                                                                                       ";
sql=sql+"               spt.PT_EFFECTIVEDATE,                                                                                                        ";   
// Issue 187138, add finance accounting date
sql=sql+"               greatest(spt.PT_EFFECTIVEDATE,spt.PT_ACCOUNTINGDATE) as FINANCIALACCOUNTING_DATE,                                             ";
sql=sql+"               spt.PT_TYPECODE,                                                                                                             ";
sql=sql+"               spt.PT_TYPESUBCODE,                                                                                                          ";
sql=sql+"               spt.PT_AMOUNT,                                                                                                               ";
sql=sql+"               spt.PT_COMMISSIONAMOUNT,                                                                                                     ";
sql=sql+"               spt.PT_EARNINGSTYPE,                                                                                                         ";
sql=sql+"               spt.PT_EARNFROMDATE,                                                                                                         ";
sql=sql+"               spt.PT_EARNTODATE,                                                                                                           ";
sql=sql+"               spt.INCLUDE_IN_SUMMARY_B,                                                                                                    ";
sql=sql+"               nvl(spt.SYSTEM_GENERATED_B,'${G_DEFAULT_TEXT}') as SYSTEM_GENERATED_B,                                                    ";
sql=sql+"               spt.PREM_TYPE,                                                                                                               ";
sql=sql+"               spt.stgpolicytransaction_id as id                                                                                            ";
sql=sql+"                from STG_POLICYTRANSACTION spt                                                                                              ";
sql=sql+"                where 1=1                                                                  ";
sql=sql+"                /* and 1=2   AND stgpolicytransaction_id=1353   */ 																		 ";

if(load_mini_pol=="y" || load_mini_pol=="Y") { sql=sql+"";}
else  { sql=sql+"/*para1*/                and instr(spt.POLICY_UNIQUEID, '^PYN') = 0";}

sql=sql+"                 and spt.LOADDATE = "+ sql_loadDate2 + "                                                                                         ";

sql=sql+"            ),                                                                                                                                        ";
sql=sql+"    y as (select * from  (select                                                                                                                      ";
sql=sql+"               x.id as id1,                                                                                                                           ";
sql=sql+"               SP.PRODUCT_UNIQUEID,                                                                                                                   ";
sql=sql+"               SP.COMPANY_UNIQUEID,                                                                                                                   ";
sql=sql+"               SP.PRODUCER_UNIQUEID,                                                                                                                  ";
sql=sql+"               SP.UNDERWRITER_UNIQUEID,                                                                                                               ";
sql=sql+"               SP.POL_POLICYNUMBERPREFIX,                                                                                                             ";
sql=sql+"               SP.POL_POLICYNUMBER,                                                                                                                   ";
sql=sql+"               SP.POL_POLICYNUMBERSUFFIX,                                                                                                             ";
sql=sql+"               SP.POL_EFFECTIVEDATE,                                                                                                                  ";
sql=sql+"               SP.POL_EXPIRATIONDATE,                                                                                                                 ";
sql=sql+"               SP.POL_ASL,                                                                                                                            ";
sql=sql+"               SP.POL_MASTERSTATE,                                                                                                                    ";
sql=sql+"               SP.POL_CONVERSIONINDICATORCODE,                                                                                                        ";
sql=sql+"               SP.FIRSTINSURED_UNIQUEID,                                                                                                              ";
sql=sql+"               SP.SECONDINSURED_UNIQUEID,                                                                                                             ";
sql=sql+"               SP.THIRDINSURED_UNIQUEID,                                                                                                              ";
sql=sql+"               row_number() over(partition by x.id                                                                                                    ";
sql=sql+"                                 ORDER BY SP.pol_transactionaccountingdate desc,                                                                      ";
sql=sql+"                                          SP.PT_SEQUENCE desc,                                                                                        ";
sql=sql+"                                          SP.POL_CHANGEEFFECTIVEDATE desc,                                                                            ";
sql=sql+"                                          SP.STGPOLICY_ID desc)       as line1                                                                        ";
sql=sql+"               from STG_POLICY sp, x                                                                                                                  ";
sql=sql+"               where SP.POLICY_UNIQUEID = x.POLICY_UNIQUEID                                                                                           ";
sql=sql+"               AND SP.PT_SEQUENCE &lt;= x.PT_SEQUENCE                                                                                                    ";
sql=sql+"               )   where LINE1=1 )                                                                                                                    ";
sql=sql+"select x.*,y.*,                                                                                                                                       ";
sql=sql+"       z2.*,z3.*,z4.*,                                                                                                                                ";
sql=sql+"       decode(z4.id4,null,'-1',z4.COV_TYPE2) as COV_TYPE,                                                                                             ";
sql=sql+"       z5.*,                                                                                                                                          ";
sql=sql+"       z6.COVEREDRISK_ID,                                                                                                                             ";
sql=sql+"       z7.*,                                                                                                                                          ";
sql=sql+"       z8.*,                                                                                                                                          ";
sql=sql+"       z9.*,                                                                                                                                          ";
sql=sql+"       decode(z10.id10,null,-1,z10.POLICY_ID) as POLICY_ID,                                                                                           ";
sql=sql+"       nvl(z11.coverageextension_id,-1) as coverageextension_id,                                                                                      ";
sql=sql+"       decode(z12.id12,null,-1,z12.POLICYEXTENSION_ID) as  POLICYEXTENSION_ID,                                                                        ";
sql=sql+"       z13.coveredriskextension_id                                                                                                                    ";
sql=sql+"from x                                                                                                                                                ";
sql=sql+"left join y                                                                                                                                           ";
sql=sql+"     on x.id = y.id1                                                                                                                                  ";
sql=sql+"left join                                                                                                                                             ";
sql=sql+"     (                                                                                                                                                ";
sql=sql+"     select * from                                                                                                                                    ";
sql=sql+"           (select x.id as id2,                                                                                                                       ";
sql=sql+"            row_number() over(partition by x.id ORDER BY dl.record_version desc) as line2,                                                            ";
sql=sql+"            LEGALENTITY_ID,                                                                                                                           ";
sql=sql+"            LEGALENTITY_ID2,                                                                                                                          ";
sql=sql+"            dl.record_version,                                                                                                                        ";
sql=sql+"            decode(nvl(dl.LEGALENTITY_ID,-1),-1,dl2.LEGALENTITY_ID2,dl.LEGALENTITY_ID) as FIRSTINSURED_ID                                             ";
sql=sql+"            from x                                                                                                                                    ";
sql=sql+"            left join y                                                                                                                               ";
sql=sql+"                 on x.id = y.id1                                                                                                                      ";
sql=sql+"            left join DIM_LEGALENTITY dl                                                                                                              ";
sql=sql+"                 on dl.LENTY_UNIQUEID=y.FIRSTINSURED_UNIQUEID                                                                                         ";
sql=sql+"                 and dl.VALID_FROMDATE&lt;=x.PT_ACCOUNTINGDATE                                                                                           ";
sql=sql+"                 and dl.lenty_type='POLHOLDER'                                                                                                        ";
sql=sql+"             left join                                                                                                                                ";
sql=sql+"             (select *  from                                                                                                                          ";
sql=sql+"                       (select dl2.LEGALENTITY_ID as LEGALENTITY_ID2,                                                                                 ";
sql=sql+"                               dl2.LENTY_UNIQUEID as LENTY_UNIQUEID2,                                                                                 ";
sql=sql+"                        row_number() over(partition by dl2.LENTY_UNIQUEID                                                                             ";
sql=sql+"                                              ORDER BY dl2.valid_fromdate desc) as line2_1                                                            ";
sql=sql+"                        from DIM_LEGALENTITY dl2 where dl2.lenty_type='POLHOLDER')                                                                    ";
sql=sql+"                where line2_1 = 1                                                                                                                     ";
sql=sql+"              ) dl2                                                                                                                                   ";
sql=sql+"                /*vdim_firstinsured no dates*/                                                                                                        ";
sql=sql+"             on y.FIRSTINSURED_UNIQUEID=dl2.LENTY_UNIQUEID2                                                                                                 ";
sql=sql+"            ) where line2=1                                                                                                                           ";
sql=sql+"      ) z2                                                                                                                                            ";
sql=sql+"      on x.id=z2.id2                                                                                                                                  ";
sql=sql+"         /*DB lookup (vdim_firstinsured)*/                                                                                                            ";
sql=sql+"left join                                                                                                                                             ";
sql=sql+"     (                                                                                                                                                ";
sql=sql+"     SELECT x.id as id3,MAX(sp.pol_expirationdate) as original_pol_exp_date                                                                           ";
sql=sql+"     FROM   stg_policy sp,x                                                                                                                           ";
sql=sql+"     WHERE  sp.policy_uniqueid = x.POLICY_UNIQUEID                                                                                                    ";
sql=sql+"     and    sp.pt_sequence &lt;= x.PT_SEQUENCE                                                                                                           ";
sql=sql+"     group by x.id                                                                                                                                    ";
sql=sql+"     ) z3                                                                                                                                             ";
sql=sql+"     on x.id=z3.id3                                                                                                                                   ";
sql=sql+"        /*Get Org Pol Exp Date*/                                                                                                                      ";
sql=sql+"left join                                                                                                                                             ";
sql=sql+"     ( select * from                                                                                                                                  ";
sql=sql+"       (                                                                                                                                              ";
sql=sql+"         select x.id as id4,                                                                                                                          ";
sql=sql+"                scw.COV_EFFECTIVEDATE,                                                                                                                ";
sql=sql+"                scw.COV_EXPIRATIONDATE,                                                                                                               ";
sql=sql+"                scw.COV_TYPE as COV_TYPE2,                                                                                                            ";
sql=sql+"                scw.COV_LIMIT1,                                                                                                                       ";
sql=sql+"                scw.COV_LIMIT1TYPE,                                                                                                                   ";
sql=sql+"                scw.COV_LIMIT2,                                                                                                                       ";
sql=sql+"                scw.COV_LIMIT2TYPE,                                                                                                                   ";
sql=sql+"                scw.COV_DEDUCTIBLE1,                                                                                                                  ";
sql=sql+"                scw.COV_DEDUCTIBLE1TYPE,                                                                                                              ";
sql=sql+"                scw.COV_CODE,                                                                                                                         ";
sql=sql+"                scw.COV_NAME,                                                                                                                         ";
sql=sql+"                scw.COV_SUBCODE,                                                                                                                      ";
sql=sql+"                scw.COV_SUBCODENAME,                                                                                                                  ";
sql=sql+"                scw.COV_CLASSCODENAME,                                                                                                                ";
sql=sql+"                scw.COV_CLASSCODE,                                                                                                                    ";
sql=sql+"                row_number() over(partition by x.id                                                                                                   ";
sql=sql+"                                  ORDER BY scw.COV_EFFECTIVEDATE DESC,                                                                                ";
sql=sql+"                                           scw.PT_SEQUENCE DESC,                                                                                      ";
sql=sql+"                                           scw.SOURCE_PK DESC)  as line4                                                                            ";
sql=sql+"         from x,STG_COVERAGE_WORK scw                                                                                                                 ";
sql=sql+"              /* DB lkup (stg_coverage)*/                                                                                                             ";
sql=sql+"         where x.SYSTEM_GENERATED_B='Y'                                                                                                               ";
sql=sql+"         and scw.COVERAGE_UNIQUEID=x.COVERAGE_UNIQUEID                                                                                                ";
sql=sql+"         and scw.PT_SEQUENCE&lt;=x.PT_SEQUENCE                                                                                                           ";
sql=sql+"         and scw.POLICY_UNIQUEID = x.POLICY_UNIQUEID                                                                                                  ";
sql=sql+"        /* and scw.COV_EFFECTIVEDATE&lt;=x.PT_EFFECTIVEDATE   */                                                                                         ";
sql=sql+"       )                                                                                                                                              ";
sql=sql+"     where line4=1                                                                                                                                    ";
sql=sql+"                                                                                                                                                      ";
sql=sql+"     union                                                                                                                                            ";
sql=sql+"                                                                                                                                                      ";
sql=sql+"     select * from                                                                                                                                    ";
sql=sql+"       (                                                                                                                                              ";
sql=sql+"         select x.id as id4,                                                                                                                          ";
sql=sql+"                scw.COV_EFFECTIVEDATE,                                                                                                                ";
sql=sql+"                scw.COV_EXPIRATIONDATE,                                                                                                               ";
sql=sql+"                scw.COV_TYPE as COV_TYPE2,                                                                                                            ";
sql=sql+"                scw.COV_LIMIT1,                                                                                                                       ";
sql=sql+"                scw.COV_LIMIT1TYPE,                                                                                                                   ";
sql=sql+"                scw.COV_LIMIT2,                                                                                                                       ";
sql=sql+"                scw.COV_LIMIT2TYPE,                                                                                                                   ";
sql=sql+"                scw.COV_DEDUCTIBLE1,                                                                                                                  ";
sql=sql+"                scw.COV_DEDUCTIBLE1TYPE,                                                                                                              ";
sql=sql+"                scw.COV_CODE,                                                                                                                         ";
sql=sql+"                scw.COV_NAME,                                                                                                                         ";
sql=sql+"                scw.COV_SUBCODE,                                                                                                                      ";
sql=sql+"                scw.COV_SUBCODENAME,                                                                                                                  ";
sql=sql+"                scw.COV_CLASSCODENAME,                                                                                                                ";
sql=sql+"                scw.COV_CLASSCODE,                                                                                                                    ";
sql=sql+"                row_number() over(partition by x.id                                                                                                   ";
sql=sql+"                                  ORDER BY scw.PT_SEQUENCE DESC,                                                                                      ";
sql=sql+"                                           scw.COV_EFFECTIVEDATE DESC,                                                                                ";
sql=sql+"                                           scw.COV_EXPIRATIONDATE DESC)  as line5                                                                     ";
sql=sql+"         from x,STG_COVERAGE_WORK scw                                                                                                                 ";
sql=sql+"              /* DB lkup (stg_coverage)*/                                                                                                             ";
sql=sql+"         where x.SYSTEM_GENERATED_B!='Y'                                                                                                              ";
sql=sql+"         and scw.COVERAGE_UNIQUEID=x.COVERAGE_UNIQUEID                                                                                                ";
sql=sql+"         and scw.PT_SEQUENCE&lt;=x.PT_SEQUENCE                                                                                                           ";
sql=sql+"         and scw.POLICY_UNIQUEID = x.POLICY_UNIQUEID                                                                                                  ";
sql=sql+"         and scw.COV_EFFECTIVEDATE&lt;=x.PT_EFFECTIVEDATE                                                                                                ";
sql=sql+"       )                                                                                                                                              ";
sql=sql+"     where line5=1                                                                                                                                    ";
sql=sql+"     ) z4                                                                                                                                             ";
sql=sql+"     on x.id=z4.id4                                                                                                                                   ";
sql=sql+"  left join                                                                                                                                           ";
sql=sql+"      (                                                                                                                                               ";
sql=sql+"       select z51.id51 as id5,                                                                                                                        ";
sql=sql+"             nvl(z52.TRANSACTIONTYPE_ID, z51.TRANSACTIONTYPE_ID_USD) as TRANSACTIONTYPE_ID_NEW,                                                       ";
sql=sql+"             z52.TRANSACTIONTYPE_ID,                                                                                                                  ";
sql=sql+"             z51.TRANSACTIONTYPE_ID_USD                                                                                                               ";
sql=sql+"        from                                                                                                                                          ";
sql=sql+"             (select z5.TRANSACTIONTYPE_ID as TRANSACTIONTYPE_ID_USD , x.id as id51                                                                   ";
sql=sql+"                from  x                                                                                                                               ";
sql=sql+"                left join DIM_TRANSACTIONTYPE z5                                                                                                      ";
sql=sql+"               on substr(z5.TRANS_CODE, 0, 3) = 'USD'                                                                                                 ";
sql=sql+"                 and z5.TRANS_SUBCODE = x.PT_TYPESUBCODE                                                                                              ";
sql=sql+"                 and z5.TRANS_CATEGORY = 'policy') z51                                                                                                ";
sql=sql+"                 /*Database lookup (vdim_transactiontype) User Define Trans*/                                                                         ";
sql=sql+"        left join                                                                                                                                     ";
sql=sql+"             (select z5.TRANSACTIONTYPE_ID as TRANSACTIONTYPE_ID , x.id as id52                                                                       ";
sql=sql+"                from  x                                                                                                                               ";
sql=sql+"                left join DIM_TRANSACTIONTYPE z5                                                                                                      ";
sql=sql+"               on z5.TRANS_CODE = x.PT_TYPECODE                                                                                                       ";
sql=sql+"                 and z5.TRANS_SUBCODE = x.PT_TYPESUBCODE                                                                                              ";
sql=sql+"                 and z5.TRANS_CATEGORY = 'policy') z52                                                                                                ";
sql=sql+"                 /* Database lookup (vdim_transactiontype)*/                                                                                          ";
sql=sql+"          on z51.id51 = z52.id52                                                                                                                      ";
sql=sql+"        ) z5                                                                                                                                          ";
sql=sql+"     on  x.id=z5.id5                                                                                                                                  ";
sql=sql+"   left join (select max(COVEREDRISK_ID) as COVEREDRISK_ID,                                                                                           ";
sql=sql+"                     CVRSK_UNIQUEID                                                                                                                   ";
sql=sql+"              from  DIM_COVEREDRISK_WORK                                                                                                              ";
sql=sql+"              group by CVRSK_UNIQUEID)   z6                                                                                                           ";
sql=sql+"     on z6.CVRSK_UNIQUEID=x.PRIMARYRISK_UNIQUEID                                                                                                      ";
sql=sql+"                 /*DB lookup (dim_coveredRisk)*/                                                                                                      ";
sql=sql+"   left join                                                                                                                                          ";
sql=sql+"       (                                                                                                                                              ";
sql=sql+"        SELECT *                                                                                                                                      ";
sql=sql+"        FROM   (                                                                                                                                      ";
sql=sql+"                SELECT x.PRIMARYRISK_UNIQUEID as PRIMARYRISK_UNIQUEID7,                                                                               ";
sql=sql+"                       sr.rsk_territorycode,                                                                                                          ";
sql=sql+"                       sr.rsk_territoryname,                                                                                                          ";
sql=sql+"                       sr.rsk_address1,                                                                                                               ";
sql=sql+"                       sr.rsk_address2,                                                                                                               ";
sql=sql+"                       sr.rsk_address3,                                                                                                               ";
sql=sql+"                       sr.rsk_county,                                                                                                                 ";
sql=sql+"                       sr.rsk_city,                                                                                                                   ";
sql=sql+"                       sr.rsk_state,                                                                                                                  ";
sql=sql+"                       sr.rsk_postalcode,                                                                                                             ";
sql=sql+"                       sr.rsk_country,                                                                                                                ";
sql=sql+"                       row_number() OVER (PARTITION BY x.id,sr.risk_uniqueid                                                                          ";
sql=sql+"                                          ORDER BY   sr.RSK_EFFECTIVE_FROM_DATE DESC,                                                                 ";
sql=sql+"                                                     sr.RSK_EFFECTIVE_TO_DATE DESC,                                                                   ";
sql=sql+"                                                     sr.Pt_Sequence DESC)     line7,                                                                  ";
sql=sql+"                       x.id as id7                                                                                                                    ";
sql=sql+"                FROM  x                                                                                                                               ";
sql=sql+"                left join stg_risk sr                                                                                                                 ";
sql=sql+"                on  sr.risk_uniqueid = x.PRIMARYRISK_UNIQUEID                                                                                         ";
sql=sql+"                AND sr.rsk_transactioneffectivedate &lt;= x.PT_EFFECTIVEDATE                                                                             ";
sql=sql+"                AND sr.pt_sequence &lt;= x.PT_SEQUENCE                                                                                                   ";
sql=sql+"                /* Exclude Prior Acts*/                                                                                                               ";
sql=sql+"                AND  NVL(sr.mmrsk_exposure_basis_code,'x') &lt;&gt; 'PRIOR_CARR'                                                                            ";
sql=sql+"               ) s                                                                                                                                    ";
sql=sql+"        WHERE  s.line7 = 1                                                                                                                            ";
sql=sql+"        ) z7                                                                                                                                          ";
sql=sql+"        on z7.id7=x.id                                                                                                                                ";
sql=sql+"       /* on  x.PRIMARYRISK_UNIQUEID=z7.PRIMARYRISK_UNIQUEID7   and x.PRIMARYRISK_UNIQUEID!='0'*/                                                     ";
sql=sql+"        /*Get Stg_Risk Location*/                                                                                                                     ";
sql=sql+"    left join (                                                                                                                                       ";
sql=sql+"        SELECT COM_EFFECTIVEDATE,                                                                                                                     ";
sql=sql+"               COM_EXPIRATIONDATE,                                                                                                                    ";
sql=sql+"               id8                                                                                                                                    ";
sql=sql+"        FROM  ( SELECT                                                                                                                                ";
sql=sql+"                       /*+ INDEX(INC_STG_COMP_COMB) */                                                                                                ";
sql=sql+"                       sc.COM_EFFECTIVEDATE,                                                                                                          ";
sql=sql+"                       sc.COM_EXPIRATIONDATE,                                                                                                         ";
sql=sql+"                       ROW_NUMBER() OVER(PARTITION BY x.id,x.COMPONENT_UNIQUEID                                                                       ";
sql=sql+"                                             ORDER BY STGCOMPONENT_ID DESC)    line8,                                                                 ";
sql=sql+"                       x.id as id8                                                                                                                    ";
sql=sql+"                FROM   x, STG_COMPONENT sc                                                                                                            ";
sql=sql+"                where  sc.COMPONENT_UNIQUEID = x.COMPONENT_UNIQUEID                                                                                   ";
sql=sql+"                AND sc.PT_SEQUENCE &lt;= x.PT_SEQUENCE                                                                                                   ";
sql=sql+"              )                                                                                                                                       ";
sql=sql+"        WHERE  line8 = 1                                                                                                                              ";
sql=sql+"        ) z8                                                                                                                                          ";
sql=sql+"        on x.id=z8.id8                                                                                                                                ";
sql=sql+"    left join (                                                                                                                                       ";
sql=sql+"        SELECT OTHRADJUSTMENT_EFFECTIVEDATE,                                                                                                          ";
sql=sql+"               OTHRADJUSTMENT_EXPIRATIONDATE,                                                                                                         ";
sql=sql+"               id9                                                                                                                                    ";
sql=sql+"        FROM  (                                                                                                                                       ";
sql=sql+"        SELECT                                                                                                                                        ";
sql=sql+"               /*+ INDEX(in_stg_othradj_uniqueid ) */                                                                                                 ";
sql=sql+"               OTHRADJUSTMENT_EFFECTIVEDATE, OTHRADJUSTMENT_EXPIRATIONDATE,                                                                           ";
sql=sql+"               ROW_NUMBER() OVER(PARTITION BY x.id,x.OTHERADJUSTMENT_UNIQUEID                                                                         ";
sql=sql+"                                     ORDER BY soa.STGOTHERADJUSTMENT_ID DESC)   line9,                                                                ";
sql=sql+"               x.OTHERADJUSTMENT_UNIQUEID,                                                                                                            ";
sql=sql+"               soa.PT_SEQUENCE,                                                                                                                       ";
sql=sql+"               x.id as id9                                                                                                                            ";
sql=sql+"        FROM   x,STG_OTHER_ADJUSTMENT soa                                                                                                             ";
sql=sql+"        WHERE  soa.OTHERADJUSTMENT_UNIQUEID = x.OTHERADJUSTMENT_UNIQUEID                                                                              ";
sql=sql+"          AND  soa.PT_SEQUENCE &lt;= x.PT_SEQUENCE)                                                                                                      ";
sql=sql+"        WHERE  line9 = 1                                                                                                                              ";
sql=sql+"        ) z9                                                                                                                                          ";
sql=sql+"        on z9.id9=x.id                                                                                                                                ";
sql=sql+"     /*   on z9.OTHERADJUSTMENT_UNIQUEID9=x.OTHERADJUSTMENT_UNIQUEID     and z9.PT_SEQUENCE9 &lt;= x.PT_SEQUENCE*/                                       ";
sql=sql+"                                                                                                                                                      ";
sql=sql+"                                  /* Get STG_OTHERADJUSTMENT */                                                                                       ";
sql=sql+"    left join (                                                                                                                                       ";
sql=sql+"        select POLICY_ID,id10 from                                                                                                                    ";
sql=sql+"        (                                                                                                                                             ";
sql=sql+"             select x.id as id10,                                                                                                                     ";
sql=sql+"                    dp.POLICY_ID,                                                                                                                     ";
sql=sql+"                    row_number() over(partition by x.id                                                                                               ";
sql=sql+"                                     ORDER BY dp.POLICY_ID DESC) as line10                                                                            ";
sql=sql+"             from x,Dim_Policy@dw_dra dp                                                                                                              ";
sql=sql+"             where dp.POL_UNIQUEID=x.POLICY_UNIQUEID                                                                                                  ";
sql=sql+"             and dp.VALID_FROMDATE&lt;=x.PT_ACCOUNTINGDATE                                                                                               ";
sql=sql+"             and dp.VALID_TODATE>x.PT_ACCOUNTINGDATE                                                                                                  ";
sql=sql+"                  )                                                                                                                                   ";
sql=sql+"        where line10=1                                                                                                                                ";
sql=sql+"        ) z10                                                                                                                                         ";
sql=sql+"        on z10.id10=x.id                                                                                                                              ";
sql=sql+"        /*Database lookup Get Policy ID (Dim_Policy)*/                                                                                                ";
sql=sql+"    left join                                                                                                                                         ";
sql=sql+"        (                                                                                                                                             ";
sql=sql+"        SELECT x.id as id11,max(dce.coverageextension_id) coverageextension_id                                                                        ";
sql=sql+"        FROM   x,dim_coverageextension@dw_dra dce                                                                                                     ";
sql=sql+"        WHERE  dce.cov_uniqueid = x.COVERAGE_UNIQUEID                                                                                                 ";
sql=sql+"        AND    trunc(dce.valid_fromdate) &lt;= trunc(x.PT_ACCOUNTINGDATE)                                                                                ";
sql=sql+"        AND    trunc(dce.valid_todate) >= trunc(x.PT_ACCOUNTINGDATE)                                                                                  ";
sql=sql+"        AND    dce.pt_sequence &lt;= x.PT_SEQUENCE                                                                                                       ";
sql=sql+"        AND    dce.policy_uniqueid = x.policy_uniqueid                                                                                                ";
sql=sql+"        AND    (                                                                                                                                      ";
sql=sql+"                 (nvl(dce.cov_effective_from_date, to_date('1/1/1900', 'mm/dd/yyyy')) &lt;= x.pt_effectivedate                                           ";
sql=sql+"                  AND nvl(dce.cov_effective_to_date, to_date('1/1/3000', 'mm/dd/yyyy')) >= x.pt_effectivedate)                                        ";
sql=sql+"                /*Tail coverage*/                                                                                                                     ";
sql=sql+"        OR       (dce.mmcov_coverage_segment_code = 'TAIL'                                                                                            ";
sql=sql+"                  AND nvl(dce.cov_effective_to_date, to_date('1/1/3000', 'mm/dd/yyyy')) >= x.pt_effectivedate)                                        ";
sql=sql+"        OR      /*Component or coverage expired/cancelled before this transaction effective date*/                                                    ";
sql=sql+"                 (nvl(dce.cov_effective_from_date, to_date('1/1/1900', 'mm/dd/yyyy')) &lt;= x.pt_effectivedate)                                          ";
sql=sql+"        OR   /* Component or coverage that created before current transaction key, but effective after current                                        ";
sql=sql+"             transaction effective from date.*/                                                                                                       ";
sql=sql+"                 (nvl(dce.cov_effective_from_date, to_date('1/1/1900', 'mm/dd/yyyy')) >= x.pt_effectivedate)                                          ";
sql=sql+"               )                                                                                                                                      ";
sql=sql+"        group by x.id                                                                                                                                 ";
sql=sql+"        ) z11                                                                                                                                         ";
sql=sql+"        on z11.id11=x.id                                                                                                                              ";
sql=sql+"        /*Get Coverage Extension ID*/                                                                                                                 ";
sql=sql+"     left join                                                                                                                                        ";
sql=sql+"          (                                                                                                                                           ";
sql=sql+"          select * from  (                                                                                                                            ";
sql=sql+"          select x.id as id12,                                                                                                                        ";
sql=sql+"                 row_number() over(partition by x.id                                                                                                  ";
sql=sql+"                                     ORDER BY dpx.record_version desc) as line12,                                                                     ";
sql=sql+"                 dpx.POLICYEXTENSION_ID                                                                                                               ";
sql=sql+"          from x,Dim_Policyextension@dw_dra dpx                                                                                                       ";
sql=sql+"          where dpx.POLICY_UNIQUEID=x.POLICY_UNIQUEID                                                                                                 ";
sql=sql+"          and dpx.pt_sequence &lt;= x.pt_sequence                                                                                                        ";
sql=sql+"          and trunc(dpx.VALID_FROMDATE) &lt;= trunc(x.PT_ACCOUNTINGDATE)                                                                                 ";
sql=sql+"          and trunc(dpx.VALID_TODATE) >= trunc(x.PT_ACCOUNTINGDATE))                                                                                  ";
sql=sql+"          where line12=1                                                                                                                              ";
sql=sql+"          ) z12                                                                                                                                       ";
sql=sql+"          on z12.id12=x.id                                                                                                                            ";
sql=sql+"          /*Get Policy Ext ID*/                                                                                                                       ";
sql=sql+"     left join                                                                                                                                        ";
sql=sql+"          (                                                                                                                                           ";
sql=sql+"          select * from (                                                                                                                             ";
sql=sql+"          SELECT x.id as id13,max(dcre.coveredriskextension_id) coveredriskextension_id                                                               ";
sql=sql+"          FROM   x,dim_coveredriskextension@dw_dra dcre                                                                                               ";
sql=sql+"          WHERE  dcre.cvrsk_uniqueid = x.PRIMARYRISK_UNIQUEID                                                                                         ";
sql=sql+"          AND    trunc(dcre.valid_fromdate) &lt;= trunc(x.PT_ACCOUNTINGDATE)                                                                             ";
sql=sql+"          AND    trunc(dcre.valid_todate) >= trunc(x.PT_ACCOUNTINGDATE)                                                                               ";
sql=sql+"          AND    NVL(dcre.mmrsk_exposure_basis_code,'x') &lt;&gt; 'PRIOR_CARR'                                                                              ";
sql=sql+"          AND    dcre.pt_sequence &lt;= x.pt_sequence                                                                                                    ";
sql=sql+"          AND    (                                                                                                                                    ";
sql=sql+"                   (nvl(dcre.rsk_effective_from_date, to_date('1/1/1900', 'mm/dd/yyyy')) &lt;= x.pt_effectivedate                                        ";
sql=sql+"                    AND nvl(dcre.rsk_effective_to_date, to_date('1/1/3000', 'mm/dd/yyyy')) >= x.pt_effectivedate)                                     ";
sql=sql+"          OR       (dcre.mmrsk_current_status = 'CANCEL'                                                                                              ";
sql=sql+"                    AND nvl(dcre.rsk_effective_from_date, to_date('1/1/1900', 'mm/dd/yyyy')) &lt;= x.pt_effectivedate                                    ";
sql=sql+"                    AND nvl(dcre.rsk_effective_to_date, to_date('1/1/3000', 'mm/dd/yyyy')) >= x.pt_effectivedate)                                     ";
sql=sql+"                    /* For system generated TAIL coverages that effective after free tail expired. */                                                 ";
sql=sql+"          OR       (dcre.mmrsk_current_status = 'CANCEL' AND x.SYSTEM_GENERATED_B = 'Y'                                                               ";
sql=sql+"                    AND nvl(dcre.rsk_effective_from_date, to_date('1/1/1900', 'mm/dd/yyyy')) &lt;= x.pt_effectivedate                                    ";
sql=sql+"                    AND nvl(dcre.rsk_effective_to_date, to_date('1/1/3000', 'mm/dd/yyyy')) &lt; x.pt_effectivedate)                                      ";
sql=sql+"                  )                                                                                                                                   ";
sql=sql+"          group by x.id)                                                                                                                              ";
sql=sql+"          ) z13                                                                                                                                       ";
sql=sql+"          on z13.id13=x.id                                                                                                                            ";
sql=sql+"          /*Get CoveredRisk Extension ID*/                                                                                                            ";
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>sql</name>
        <rename>sql</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>18</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Select values</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <remove>
        <name>coverageextension_id2</name>
      </remove>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>376</xloc>
      <yloc>534</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Select values 2</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>POLICYEFFECTIVEDATE_ID</name>
        <rename>POLICYEFFECTIVEDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>POLICYEXPIRATIONDATE_ID</name>
        <rename>POLICYEXPIRATIONDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>COVERAGEEFFECTIVEDATE_ID</name>
        <rename>COVERAGEEFFECTIVEDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>COVERAGEEXPIRATIONDATE_ID</name>
        <rename>COVERAGEEXPIRATIONDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>TRANSACTIONDATE_ID</name>
        <rename>TRANSACTIONDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>ACCOUNTINGDATE_ID</name>
        <rename>ACCOUNTINGDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>EFFECTIVEDATE_ID</name>
        <rename>EFFECTIVEDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>EXPIRATIONDATE_ID</name>
        <rename>EXPIRATIONDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>EARNFROMDATE_ID</name>
        <rename>EARNFROMDATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>EARNTODATE_ID</name>
        <rename>EARNTODATE_ID</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>175</xloc>
      <yloc>962</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Switch / Case</name>
    <type>SwitchCase</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fieldname>COV_TYPE</fieldname>
    <use_contains>N</use_contains>
    <case_value_type>String</case_value_type>
    <case_value_format/>
    <case_value_decimal/>
    <case_value_group/>
    <default_target_step>Switch / Case 3 2</default_target_step>
    <cases>
      <case>
        <value>-1</value>
        <target_step>DB lkup (stg_coverage - no dates)</target_step>
      </case>
    </cases>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>897</xloc>
      <yloc>78</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Switch / Case 2</name>
    <type>SwitchCase</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fieldname>POLICY_ID</fieldname>
    <use_contains>N</use_contains>
    <case_value_type>Number</case_value_type>
    <case_value_format/>
    <case_value_decimal/>
    <case_value_group/>
    <default_target_step>DB lookup (vdim_thirdInsured)</default_target_step>
    <cases>
      <case>
        <value>-1</value>
        <target_step>Database lookup Get Policy ID (Dim_Policy) 2</target_step>
      </case>
    </cases>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>559</xloc>
      <yloc>399</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Switch / Case 2 2</name>
    <type>SwitchCase</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fieldname>POLICYEXTENSION_ID</fieldname>
    <use_contains>N</use_contains>
    <case_value_type>Number</case_value_type>
    <case_value_format/>
    <case_value_decimal/>
    <case_value_group/>
    <default_target_step>Dummy (do nothing) 3</default_target_step>
    <cases>
      <case>
        <value>-1</value>
        <target_step>Get Policy Ext ID 2</target_step>
      </case>
    </cases>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Switch / Case 3</name>
    <type>SwitchCase</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fieldname>coverageextension_id</fieldname>
    <use_contains>N</use_contains>
    <case_value_type>Number</case_value_type>
    <case_value_format/>
    <case_value_decimal/>
    <case_value_group/>
    <default_target_step>Dummy (do nothing) 2</default_target_step>
    <cases>
      <case>
        <value>-1</value>
        <target_step>Get Coverage Extension ID 2</target_step>
      </case>
    </cases>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>561</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Switch / Case 3 2</name>
    <type>SwitchCase</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fieldname>COV_TYPE</fieldname>
    <use_contains>N</use_contains>
    <case_value_type>String</case_value_type>
    <case_value_format/>
    <case_value_decimal/>
    <case_value_group/>
    <default_target_step>Dummy</default_target_step>
    <cases>
      <case>
        <value>-1</value>
        <target_step>DB lkup (stg_coverage - no dates) 3</target_step>
      </case>
      <case>
        <value/>
        <target_step>DB lkup (stg_coverage - no dates) 3</target_step>
      </case>
    </cases>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>575</xloc>
      <yloc>78</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input (new or renewal)</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_Staging</connection>
    <sql>WITH POL_NB_RN AS 
(select POLICY_UNIQUEID, min(PT_TYPECODE) PT_TYPECODE,
case 
  when POLICY_UNIQUEID like '%PYN%' THEN 
     0
   ELSE
TO_NUMBER(substr(POLICY_UNIQUEID,instr(POLICY_UNIQUEID,'^')+1,length(POLICY_UNIQUEID)))
END AS  policy_term_fk
from STG_POLICYTRANSACTION SPT
where PT_TYPECODE = 'RB' or PT_TYPECODE = 'NB' or PT_TYPECODE = 'RS' 
group by POLICY_UNIQUEID
)
SELECT  p.POLICY_UNIQUEID,
       
        CASE
          WHEN PT_TYPECODE='RS'  THEN   
             LEAD(PT_TYPECODE,1,'RB') OVER (PARTITION BY substr(P.POLICY_UNIQUEID,1,instr(P.POLICY_UNIQUEID,'^')-1) ORDER BY policy_term_fk DESC)
          ELSE
             PT_TYPECODE
         END AS PT_TYPECODE
FROM POL_NB_RN P
order by POLICY_UNIQUEID 
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1081</xloc>
      <yloc>715</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table output (fact_policytransaction)</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>4SBI_DataWarehouse</connection>
    <schema/>
    <table>fact_policytransaction</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>N</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>ACCOUNTINGDATE_ID</column_name>
        <stream_name>ACCOUNTINGDATE_ID</stream_name>
      </field>
      <field>
        <column_name>AMOUNT</column_name>
        <stream_name>PT_AMOUNT</stream_name>
      </field>
      <field>
        <column_name>COVERAGEEFFECTIVEDATE_ID</column_name>
        <stream_name>COVERAGEEFFECTIVEDATE_ID</stream_name>
      </field>
      <field>
        <column_name>COVERAGEEXPIRATIONDATE_ID</column_name>
        <stream_name>COVERAGEEXPIRATIONDATE_ID</stream_name>
      </field>
      <field>
        <column_name>COVEREDRISKLOCATION_ID</column_name>
        <stream_name>COVEREDRISKLOCATION_ID</stream_name>
      </field>
      <field>
        <column_name>EFFECTIVEDATE_ID</column_name>
        <stream_name>EFFECTIVEDATE_ID</stream_name>
      </field>
      <field>
        <column_name>FIRSTINSURED_ID</column_name>
        <stream_name>FIRSTINSURED_ID</stream_name>
      </field>
      <field>
        <column_name>POLICYEFFECTIVEDATE_ID</column_name>
        <stream_name>POLICYEFFECTIVEDATE_ID</stream_name>
      </field>
      <field>
        <column_name>POLICYEXPIRATIONDATE_ID</column_name>
        <stream_name>POLICYEXPIRATIONDATE_ID</stream_name>
      </field>
      <field>
        <column_name>POLICY_ID</column_name>
        <stream_name>POLICY_ID</stream_name>
      </field>
      <field>
        <column_name>PRODUCER_ID</column_name>
        <stream_name>PRODUCER_ID</stream_name>
      </field>
      <field>
        <column_name>PRODUCT_ID</column_name>
        <stream_name>PRODUCT_ID</stream_name>
      </field>
      <field>
        <column_name>TERRITORY_ID</column_name>
        <stream_name>TERRITORY_ID</stream_name>
      </field>
      <field>
        <column_name>TRANSACTIONDATE_ID</column_name>
        <stream_name>TRANSACTIONDATE_ID</stream_name>
      </field>
      <field>
        <column_name>TRANSACTIONSEQUENCE</column_name>
        <stream_name>PT_SEQUENCE</stream_name>
      </field>
      <field>
        <column_name>TRANSACTIONTYPE_ID</column_name>
        <stream_name>TRANSACTIONTYPE_ID_NEW</stream_name>
      </field>
      <field>
        <column_name>COVEREDRISK_ID</column_name>
        <stream_name>COVEREDRISK_ID</stream_name>
      </field>
      <field>
        <column_name>LOADDATE</column_name>
        <stream_name>loadDate</stream_name>
      </field>
      <field>
        <column_name>COVERAGE_ID</column_name>
        <stream_name>COVERAGE_ID</stream_name>
      </field>
      <field>
        <column_name>COMMISSION_AMOUNT</column_name>
        <stream_name>PT_COMMISSIONAMOUNT</stream_name>
      </field>
      <field>
        <column_name>COMPANY_ID</column_name>
        <stream_name>COMPANY_ID</stream_name>
      </field>
      <field>
        <column_name>POLICYTRANSACTION_ID</column_name>
        <stream_name>POLICYTRANSACTION_ID</stream_name>
      </field>
      <field>
        <column_name>UNDERWRITER_ID</column_name>
        <stream_name>UNDERWRITER_ID</stream_name>
      </field>
      <field>
        <column_name>SECONDINSURED_ID</column_name>
        <stream_name>SECONDINSURED_ID</stream_name>
      </field>
      <field>
        <column_name>THIRDINSURED_ID</column_name>
        <stream_name>THIRDINSURED_ID</stream_name>
      </field>
      <field>
        <column_name>FIRSTOTHERINTEREST_ID</column_name>
        <stream_name>FIRSTOTHERINTEREST_ID</stream_name>
      </field>
      <field>
        <column_name>SECONDOTHERINTEREST_ID</column_name>
        <stream_name>SECONDOTHERINTEREST_ID</stream_name>
      </field>
      <field>
        <column_name>LIMIT_ID</column_name>
        <stream_name>LIMIT_ID</stream_name>
      </field>
      <field>
        <column_name>DEDUCTIBLE_ID</column_name>
        <stream_name>DEDUCTIBLE_ID</stream_name>
      </field>
      <field>
        <column_name>CLASS_ID</column_name>
        <stream_name>CLASS_ID</stream_name>
      </field>
      <field>
        <column_name>COVERAGEEXTENSION_ID</column_name>
        <stream_name>COVERAGEEXTENSION_ID</stream_name>
      </field>
      <field>
        <column_name>EARNINGSTYPE</column_name>
        <stream_name>PT_EARNINGSTYPE</stream_name>
      </field>
      <field>
        <column_name>COVEREDRISKEXTENSION_ID</column_name>
        <stream_name>COVEREDRISKEXTENSION_ID</stream_name>
      </field>
      <field>
        <column_name>POLICYEXTENSION_ID</column_name>
        <stream_name>POLICYEXTENSION_ID</stream_name>
      </field>
      <field>
        <column_name>EXPIRATIONDATE_ID</column_name>
        <stream_name>expirationDate_id</stream_name>
      </field>
      <field>
        <column_name>POLICYTRANSACTIONEXTENSION_ID</column_name>
        <stream_name>POLICYTRANSACTIONEXTENSION_ID</stream_name>
      </field>
      <field>
        <column_name>POLICYNEWORRENEWAL</column_name>
        <stream_name>POLICYNEWORRENEWAL</stream_name>
      </field>
      <field>
        <column_name>EARNFROMDATE_ID</column_name>
        <stream_name>EARNFROMDATE_ID</stream_name>
      </field>
      <field>
        <column_name>EARNTODATE_ID</column_name>
        <stream_name>EARNTODATE_ID</stream_name>
      </field>
      <field>
        <column_name>INCLUDE_IN_SUMMARY_B</column_name>
        <stream_name>INCLUDE_IN_SUMMARY_B</stream_name>
      </field>
      <field>
        <column_name>ANNUALIZED_PREM_AMT</column_name>
        <stream_name>ANNUALIZED_PREM_AMT</stream_name>
      </field>
      <field>
        <column_name>COV_ABR_AMT</column_name>
        <stream_name>COV_ABR_AMT</stream_name>
      </field>
      <field>
        <column_name>COMPONENT_ID</column_name>
        <stream_name>COMPONENT_ID</stream_name>
      </field>
      <field>
        <column_name>OTHERADJUSTMENT_ID</column_name>
        <stream_name>OTHERADJUSTMENT_ID</stream_name>
      </field>
      <field>
        <column_name>POLICYTRANSACTION_UNIQUEID</column_name>
        <stream_name>POLICYTRANSACTION_UNIQUEID</stream_name>
      </field>
      <field>
        <column_name>COMPONENTEFFECTIVEDATE_ID</column_name>
        <stream_name>COMPONENTEFFECTIVEDATE_ID</stream_name>
      </field>
      <field>
        <column_name>COMPONENTEXPIRATIONDATE_ID</column_name>
        <stream_name>COMPONENTEXPIRATIONDATE_ID</stream_name>
      </field>
      <field>
        <column_name>OTHERADJEFFECTIVEDATE_ID</column_name>
        <stream_name>OTHERADJEFFECTIVEDATE_ID</stream_name>
      </field>
      <field>
        <column_name>OTHERADJEXPIRATIONDATE_ID</column_name>
        <stream_name>OTHERADJEXPIRATIONDATE_ID</stream_name>
      </field>
      <field>
        <column_name>PREM_TYPE</column_name>
        <stream_name>PREM_TYPE</stream_name>
      </field>
      <field>
        <column_name>OFFERINGCOMPANY_ID</column_name>
        <stream_name>OFFERINGCOMPANY_ID</stream_name>
      </field>
      <field>
        <column_name>POLICYUNIT_ID</column_name>
        <stream_name>POLICYUNIT_ID</stream_name>
      </field>
      <field>
        <column_name>POLICYVERSION_ID</column_name>
        <stream_name>POLICYVERSION_ID</stream_name>
      </field>
      <field>
        <column_name>AGENT_ID</column_name>
        <stream_name>AGENT_ID</stream_name>
      </field>
      <field>
        <column_name>LOCATION_ID</column_name>
        <stream_name>LOCATION_ID</stream_name>
      </field>
      <field>
        <column_name>CLASSIFICATIONEXTENSION_ID</column_name>
        <stream_name>CLASSIFICATIONEXTENSION_ID</stream_name>
      </field>
      <field>
        <column_name>STATE_ID</column_name>
        <stream_name>STATE_ID</stream_name>
      </field>
      <field>
        <column_name>SOURCE_SYSTEM</column_name>
        <stream_name>SOURCE_SYSTEM</stream_name>
      </field>
      <field>
        <column_name>LOB_ID</column_name>
        <stream_name>LOB_ID</stream_name>
      </field>
      <field>
        <column_name>WRITTEN_PREMIUM</column_name>
        <stream_name>VL_WRITTEN_PREM</stream_name>
      </field>
      <field>
        <column_name>REFRESH_ID</column_name>
        <stream_name>refresh_id</stream_name>
      </field>
      <field>
        <column_name>BUILDING_ID</column_name>
        <stream_name>BUILDING_ID</stream_name>
      </field>
      <field>
        <column_name>FINANCIALACCOUNTINGDATE_ID</column_name>
        <stream_name>FINANCIALACCOUNTINGDATE_ID</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>948</xloc>
      <yloc>889</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Value Mapper (new/renew)</name>
    <type>ValueMapper</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <field_to_use>NEWRENEW_TRANSCODE</field_to_use>
    <target_field>POLICYNEWORRENEWAL</target_field>
    <non_match_default>New</non_match_default>
    <fields>
      <field>
        <source_value>NB</source_value>
        <target_value>New</target_value>
      </field>
      <field>
        <source_value>RB</source_value>
        <target_value>Renewal</target_value>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>948</xloc>
      <yloc>801</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
