<job>
  <name>SBJ_FT_Create_Help_Tables</name>
  <description>Create help temp tables for Fact_Financialtransaction load.</description>
  <extended_description>Date         By     Description
04/21/2016   Jma    Issue #164949. Updated logic in Create tmp_ftt_lkup_stg_coverage2 and Create tmp_ftt_lkup_stg_risk
                    steps to get data from STG_COVERAGE table without comparing dates.</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/public/ETL/Facts/Sub-Jobs</directory>
  <created_user>-</created_user>
  <created_date>2014/10/24 10:42:22.457</created_date>
  <modified_user>-</modified_user>
  <modified_date>2016/04/22 16:26:00.962</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>4SBI_Staging</name>
    <server>${G_STAGING_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_STAGING_DB_NAME}</database>
    <port>${G_STAGING_DB_PORT}</port>
    <username>${G_STAGING_DB_USERNAME}</username>
    <password>${G_STAGING_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_STAGING_DB_DATA}</data_tablespace>
    <index_tablespace>${G_STAGING_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_STAGING_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    <slaveserver>
      <name>4Sight BI - PDI Server</name>
      <hostname>10.0.0.21</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Carte 1</name>
      <hostname>localhost</hostname>
      <port>9081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>DI Server</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_DEV</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_SERVER</name>
      <hostname>http://magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_TEST</name>
      <hostname>magspentahotest</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_BTS</name>
      <hostname>129.144.25.104</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_DEV</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Master</name>
      <hostname>localhost</hostname>
      <port>8081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SERVER1</name>
      <hostname>LOCALHOST</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE ONE</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4a418bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE TWO</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave1</name>
      <hostname>localhost</hostname>
      <port>8082</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave2</name>
      <hostname>localhost</hostname>
      <port>8083</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave3</name>
      <hostname>localhost</hostname>
      <port>8084</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>local DIS</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>magspentahodev</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
  </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <checkpoint-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <max_nr_retries/>
    <run_retry_period/>
    <namespace_parameter/>
    <save_parameters/>
    <save_result_rows/>
    <save_result_files/>
    <field>
      <id>ID_JOB_RUN</id>
      <enabled>Y</enabled>
      <name>ID_JOB_RUN</name>
    </field>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>NAMESPACE</id>
      <enabled>Y</enabled>
      <name>NAMESPACE</name>
    </field>
    <field>
      <id>CHECKPOINT_NAME</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_NAME</name>
    </field>
    <field>
      <id>CHECKPOINT_COPYNR</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_COPYNR</name>
    </field>
    <field>
      <id>ATTEMPT_NR</id>
      <enabled>Y</enabled>
      <name>ATTEMPT_NR</name>
    </field>
    <field>
      <id>JOB_RUN_START_DATE</id>
      <enabled>Y</enabled>
      <name>JOB_RUN_START_DATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>RESULT_XML</id>
      <enabled>Y</enabled>
      <name>RESULT_XML</name>
    </field>
    <field>
      <id>PARAMETER_XML</id>
      <enabled>Y</enabled>
      <name>PARAMETER_XML</name>
    </field>
  </checkpoint-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>If exists tmp_ftt_lkup_stg_coverage1</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_ftt_lkup_stg_coverage1</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>309</xloc>
      <yloc>87</yloc>
    </entry>
    <entry>
      <name>Create tmp_ftt_lkup_stg_coverage1</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_ftt_lkup_stg_coverage1 nologging PCTFREE 0 
tablespace ${G_STAGING_DB_DATA}
as
SELECT sc.sk_recordnum,
       sc.cov_transactionaccountingdate,
       sc.cov_effectivedate,
       sc.cov_expirationdate,
       sc.COVERAGEEFFECTIVEDATE_ID,
       sc.COVERAGEEXPIRATIONDATE_ID,
       sc.cov_type,
       sc.cov_code,
       sc.cov_name,
       sc.cov_description,
       sc.cov_subcode,
       sc.cov_subcodename,
       sc.cov_subcodedescription,
       sc.cov_classcode,
       sc.cov_classcodedescription,
       sc.cov_classsubcode,
       sc.cov_asl,
       sc.cov_subline
FROM (       
SELECT x.*,
       row_number() OVER (PARTITION BY x.sk_recordnum ORDER BY x.cov_transactionaccountingdate desc, x.stgcoverage_id DESC) pick1
FROM 
(SELECT /*+ use_hash (f, sc) */
       f.sk_recordnum,
       sc.stgcoverage_id,
       sc.cov_transactionaccountingdate,
       sc.cov_effectivedate,
       sc.cov_expirationdate,
       to_number(to_char(sc.cov_effectivedate,'yyyymmdd')) COVERAGEEFFECTIVEDATE_ID,
       to_number(to_char(sc.cov_expirationdate,'yyyymmdd')) COVERAGEEXPIRATIONDATE_ID,       
       sc.cov_type,
       sc.cov_code,
       sc.cov_name,
       sc.cov_description,
       sc.cov_subcode,
       sc.cov_subcodename,
       sc.cov_subcodedescription,
       sc.cov_classcode,
       sc.cov_classcodedescription,
       sc.cov_classsubcode,
       sc.cov_asl,
       sc.cov_subline
FROM   tmp_ftt_trans_detail f,
       stg_coverage         sc
WHERE  sc.coverage_uniqueid = f.coverage_uniqueid
AND    sc.cov_transactioneffectivedate &lt;= f.ft_transactioneffectivedate
AND    trunc(sc.cov_transactionaccountingdate) &lt;= f.ft_accountingdate) x) sc
WHERE  sc.pick1 = 1;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>622</xloc>
      <yloc>87</yloc>
    </entry>
    <entry>
      <name>Drop tmp_ftt_lkup_stg_coverage1</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_ftt_lkup_stg_coverage1 purge;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>457</xloc>
      <yloc>28</yloc>
    </entry>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>Y</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>77</xloc>
      <yloc>315</yloc>
    </entry>
    <entry>
      <name>If exists tmp_ftt_lkup_stg_coverage2</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_ftt_lkup_stg_coverage2</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>309</xloc>
      <yloc>192</yloc>
    </entry>
    <entry>
      <name>Create tmp_ftt_lkup_stg_coverage2</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_ftt_lkup_stg_coverage2 nologging PCTFREE 0 
tablespace ${G_STAGING_DB_DATA}
as
SELECT sc.sk_recordnum,
       sc.cov_transactionaccountingdate,
       sc.cov_effectivedate,
       sc.cov_expirationdate,
       sc.COVERAGEEFFECTIVEDATE_ID,
       sc.COVERAGEEXPIRATIONDATE_ID,
       sc.cov_type,
       sc.cov_code,
       sc.cov_name,
       sc.cov_description,
       sc.cov_subcode,
       sc.cov_subcodename,
       sc.cov_subcodedescription,
       sc.cov_classcode,
       sc.cov_classcodedescription,
       sc.cov_classsubcode,
       sc.cov_asl,
       sc.cov_subline
FROM (       
SELECT x.*,
       row_number() OVER (PARTITION BY x.sk_recordnum ORDER BY x.cov_transactionaccountingdate desc, 
                                                               x.stgcoverage_id DESC) pick1
FROM 
(SELECT /*+ use_hash (f, sc) */
       f.sk_recordnum,
       sc.stgcoverage_id,
       sc.cov_transactionaccountingdate,
       sc.cov_effectivedate,
       sc.cov_expirationdate,
       to_number(to_char(sc.cov_effectivedate,'yyyymmdd')) COVERAGEEFFECTIVEDATE_ID,
       to_number(to_char(sc.cov_expirationdate,'yyyymmdd')) COVERAGEEXPIRATIONDATE_ID,          
       sc.cov_type,
       sc.cov_code,
       sc.cov_name,
       sc.cov_description,
       sc.cov_subcode,
       sc.cov_subcodename,
       sc.cov_subcodedescription,
       sc.cov_classcode,
       sc.cov_classcodedescription,
       sc.cov_classsubcode,
       sc.cov_asl,
       sc.cov_subline
FROM   tmp_ftt_trans_detail f,
       stg_coverage         sc
WHERE  sc.coverage_uniqueid = f.coverage_uniqueid
AND    trunc(sc.cov_transactionaccountingdate) &lt;= f.ft_accountingdate) x) sc
WHERE  sc.pick1 = 1;

-- Issue #164949
-- Add following logic to get data from stg_coverage without comparing coverage date with FM transaction accounting date.

INSERT INTO tmp_ftt_lkup_stg_coverage2
SELECT sc.sk_recordnum,
       sc.cov_transactionaccountingdate,
       sc.cov_effectivedate,
       sc.cov_expirationdate,
       sc.COVERAGEEFFECTIVEDATE_ID,
       sc.COVERAGEEXPIRATIONDATE_ID,
       sc.cov_type,
       sc.cov_code,
       sc.cov_name,
       sc.cov_description,
       sc.cov_subcode,
       sc.cov_subcodename,
       sc.cov_subcodedescription,
       sc.cov_classcode,
       sc.cov_classcodedescription,
       sc.cov_classsubcode,
       sc.cov_asl,
       sc.cov_subline
FROM (       
SELECT x.*,
       row_number() OVER (PARTITION BY x.sk_recordnum ORDER BY x.cov_transactionaccountingdate desc, 
                                                               x.stgcoverage_id DESC) pick1
FROM 
      (SELECT /*+ use_hash (f, sc) */
              f.sk_recordnum,
              sc.stgcoverage_id,
              sc.cov_transactionaccountingdate,
              sc.cov_effectivedate,
              sc.cov_expirationdate,
              to_number(to_char(sc.cov_effectivedate,'yyyymmdd')) COVERAGEEFFECTIVEDATE_ID,
              to_number(to_char(sc.cov_expirationdate,'yyyymmdd')) COVERAGEEXPIRATIONDATE_ID,          
              sc.cov_type,
              sc.cov_code,
              sc.cov_name,
              sc.cov_description,
              sc.cov_subcode,
              sc.cov_subcodename,
              sc.cov_subcodedescription,
              sc.cov_classcode,
              sc.cov_classcodedescription,
              sc.cov_classsubcode,
              sc.cov_asl,
              sc.cov_subline
       FROM   tmp_ftt_trans_detail f,
              stg_coverage         sc
       WHERE  sc.coverage_uniqueid = f.coverage_uniqueid
       AND    NOT EXISTS
              (SELECT 1 
               FROM   tmp_ftt_lkup_stg_coverage2 c
               WHERE  c.sk_recordnum = f.sk_recordnum)
       ) x
     ) sc
WHERE  sc.pick1 = 1;

commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>622</xloc>
      <yloc>192</yloc>
    </entry>
    <entry>
      <name>Drop tmp_ftt_lkup_stg_coverage2</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_ftt_lkup_stg_coverage2 purge;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>461</xloc>
      <yloc>133</yloc>
    </entry>
    <entry>
      <name>If exists tmp_ftt_help_assign_prd</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_ftt_help_assign_prd</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>309</xloc>
      <yloc>315</yloc>
    </entry>
    <entry>
      <name>Create tmp_ftt_help_assign_prd</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_ftt_help_assign_prd nologging PCTFREE 0 
tablespace ${G_STAGING_DB_DATA}
as
SELECT /*+ use_hash(i, sp) */
       i.sk_recordnum,
       DECODE(i.ft_typecode,'AGENTCOMM',i.agent_producer_uniqueid,sp.pol_produceruniqueid) producer_uniqueid
FROM   tmp_ftt_trans_detail i,
       tmp_ftt_lkup_stg_policy sp
WHERE  i.sk_recordnum = sp.sk_recordnum;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>622</xloc>
      <yloc>315</yloc>
    </entry>
    <entry>
      <name>Drop tmp_ftt_help_assign_prd</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_ftt_help_assign_prd purge;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>461</xloc>
      <yloc>243</yloc>
    </entry>
    <entry>
      <name>If exists tmp_ftt_lkup_stg_risk</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_ftt_lkup_stg_risk</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>309</xloc>
      <yloc>423</yloc>
    </entry>
    <entry>
      <name>Create tmp_ftt_lkup_stg_risk</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_ftt_lkup_stg_risk nologging PCTFREE 0 
tablespace ${G_STAGING_DB_DATA}
as
SELECT sr.sk_recordnum,
       sr.rsk_territorycode,
       sr.rsk_territoryname
FROM (       
        SELECT x.*,
               row_number() OVER (PARTITION BY x.sk_recordnum 
               ORDER BY x.rsk_transactionaccountingdate desc, x.stgrisk_id DESC) pick1
        FROM  (SELECT /*+ use_hash (t, sr) */
                     t.sk_recordnum,
                     sr.stgrisk_id,
                     sr.rsk_territorycode,
                     sr.rsk_territoryname,
                     sr.rsk_transactionaccountingdate
              FROM   tmp_ftt_trans_detail t,
                     stg_risk             sr
              WHERE  sr.risk_uniqueid = t.primaryrisk_uniqueid
              AND    trunc(sr.rsk_transactionaccountingdate) &lt;= t.ft_accountingdate) x
       ) sr
WHERE  sr.pick1 = 1;

-- Issue #164949
-- Add following logic to get data from stg_risk without comparing risk date with FM transaction accounting date.


SELECT sr.sk_recordnum,
       sr.rsk_territorycode,
       sr.rsk_territoryname
FROM (       
        SELECT x.*,
               row_number() OVER (PARTITION BY x.sk_recordnum 
               ORDER BY x.rsk_transactionaccountingdate desc, x.stgrisk_id DESC) pick1
        FROM  (SELECT /*+ use_hash (t, sr) */
                     t.sk_recordnum,
                     sr.stgrisk_id,
                     sr.rsk_territorycode,
                     sr.rsk_territoryname,
                     sr.rsk_transactionaccountingdate
              FROM   tmp_ftt_trans_detail t,
                     stg_risk             sr
              WHERE  sr.risk_uniqueid = t.primaryrisk_uniqueid
              AND    NOT EXISTS 
                     (SELECT 1 
                      FROM   tmp_ftt_lkup_stg_risk r
                      WHERE  r.sk_recordnum = t.sk_recordnum)
              ) x
       ) sr
WHERE  sr.pick1 = 1;

commit;
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>622</xloc>
      <yloc>423</yloc>
    </entry>
    <entry>
      <name>Drop tmp_ftt_lkup_stg_risk</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_ftt_lkup_stg_risk purge;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>461</xloc>
      <yloc>365</yloc>
    </entry>
    <entry>
      <name>If exists tmp_ftt_lkup_stg_account</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_ftt_lkup_stg_account</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>309</xloc>
      <yloc>528</yloc>
    </entry>
    <entry>
      <name>Create tmp_ftt_lkup_stg_account</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_ftt_lkup_stg_account nologging PCTFREE 0 
tablespace ${G_STAGING_DB_DATA}
as
SELECT sa.sk_recordnum,
       sa.accountholder_uniqueid,
       sa.billingcompany_uniqueid,
       sa.ACCTCOMPANY_UNIQUEID
FROM (       
      SELECT x.*,
             row_number() OVER (PARTITION BY x.sk_recordnum ORDER BY x.stgaccount_id DESC) pick1
      FROM 
            (SELECT 
                   t.sk_recordnum,
                   sa.stgaccount_id,
                   sa.accountholder_uniqueid,
                   sa.billingcompany_uniqueid,
                   sa.billingcompany_uniqueid ACCTCOMPANY_UNIQUEID
            FROM   tmp_ftt_trans_detail t,
                   stg_account          sa
            WHERE  sa.account_uniqueid = t.account1_uniqueid
            AND    TRUNC(sa.acct_changeeffectivedate) &lt;= t.ft_accountingdate) x
      ) sa
WHERE  sa.pick1 = 1;
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>626</xloc>
      <yloc>528</yloc>
    </entry>
    <entry>
      <name>Drop tmp_ftt_lkup_stg_account</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_ftt_lkup_stg_account purge;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>465</xloc>
      <yloc>470</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>If exists tmp_ftt_lkup_stg_coverage1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_coverage1</from>
      <to>Drop tmp_ftt_lkup_stg_coverage1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Drop tmp_ftt_lkup_stg_coverage1</from>
      <to>Create tmp_ftt_lkup_stg_coverage1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_coverage1</from>
      <to>Create tmp_ftt_lkup_stg_coverage1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>If exists tmp_ftt_lkup_stg_coverage2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_coverage2</from>
      <to>Drop tmp_ftt_lkup_stg_coverage2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Drop tmp_ftt_lkup_stg_coverage2</from>
      <to>Create tmp_ftt_lkup_stg_coverage2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_coverage2</from>
      <to>Create tmp_ftt_lkup_stg_coverage2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_help_assign_prd</from>
      <to>Drop tmp_ftt_help_assign_prd</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Drop tmp_ftt_help_assign_prd</from>
      <to>Create tmp_ftt_help_assign_prd</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_help_assign_prd</from>
      <to>Create tmp_ftt_help_assign_prd</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>If exists tmp_ftt_help_assign_prd</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>If exists tmp_ftt_lkup_stg_risk</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_risk</from>
      <to>Drop tmp_ftt_lkup_stg_risk</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Drop tmp_ftt_lkup_stg_risk</from>
      <to>Create tmp_ftt_lkup_stg_risk</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_risk</from>
      <to>Create tmp_ftt_lkup_stg_risk</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>If exists tmp_ftt_lkup_stg_account</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_account</from>
      <to>Drop tmp_ftt_lkup_stg_account</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Drop tmp_ftt_lkup_stg_account</from>
      <to>Create tmp_ftt_lkup_stg_account</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_account</from>
      <to>Create tmp_ftt_lkup_stg_account</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>JobRestart</name>
      <attribute>
        <key>UniqueConnections</key>
        <value>N</value>
      </attribute>
    </group>
  </attributes>
</job>
