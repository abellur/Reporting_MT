<job>
  <name>SBJ_FT_Create_Drive_Tables</name>
  <description>Create main temp tables for Fact_Financialtransaction load.</description>
  <extended_description>Date         By     Description
04/21/2016   Jma    Issue #164949. Add logic to Create tmp_ftt_lkup_stg_policy step to get data from 
                    stg_policy without comparing policy date with FM transaction accounting date.
 </extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/public/ETL/Facts/Sub-Jobs</directory>
  <created_user>-</created_user>
  <created_date>2014/10/23 17:07:56.715</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/07/30 23:24:06.006</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>4SBI_Staging</name>
    <server>${G_STAGING_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_STAGING_DB_NAME}</database>
    <port>${G_STAGING_DB_PORT}</port>
    <username>${G_STAGING_DB_USERNAME}</username>
    <password>${G_STAGING_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_STAGING_DB_DATA}</data_tablespace>
    <index_tablespace>${G_STAGING_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_STAGING_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    <slaveserver>
      <name>4Sight BI - PDI Server</name>
      <hostname>10.0.0.21</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Carte 1</name>
      <hostname>localhost</hostname>
      <port>9081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>DI Server</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_DEV</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_SERVER</name>
      <hostname>http://magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_TEST</name>
      <hostname>magspentahotest</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_BTS</name>
      <hostname>129.144.25.104</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_DEV</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Master</name>
      <hostname>localhost</hostname>
      <port>8081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SERVER1</name>
      <hostname>LOCALHOST</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE ONE</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4a418bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE TWO</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave1</name>
      <hostname>localhost</hostname>
      <port>8082</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave2</name>
      <hostname>localhost</hostname>
      <port>8083</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave3</name>
      <hostname>localhost</hostname>
      <port>8084</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>local DIS</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>magspentahodev</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
  </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <checkpoint-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <max_nr_retries/>
    <run_retry_period/>
    <namespace_parameter/>
    <save_parameters/>
    <save_result_rows/>
    <save_result_files/>
    <field>
      <id>ID_JOB_RUN</id>
      <enabled>Y</enabled>
      <name>ID_JOB_RUN</name>
    </field>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>NAMESPACE</id>
      <enabled>Y</enabled>
      <name>NAMESPACE</name>
    </field>
    <field>
      <id>CHECKPOINT_NAME</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_NAME</name>
    </field>
    <field>
      <id>CHECKPOINT_COPYNR</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_COPYNR</name>
    </field>
    <field>
      <id>ATTEMPT_NR</id>
      <enabled>Y</enabled>
      <name>ATTEMPT_NR</name>
    </field>
    <field>
      <id>JOB_RUN_START_DATE</id>
      <enabled>Y</enabled>
      <name>JOB_RUN_START_DATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>RESULT_XML</id>
      <enabled>Y</enabled>
      <name>RESULT_XML</name>
    </field>
    <field>
      <id>PARAMETER_XML</id>
      <enabled>Y</enabled>
      <name>PARAMETER_XML</name>
    </field>
  </checkpoint-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>59</xloc>
      <yloc>100</yloc>
    </entry>
    <entry>
      <name>If exists tmp_ftt_trans_detail</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_ftt_trans_detail</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>234</xloc>
      <yloc>100</yloc>
    </entry>
    <entry>
      <name>Create tmp_ftt_trans_detail</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_ftt_trans_detail nologging PCTFREE 0 
tablespace ${G_STAGING_DB_DATA}
as
SELECT ROWNUM sk_recordnum,
       f.FILE_VERSION,
       f.SOURCE_SYSTEM,
       f.EXTRACT_DATE,
       f.FINANCIALTRANSACTION_UNIQUEID,
       f.ACCOUNT1_UNIQUEID,
       f.ACCOUNT2_UNIQUEID,
       f.SUBACCOUNT_UNIQUEID,
       f.ISSUINGCOMPANY_UNIQUEID,
       f.POLICY_UNIQUEID,
       f.PRIMARYRISK_UNIQUEID,
	     f.SECONDARYRISK_UNIQUEID,
	     f.RISKRELATIONSHIP_UNIQUEID,
       f.COVERAGE_UNIQUEID,
       f.CLAIM_UNIQUEID,
       f.BATCH_UNIQUEID,
       f.PAYMENTDETAIL_UNIQUEID,
       f.TRANSACTIONBASIS_UNIQUEID,
      (select tb.TRANSACTIONBASIS_ID 
	     from   DIM_TRANSACTIONBASIS tb 
	     where tb.TRANSACTIONBASIS_UNIQUEID = f.TRANSACTIONBASIS_UNIQUEID) TRANSACTIONBASIS_ID,
       f.INVOICE_UNIQUEID,
      (select i.INVOICE_ID 
	     from   DIM_INVOICE i 
	     where  i.INVOICE_UNIQUEID =f.INVOICE_UNIQUEID) INVOICE_ID,
       f.FINANCIALGROUP_UNIQUEID,
      (select fg.FINANCIALGROUP_ID 
	     from   DIM_FINANCIALGROUP fg 
	     where  fg.FINANCIALGROUP_UNIQUEID = f.FINANCIALGROUP_UNIQUEID ) FINANCIALGROUP_ID,
       f.ORIGINALTRANSACTION_UNIQUEID,
       NVL(f.ORIGINALTRANSACTIONCODE,'UNKNOWN') ORIGINALTRANSACTIONCODE,
       f.PRODUCER_UNIQUEID AGENT_PRODUCER_UNIQUEID,
       f.BOOKEDTERMEFFECTIVEDATE,
       nvl(to_number(to_char(f.BOOKEDTERMEFFECTIVEDATE,'YYYYMMDD')),19000101) BOOKEFFECTIVEDATE_ID,
       f.BOOKEDTERMEXPIRATIONDATE,
       nvl(to_number(to_char(f.BOOKEDTERMEXPIRATIONDATE,'YYYYMMDD')),19000101) BOOKEXPIRATIONDATE_ID,
       f.FT_INSTALLMENTNUMBER,
       f.FT_FINANCIALTERMNAME,
      (select fn.FINANCIALTERMS_ID 
	     from   DIM_FINANCIALTERMS fn 
	     where  fn.FTERM_NAME=f.FT_FINANCIALTERMNAME) FINANCIALTERMS_ID,
       f.FT_ACCOUNTINGDATE,
       nvl(to_number(to_char(f.FT_ACCOUNTINGDATE,'YYYYMMDD')),19000101) ACCOUNTINGDATE_ID,
       f.FT_TRANSACTIONEFFECTIVEDATE,
       nvl(to_number(to_char(f.FT_TRANSACTIONEFFECTIVEDATE,'YYYYMMDD')),19000101) EFFECTIVEDATE_ID,    
	     FT_DUEDATE,
	     nvl(to_number(to_char(f.FT_DUEDATE,'YYYYMMDD')),19000101) DUEDATE_ID,
       f.FT_AGINGSTARTDATE,
       nvl(to_number(to_char(f.FT_AGINGSTARTDATE,'YYYYMMDD')),19000101) AGINGSTARTDATE_ID,
       f.FT_INVOICEDATE,
       nvl(to_number(to_char(f.FT_INVOICEDATE,'YYYYMMDD')),19000101) INVOICEDATE_ID,
       f.FT_TYPECODE,
       f.FT_TYPESUBCODE,
       f.FT_STATUS,
       f.FT_SEQUENCE,
       f.FT_REFERENCENUMBER,
       f.FT_BASEAMOUNT,
       f.FT_AMOUNT,
       f.LOADDATE,
       f.TRANSACTION_SOURCE,
       5 INVOICETRANSACTIONSTATUS_ID,
       ft.financialtransactiontype_id,
       f.Source_Record_Uniqueid
FROM   STG_FINANCIALTRANSACTION     f,
       DIM_FINANCIALTRANSACTIONTYPE ft
WHERE  f.ft_typecode = ft.ftrans_code(+)
AND    f.ft_typesubcode = ft.ftrans_subcode(+)       
AND    f.loaddate = ${sql_loadDate} 
ORDER BY f.FT_ACCOUNTINGDATE, f.FT_SEQUENCE;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>487</xloc>
      <yloc>100</yloc>
    </entry>
    <entry>
      <name>Drop tmp_ftt_trans_detail</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_ftt_trans_detail purge;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>342</xloc>
      <yloc>39</yloc>
    </entry>
    <entry>
      <name>If exists tmp_ftt_lkup_stg_policy</name>
      <description/>
      <type>TABLE_EXISTS</type>
      <tablename>tmp_ftt_lkup_stg_policy</tablename>
      <schemaname/>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>697</xloc>
      <yloc>100</yloc>
    </entry>
    <entry>
      <name>Create tmp_ftt_lkup_stg_policy</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_ftt_lkup_stg_policy nologging PCTFREE 0 
tablespace ${G_STAGING_DB_DATA}
as
SELECT sp.sk_recordnum,
       sp.stgpolicy_id,
       sp.product_uniqueid,
       sp.POL_PRODUCERUNIQUEID,
       sp.subproducer_uniqueid,
       sp.underwriter_uniqueid,
       sp.pol_policynumberprefix,
       sp.pol_policynumber,
       sp.pol_policynumbersuffix,
       sp.pol_effectivedate,
       sp.pol_expirationdate,
       sp.POLICYEFFECTIVEDATE_ID,
       sp.POLICYEXPIRATIONDATE_ID,
       sp.firstinsured_uniqueid
FROM (       
SELECT x.*,
       row_number() OVER (PARTITION BY x.sk_recordnum ORDER BY x.POL_CHANGEEFFECTIVEDATE desc, x.stgpolicy_id DESC) pick1
FROM 
(SELECT /*+ use_hash (f, sp) */
       f.sk_recordnum,
       sp.stgpolicy_id,
       sp.product_uniqueid,
       sp.producer_uniqueid POL_PRODUCERUNIQUEID,
       sp.subproducer_uniqueid,
       sp.underwriter_uniqueid,
       sp.pol_policynumberprefix,
       sp.pol_policynumber,
       sp.pol_policynumbersuffix,
       sp.pol_effectivedate,
       sp.pol_expirationdate,
       to_number(to_char(sp.pol_effectivedate,'yyyymmdd')) POLICYEFFECTIVEDATE_ID,
       to_number(to_char(sp.pol_expirationdate,'yyyymmdd')) POLICYEXPIRATIONDATE_ID,
       sp.firstinsured_uniqueid,
       sp.pol_changeeffectivedate
FROM   tmp_ftt_trans_detail f,
       stg_policy           sp
WHERE  sp.policy_uniqueid = f.policy_uniqueid
AND    sp.pol_changeeffectivedate &lt;= f.ft_accountingdate) x) sp
WHERE  sp.pick1 = 1;

-- Issue #164949
-- Add following logic to get data from stg_policy without comparing policy date with FM transaction accounting date.
INSERT INTO tmp_ftt_lkup_stg_policy 
SELECT sp.sk_recordnum,
       sp.stgpolicy_id,
       sp.product_uniqueid,
       sp.POL_PRODUCERUNIQUEID,
       sp.subproducer_uniqueid,
       sp.underwriter_uniqueid,
       sp.pol_policynumberprefix,
       sp.pol_policynumber,
       sp.pol_policynumbersuffix,
       sp.pol_effectivedate,
       sp.pol_expirationdate,
       sp.POLICYEFFECTIVEDATE_ID,
       sp.POLICYEXPIRATIONDATE_ID,
       sp.firstinsured_uniqueid
FROM (       
SELECT x.*,
       row_number() OVER (PARTITION BY x.sk_recordnum ORDER BY x.POL_CHANGEEFFECTIVEDATE desc, x.stgpolicy_id DESC) pick1
FROM 
(SELECT /*+ use_hash (f, sp) */
       f.sk_recordnum,
       sp.stgpolicy_id,
       sp.product_uniqueid,
       sp.producer_uniqueid POL_PRODUCERUNIQUEID,
       sp.subproducer_uniqueid,
       sp.underwriter_uniqueid,
       sp.pol_policynumberprefix,
       sp.pol_policynumber,
       sp.pol_policynumbersuffix,
       sp.pol_effectivedate,
       sp.pol_expirationdate,
       to_number(to_char(sp.pol_effectivedate,'yyyymmdd')) POLICYEFFECTIVEDATE_ID,
       to_number(to_char(sp.pol_expirationdate,'yyyymmdd')) POLICYEXPIRATIONDATE_ID,
       sp.firstinsured_uniqueid,
       sp.pol_changeeffectivedate
FROM   tmp_ftt_trans_detail f,
       stg_policy           sp
WHERE  sp.policy_uniqueid = f.policy_uniqueid
AND    NOT EXISTS 
       (SELECT 1 
        FROM   tmp_ftt_lkup_stg_policy p 
        WHERE  p.sk_recordnum = f.sk_recordnum)
       ) x) sp
WHERE  sp.pick1 = 1;


-- Add following logic for transactions link to Velocity policy.
INSERT /*+ append */ INTO tmp_ftt_lkup_stg_policy 
SELECT sp1.sk_recordnum,
       sp1.vlstgpolicy_id,
       sp1.product_uniqueid,
       sp1.POL_PRODUCERUNIQUEID,
       sp1.subproducer_uniqueid,
       sp1.underwriter_uniqueid,
       sp1.pol_policynumberprefix,
       sp1.pol_policynumber,
       sp1.pol_policynumbersuffix,
       sp1.pol_effectivedate,
       sp1.pol_expirationdate,
       sp1.POLICYEFFECTIVEDATE_ID,
       sp1.POLICYEXPIRATIONDATE_ID,
       sp1.firstinsured_uniqueid
FROM (       
SELECT x.*,
       row_number() OVER (PARTITION BY x.sk_recordnum ORDER BY x.change_effective_date desc, x.vlstgpolicy_id DESC) pick1
FROM 
(SELECT /*+ use_hash (f, sp) */
       f.sk_recordnum,
       sp.vlstgpolicy_id,
       '' product_uniqueid,
       f.agent_producer_uniqueid POL_PRODUCERUNIQUEID,
       spt.agent_uniqueid subproducer_uniqueid,
       spv.underwriter_uniqueid underwriter_uniqueid,
       '' pol_policynumberprefix,
       sp.policy_number pol_policynumber,
       '' pol_policynumbersuffix,
       spt.term_start_date pol_effectivedate,
       spt.term_end_date pol_expirationdate,
       to_number(to_char(spt.term_start_date,'yyyymmdd')) POLICYEFFECTIVEDATE_ID,
       to_number(to_char(spt.term_end_date,'yyyymmdd')) POLICYEXPIRATIONDATE_ID,
       spv.nameinsured_uniqueid firstinsured_uniqueid,
       sp.change_effective_date 
FROM   tmp_ftt_trans_detail f,
       vl_stg_policy        sp,
       vl_stg_policyterm    spt,
       vl_stg_policyversion spv
WHERE  sp.policy_number || '^' || spt.policyterm_uniqueid = f.policy_uniqueid
AND    sp.policyversion_uniqueid = spt.policyversion_uniqueid
AND    sp.transaction_uniqueid = spt.transaction_uniqueid
AND    spv.policyversion_uniqueid = spt.policyversion_uniqueid
AND    spv.transaction_uniqueid = spt.transaction_uniqueid
AND    sp.change_effective_date &lt;= f.ft_accountingdate) x) sp1
WHERE  sp1.pick1 = 1;

commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>962</xloc>
      <yloc>100</yloc>
    </entry>
    <entry>
      <name>Drop tmp_ftt_lkup_stg_policy</name>
      <description/>
      <type>SQL</type>
      <sql>drop table tmp_ftt_lkup_stg_policy purge;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>817</xloc>
      <yloc>39</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>If exists tmp_ftt_trans_detail</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_trans_detail</from>
      <to>Drop tmp_ftt_trans_detail</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_trans_detail</from>
      <to>Create tmp_ftt_trans_detail</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Drop tmp_ftt_trans_detail</from>
      <to>Create tmp_ftt_trans_detail</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create tmp_ftt_trans_detail</from>
      <to>If exists tmp_ftt_lkup_stg_policy</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_policy</from>
      <to>Drop tmp_ftt_lkup_stg_policy</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>If exists tmp_ftt_lkup_stg_policy</from>
      <to>Create tmp_ftt_lkup_stg_policy</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Drop tmp_ftt_lkup_stg_policy</from>
      <to>Create tmp_ftt_lkup_stg_policy</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>JobRestart</name>
      <attribute>
        <key>UniqueConnections</key>
        <value>N</value>
      </attribute>
    </group>
  </attributes>
</job>
