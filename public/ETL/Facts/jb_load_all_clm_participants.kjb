<job>
  <name>jb_load_all_clm_participants</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/public/ETL/Facts</directory>
  <created_user>-</created_user>
  <created_date>2014/10/15 13:07:46.889</created_date>
  <modified_user>admin</modified_user>
  <modified_date>2018/11/02 17:16:50.950</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>4SBI_Staging</name>
    <server>${G_STAGING_DB_HOST}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${G_STAGING_DB_NAME}</database>
    <port>${G_STAGING_DB_PORT}</port>
    <username>${G_STAGING_DB_USERNAME}</username>
    <password>${G_STAGING_DB_PWD}</password>
    <servername/>
    <data_tablespace>${G_STAGING_DB_DATA}</data_tablespace>
    <index_tablespace>${G_STAGING_DB_INDEX}</index_tablespace>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${G_STAGING_DB_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    <slaveserver>
      <name>4Sight BI - PDI Server</name>
      <hostname>10.0.0.21</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Carte 1</name>
      <hostname>localhost</hostname>
      <port>9081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>DI Server</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>joe</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_DEV</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_SERVER</name>
      <hostname>http://magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>shota</username>
      <password>Encrypted 2be98afc86aa7f2e4cb79ce63d69dbbdb</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_ETL_TEST</name>
      <hostname>magspentahotest</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO</name>
      <hostname>magspentaho</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_BTS</name>
      <hostname>129.144.25.104</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>MM_PENTAHO_DEV</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Master</name>
      <hostname>localhost</hostname>
      <port>8081</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SERVER1</name>
      <hostname>LOCALHOST</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE ONE</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4a418bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>SLAVE TWO</name>
      <hostname>192.168.2.101</hostname>
      <port>3306</port>
      <webAppName/>
      <username>root</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave1</name>
      <hostname>localhost</hostname>
      <port>8082</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave2</name>
      <hostname>localhost</hostname>
      <port>8083</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>Slave3</name>
      <hostname>localhost</hostname>
      <port>8084</port>
      <webAppName/>
      <username>cluster</username>
      <password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>local DIS</name>
      <hostname>localhost</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>N</master>
      <sslMode>N</sslMode>
    </slaveserver>
    <slaveserver>
      <name>magspentahodev</name>
      <hostname>magspentahodev</hostname>
      <port>9080</port>
      <webAppName>pentaho-di</webAppName>
      <username>admin</username>
      <password>Encrypted 2be98afc86aa7f2e4bb18bd63c99dbdde</password>
      <proxy_hostname/>
      <proxy_port/>
      <non_proxy_hosts/>
      <master>Y</master>
      <sslMode>N</sslMode>
    </slaveserver>
  </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <checkpoint-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <max_nr_retries/>
    <run_retry_period/>
    <namespace_parameter/>
    <save_parameters/>
    <save_result_rows/>
    <save_result_files/>
    <field>
      <id>ID_JOB_RUN</id>
      <enabled>Y</enabled>
      <name>ID_JOB_RUN</name>
    </field>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>NAMESPACE</id>
      <enabled>Y</enabled>
      <name>NAMESPACE</name>
    </field>
    <field>
      <id>CHECKPOINT_NAME</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_NAME</name>
    </field>
    <field>
      <id>CHECKPOINT_COPYNR</id>
      <enabled>Y</enabled>
      <name>CHECKPOINT_COPYNR</name>
    </field>
    <field>
      <id>ATTEMPT_NR</id>
      <enabled>Y</enabled>
      <name>ATTEMPT_NR</name>
    </field>
    <field>
      <id>JOB_RUN_START_DATE</id>
      <enabled>Y</enabled>
      <name>JOB_RUN_START_DATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>RESULT_XML</id>
      <enabled>Y</enabled>
      <name>RESULT_XML</name>
    </field>
    <field>
      <id>PARAMETER_XML</id>
      <enabled>Y</enabled>
      <name>PARAMETER_XML</name>
    </field>
  </checkpoint-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>Create mon sum part1</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part1  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_1}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_1}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part1
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part1 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_1}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_1}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_1}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>84</xloc>
      <yloc>12</yloc>
    </entry>
    <entry>
      <name>Create mon sum part2</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part2  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_2}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_2}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part2
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part2 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_2}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_2}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_2}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>200</xloc>
      <yloc>66</yloc>
    </entry>
    <entry>
      <name>Create mon sum part3</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part3  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_3}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_3}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part3
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part3 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_3}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_3}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_3}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>331</xloc>
      <yloc>104</yloc>
    </entry>
    <entry>
      <name>Create mon sum part5</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part5  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_5}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_5}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part5
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part5 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_5}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_5}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_5}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>568</xloc>
      <yloc>194</yloc>
    </entry>
    <entry>
      <name>Create mon sum part4</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part4  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_4}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_4}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part4
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part4 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_4}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_4}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_4}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>442</xloc>
      <yloc>143</yloc>
    </entry>
    <entry>
      <name>Create mon sum part6</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part6  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_6}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_6}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part6
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part6 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_6}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_6}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_6}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>581</xloc>
      <yloc>527</yloc>
    </entry>
    <entry>
      <name>Create mon sum part7</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part7  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_7}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_7}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part7
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part7 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_7}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_7}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_7}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>467</xloc>
      <yloc>575</yloc>
    </entry>
    <entry>
      <name>Create mon sum part8</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part8  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_8}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_8}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part8
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part8 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_8}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_8}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_8}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>339</xloc>
      <yloc>621</yloc>
    </entry>
    <entry>
      <name>Create mon sum part9</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part9  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_9}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_9}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part9
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part9 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_9}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_9}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_9}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>218</xloc>
      <yloc>665</yloc>
    </entry>
    <entry>
      <name>Create mon sum part10</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part10  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_10}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_10}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part10
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part10 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_10}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_10}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_10}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>84</xloc>
      <yloc>710</yloc>
    </entry>
    <entry>
      <name>Create mon sum adj</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_adj  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${ADJUSTER_CODE}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${ADJUSTER_CODE}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_adj
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_adj cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${ADJUSTER_CODE}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${ADJUSTER_CODE}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${ADJUSTER_CODE}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>621</xloc>
      <yloc>294</yloc>
    </entry>
    <entry>
      <name>Create mon sum contact</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_contact  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${CONTACT_CODE}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${CONTACT_CODE}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_contact
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_contact cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${CONTACT_CODE}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${CONTACT_CODE}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${CONTACT_CODE}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>625</xloc>
      <yloc>406</yloc>
    </entry>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>Y</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>84</xloc>
      <yloc>362</yloc>
    </entry>
    <entry>
      <name>Create tmp insured</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_insured nologging pctfree 0
       tablespace ${G_STAGING_DB_DATA} as
SELECT max(le.legalentity_id) firstinsured_id,
       lenty_role er_role_type_code,
       to_number(substr(stg.claim_uniqueid,1,instr(stg.claim_uniqueid,'^') - 1)) claim_fk,
       stg.claim_uniqueid
  from tmp_clm_mon_sum_clm_stg stg,
       dim_legalentity le
 where stg.insured_uniqueid = le.lenty_uniqueid
   and lenty_role         = 'INSURED'
   and le.valid_fromdate &lt;= ${sql_periodEndDate}
   and le.valid_todate   >  ${sql_periodEndDate}
   group by lenty_role,
            stg.claim_uniqueid;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>584</xloc>
      <yloc>610</yloc>
    </entry>
    <entry>
      <name>Create tmp claimant</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_CLAIMANT nologging pctfree 0
       tablespace ${G_STAGING_DB_DATA} as
SELECT max(le.legalentity_id) claimant_id,
       lenty_role er_role_type_code,
       to_number(substr(stg.claim_uniqueid,1,instr(stg.claim_uniqueid,'^') - 1)) claim_fk,
       stg.claim_uniqueid
  from tmp_clm_mon_sum_clm_stg stg,
       dim_legalentity le
 where stg.claimant_uniqueid = le.lenty_uniqueid
   and lenty_role         = 'CLAIMANT'
   and le.valid_fromdate &lt;= ${sql_periodEndDate}
   and le.valid_todate   >  ${sql_periodEndDate}
   group by lenty_role,
            stg.claim_uniqueid;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>471</xloc>
      <yloc>662</yloc>
    </entry>
    <entry>
      <name>Create tmp lossloc</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_lossloc nologging pctfree 0
       tablespace ${G_STAGING_DB_DATA} as
select claim_uniqueid,
       geography_id claimlosslocation_id
  from tmp_clm_mon_sum_clm_stg stg,
       dim_geography g
 where nvl(g.geo_city,'noCity')       = nvl(stg.clm_city,'noCity')
   and g.geo_state                    = stg.clm_state
   and nvl(g.geo_postalcode,'noCode') = nvl(stg.clm_postalcode,'noCode')
   and nvl(g.geo_county,'noCounty')   = nvl(stg.clm_county,'noCounty')
   and nvl(g.geo_country,'noCountry') = nvl(stg.clm_country,'noCountry');</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>347</xloc>
      <yloc>736</yloc>
    </entry>
    <entry>
      <name>Create mon sum part15</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part15 nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_15}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_15}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part15
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part15 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_15}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_15}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_15}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>578</xloc>
      <yloc>134</yloc>
    </entry>
    <entry>
      <name>Create mon sum part14</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part14 nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_14}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_14}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part14
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part14 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_14}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_14}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_14}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>670</xloc>
      <yloc>231</yloc>
    </entry>
    <entry>
      <name>Create mon sum part13</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part13 nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_13}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_13}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part13
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part13 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_13}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_13}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_13}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>680</xloc>
      <yloc>352</yloc>
    </entry>
    <entry>
      <name>Create mon sum part12</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part12 nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_12}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_12}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part12
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part12 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_12}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_12}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_12}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>707</xloc>
      <yloc>459</yloc>
    </entry>
    <entry>
      <name>Create mon sum part11</name>
      <description/>
      <type>SQL</type>
      <sql>create table tmp_clm_mon_sum_clm_part11  nologging
tablespace ${G_STAGING_DB_DATA}
as
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       max(dle.legalentity_id)  clmpart_id,
       er1.er_role_type_code, 
       t.claim_fk,
       t.claim_uniqueid
  fROM tmp_clm_mon_sum_clm_uid t,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
 WHERE er1.er_entity_fk = e.en_entity_pk
   AND er1.er_role_type_code = dle.lenty_type
   AND e.en_client_id = dle.lenty_uniqueid
   and er1.er_source_record_fk = t.claim_fk
   and er1.er_role_type_code = '${PART_CODE_11}'
   and er1.er_source_table_name = 'CLAIM'
   AND er1.entity_role_id =
       (SELECT MAX(er.entity_role_id)
          FROM Dim_Entity_Role er
         WHERE er.er_source_record_fk = t.claim_fk 
           AND er.er_role_type_code = '${PART_CODE_11}'
           AND trunc(er.er_effective_from_date) &lt;= ${sql_periodEndDate}
           AND decode(er.er_effective_to_date,
                      to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                      to_date('1/1/3000','mm/dd/yyyy'),
                      trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
                      )
   AND    dle.valid_fromdate &lt;= ${sql_periodEndDate}
   AND    dle.valid_todate   >  ${sql_periodEndDate}
   group by er1.er_role_type_code,
       t.claim_fk ,
       t.claim_uniqueid;
       
insert into tmp_clm_mon_sum_clm_part11
SELECT /* ordered  index(er1 in_dim_entity_role_source_fk ) */
       min(dle.legalentity_id) legalentity_id,
        er1.er_role_type_code,
        er1.er_source_record_fk,
        v.claim_uniqueid          
FROM   (select claim_fk,
               claim_uniqueid
          from tmp_clm_mon_sum_clm_uid mc
         where not exists(select 'x'
                    from tmp_clm_mon_sum_clm_part11 cid
                   where cid.claim_fk = mc.claim_fk)) v,
       Dim_Entity_Role er1,
       Dim_Entity e,
       Dim_Legalentity dle
WHERE  er1.er_entity_fk      = e.en_entity_pk
AND    er1.er_role_type_code = dle.lenty_type
AND    e.en_client_id        = dle.lenty_uniqueid
and    er1.er_source_record_fk = v.claim_fk
and    er1.er_source_table_name = 'CLAIM'
and    er1.er_role_type_code = '${PART_CODE_11}'
AND    er1.entity_role_id =
       (SELECT MIN(er.entity_role_id)
        FROM   Dim_Entity_Role er
        WHERE  er.er_source_record_fk = v.claim_fk
        AND    er.er_role_type_code   = '${PART_CODE_11}'
        AND    decode(er.er_effective_to_date,
                    to_date('1/1/1900 12:01:00 AM','mm/dd/yyyy HH:MI:SS AM'),
                    to_date('1/1/3000','mm/dd/yyyy'),
                    trunc(er.er_effective_to_date)) > ${sql_periodEndDate}
        AND    NOT EXISTS
               (SELECT 1
                FROM   Dim_Entity_Role er2
                WHERE  er2.er_source_record_fk            = v.claim_fk
                AND    er2.er_role_type_code              = '${PART_CODE_11}'
                AND    trunc(er2.er_effective_from_date) &lt;= ${sql_periodEndDate})
        )
AND    dle.valid_todate > ${sql_periodEndDate}
and    dle.valid_fromdate &lt;&gt; dle.valid_todate
group by er1.er_source_record_fk,
         er1.er_role_type_code,
           v.claim_uniqueid  ;
commit;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>4SBI_Staging</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>681</xloc>
      <yloc>520</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>Create mon sum part1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part10</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part5</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum adj</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum contact</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part6</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part7</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part8</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part9</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create tmp lossloc</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create tmp claimant</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create tmp insured</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part11</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part12</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part13</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part15</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Create mon sum part14</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
</job>
